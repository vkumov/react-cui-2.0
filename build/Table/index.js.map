{"version":3,"file":"index.js","sources":["../../src/Table/GenericTable.tsx","../../src/Table/DefaultTablePagination.tsx","../../src/Table/Table.tsx"],"sourcesContent":["import React, { forwardRef, type FC, type HTMLProps } from \"react\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { appendClass as ac } from \"src/utils\";\n\nconst Wrapper = <div className=\"responsive-table\" />;\n\nexport type GenericTableProps = {\n  outerWrap?: boolean;\n  lined?: boolean;\n  bordered?: boolean;\n  striped?: boolean;\n  selectable?: boolean;\n  fixed?: boolean;\n  wrapped?: boolean;\n  compressed?: boolean;\n  loose?: boolean;\n} & Partial<HTMLProps<HTMLTableElement>>;\n\nexport const GenericTable: FC<GenericTableProps> = forwardRef<\n  HTMLTableElement,\n  GenericTableProps\n>(\n  (\n    {\n      outerWrap = true,\n      lined = false,\n      bordered = false,\n      striped = false,\n      selectable = false,\n      fixed = false,\n      wrapped = false,\n      compressed = false,\n      loose = false,\n      className = null,\n      ...props\n    },\n    forwardedRef\n  ) => (\n    <ConditionalWrapper condition={outerWrap} wrapper={Wrapper}>\n      <table\n        className={`table${ac(lined, \"table--lined\")}${ac(\n          bordered,\n          \"table--bordered\"\n        )}${ac(striped, \"table--striped\")}${ac(\n          selectable,\n          \"table--selectable\"\n        )}${ac(fixed, \"table--fixed\")}${ac(wrapped, \"table--wrapped\")}${ac(\n          compressed,\n          \"table--compressed\"\n        )}${ac(loose, \"table--loose\")}${ac(className)}`}\n        {...props}\n        ref={forwardedRef}\n      />\n    </ConditionalWrapper>\n  )\n);\n","import React, { FC, ReactNode } from \"react\";\n\nimport { Dropdown, MenuElement } from \"src/Dropdown\";\nimport { Pagination } from \"src/Pagination\";\n\ntype DefaultTablePaginationProps = {\n  total: number;\n  position: number;\n  onPageChange: (e, position: number) => void;\n  onPerPageChange: (value: number) => void;\n  perPageUp?: boolean;\n  paginationProps?: {\n    size?: \"small\" | \"default\" | \"large\";\n    rounded?: boolean;\n    icons?: boolean;\n    next?: ReactNode;\n    prev?: ReactNode;\n    firstAndLast?: boolean;\n  };\n};\n\nexport const DefaultTablePagination: FC<DefaultTablePaginationProps> = ({\n  perPageUp = false,\n  paginationProps = {},\n  total,\n  position,\n  onPageChange,\n  onPerPageChange,\n}) => {\n  const [perPage, setPerPage] = React.useState<number>(50);\n\n  React.useEffect(() => {\n    if (typeof onPerPageChange === \"function\") onPerPageChange(perPage);\n  }, [perPage, onPerPageChange]);\n\n  return (\n    <div className=\"flex-middle\">\n      <span className=\"qtr-margin-right\">Page:</span>\n      <Pagination\n        firstAndLast\n        icons\n        perPage={perPage}\n        total={total}\n        position={position}\n        onPageChange={onPageChange}\n        beginAt={0}\n        className=\"no-margin-top\"\n        {...paginationProps}\n      />\n      <span className=\"text-muted qtr-margin-left qtr-margin-right\">|</span>\n      <span className=\"qtr-margin-right\">Per page:</span>\n      <Dropdown\n        label={<a>{perPage}</a>}\n        alwaysClose\n        placement={perPageUp ? \"top\" : undefined}\n      >\n        {[10, 25, 50, 100, 250, 500].map((v) => (\n          <MenuElement\n            onClick={() => setPerPage(v)}\n            key={v}\n            selected={v === perPage}\n          >\n            {v}\n          </MenuElement>\n        ))}\n      </Dropdown>\n    </div>\n  );\n};\n","import React, { FC, ReactNode, forwardRef } from \"react\";\n\nimport { appendClass } from \"src/utils\";\n\nimport { DefaultTablePagination } from \"./DefaultTablePagination\";\nimport { GenericTable, GenericTableProps } from \"./GenericTable\";\n\nconst asArray = (v: unknown) => (Array.isArray(v) ? v : [v]);\n\ntype PaginationLocation =\n  | \"top-left\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n  | \"top-right\";\n\ntype TableProps = {\n  pagination?: FC<any> | React.ComponentClass<any> | string;\n  paginationLocation?: PaginationLocation;\n  paginationProps?: {\n    size?: \"small\" | \"default\" | \"large\";\n    rounded?: boolean;\n    icons?: boolean;\n    next?: ReactNode;\n    prev?: ReactNode;\n    firstAndLast?: boolean;\n  };\n  data?: any[][];\n  children?: ReactNode;\n  start?: number;\n} & GenericTableProps;\n\nexport const Table: FC<TableProps> = forwardRef<HTMLTableElement, TableProps>(\n  (\n    {\n      pagination = DefaultTablePagination,\n      paginationLocation = \"bottom-right\",\n      paginationProps = {\n        icons: true,\n        firstAndLast: true,\n      },\n      data = null,\n      children = null,\n      start = 1,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    const [position, setPosition] = React.useState(\n      typeof start === \"number\" ? start : 0\n    );\n    const [perPage, setPerPage] = React.useState(50);\n    const tbody = React.useMemo(\n      () =>\n        children\n          ? asArray(children).find((child) => child.type === \"tbody\")\n          : null,\n      [children]\n    );\n    const thead = React.useMemo(\n      () =>\n        children\n          ? asArray(children).find((child) => child.type === \"thead\")\n          : null,\n      [children]\n    );\n    const total = React.useMemo(\n      () => (data ? data.length : asArray(tbody.props.children).length) || 0,\n      [data, tbody]\n    );\n    React.useEffect(() => setPosition(0), [data, tbody]);\n\n    return (\n      <>\n        {Boolean(paginationLocation.includes(\"top-\")) && (\n          <div\n            className={`flex base-margin-bottom${appendClass(\n              paginationLocation === \"top-right\",\n              \"flex-right\"\n            )}`}\n          >\n            {React.createElement(pagination, {\n              total,\n              position,\n              onPageChange: (_, p) => setPosition(p),\n              onPerPageChange: (p) => setPerPage(p),\n              paginationProps,\n            })}\n          </div>\n        )}\n        <GenericTable {...props} ref={forwardedRef}>\n          {thead}\n          <tbody>\n            {data\n              ? data.slice(position, position + perPage).map((row, rid) => (\n                  <tr key={rid}>\n                    {row.map((col, cid) => (\n                      <td key={cid}>{col}</td>\n                    ))}\n                  </tr>\n                ))\n              : asArray(tbody.props.children).slice(\n                  position,\n                  position + perPage\n                )}\n          </tbody>\n        </GenericTable>\n        {Boolean(paginationLocation.includes(\"bottom-\")) && (\n          <div\n            className={`flex base-margin-top${appendClass(\n              paginationLocation === \"bottom-right\",\n              \"flex-right\"\n            )}`}\n          >\n            {React.createElement(pagination, {\n              total,\n              position,\n              onPageChange: (_, p) => setPosition(p),\n              onPerPageChange: (p) => setPerPage(p),\n              perPageUp: true,\n              paginationProps,\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n);\n"],"names":["_extends","Wrapper","React","div","className","GenericTable","forwardRef","forwardedRef","outerWrap","lined","bordered","striped","selectable","fixed","wrapped","compressed","loose","props","ConditionalWrapper","condition","wrapper","table","ac","ref","DefaultTablePagination","perPageUp","paginationProps","total","position","onPageChange","onPerPageChange","useState","perPage","setPerPage","useEffect","span","Pagination","firstAndLast","icons","beginAt","Dropdown","label","a","alwaysClose","placement","undefined","map","v","MenuElement","onClick","key","selected","asArray","Array","isArray","Table","pagination","paginationLocation","data","children","start","setPosition","tbody","useMemo","find","child","type","thead","length","Boolean","includes","appendClass","createElement","_","p","slice","row","rid","tr","col","cid","td"],"mappings":"6uEAAA,SAAAA,YAAA,qQAKA,IAAMC,QAAUC,MAACC,aAAAA,CAAAA,MAAAA,CAAIC,UAAU,qBAcxB,IAAMC,aAAsCC,WAIjD,gBAcEC,aAEAL,uBAdEM,UAAAA,8BAAY,IAAI,0BAChBC,MAAAA,sBAAQ,KAAK,yBACbC,SAAAA,4BAAW,KAAK,2BAChBC,QAAAA,0BAAU,KAAK,6BACfC,WAAAA,gCAAa,KAAK,2BAClBC,MAAAA,sBAAQ,KAAK,wBACbC,QAAAA,0BAAU,KAAK,6BACfC,WAAAA,gCAAa,KAAK,2BAClBC,MAAAA,sBAAQ,KAAK,0BACbZ,UAAAA,8BAAY,IAAI,YACba,uCAVHT,YACAC,QACAC,WACAC,UACAC,aACAC,QACAC,UACAC,aACAC,QACAZ,qBAKFF,MAACgB,aAAAA,CAAAA,mBAAAA,CAAmBC,UAAWX,UAAWY,QAASnB,SACjDC,MAACmB,aAAAA,CAAAA,QAAAA,WAAAA,CACCjB,UAAW,AAAC,QAAmCkB,OAA5BA,YAAGb,MAAO,iBAGzBa,OAH2CA,YAC7CZ,SACA,oBACkCY,OAAhCA,YAAGX,QAAS,mBAGZW,OAHgCA,YAClCV,WACA,sBAC8BU,OAA5BA,YAAGT,MAAO,iBAAkDS,OAAhCA,YAAGR,QAAS,mBAGxCQ,OAH4DA,YAC9DP,WACA,sBAC8BO,OAA5BA,YAAGN,MAAO,iBAAgC,OAAdM,YAAGlB,WAC/Ba,EAAAA,MAAAA,CACJM,IAAKhB,YAIX,IAAA,GCxDF,SAAAP,YAAA,qQAqBO,IAAMwB,uBAA0D,eAOjE,sBANJC,UAAAA,8BAAY,KAAK,mCACjBC,gBAAAA,0CAAkB,oBAClBC,YAAAA,MACAC,eAAAA,SACAC,mBAAAA,aACAC,sBAAAA,gBAEA,IAA8B5B,mBAAAA,MAAM6B,QAAQ,CAAS,OAA9CC,QAAuB9B,OAAd+B,WAAc/B,OAE9BA,MAAMgC,SAAS,CAAC,UAAM,CACpB,GAAI,OAAOJ,kBAAoB,WAAYA,gBAAgBE,QAAAA,EAC1D,CAACA,QAASF,gBAAgB,EAE7B,OACE5B,MAACC,aAAAA,CAAAA,MAAAA,CAAIC,UAAU,eACbF,MAACiC,aAAAA,CAAAA,OAAAA,CAAK/B,UAAU,kBAAmB,EAAA,SACnCF,MAACkC,aAAAA,CAAAA,WAAAA,WAAAA,CACCC,aAAAA,IAAY,CACZC,MAAAA,IAAK,CACLN,QAASA,QACTL,MAAOA,MACPC,SAAUA,SACVC,aAAcA,aACdU,QAAS,EACTnC,UAAU,eACNsB,EAAAA,kBAENxB,MAACiC,aAAAA,CAAAA,OAAAA,CAAK/B,UAAU,6CAA8C,EAAA,KAC9DF,MAACiC,aAAAA,CAAAA,OAAAA,CAAK/B,UAAU,kBAAmB,EAAA,aACnCF,MAACsC,aAAAA,CAAAA,SAAAA,CACCC,MAAOvC,oBAACwC,IAAGV,IAAAA,CAAAA,SACXW,YAAAA,IAAW,CACXC,UAAWnB,UAAY,MAAQoB,SAAS,AAEvC,EAAA,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAI,CAACC,GAAG,CAAC,SAACC,UAChC7C,MAAC8C,aAAAA,CAAAA,YAAAA,CACCC,QAAS,kBAAMhB,WAAWc,IAC1BG,IAAKH,EACLI,SAAUJ,IAAMf,OAEfe,EAAAA,MAMb,ECpEA,SAAA/C,UAAA,iQAOA,IAAMoD,QAAU,SAACL,UAAgBM,MAAMC,OAAO,CAACP,GAAKA,EAAI,CAACA,EAAE,EAwBpD,IAAMQ,MAAwBjD,WACnC,gBAaEC,aACG,wBAZDiD,WAAAA,gCAAahC,8DACbiC,mBAAAA,gDAAqB,2DACrB/B,gBAAAA,0CAAkB,CAChBY,MAAO,IAAI,CACXD,aAAc,IAAI,AACpB,gCACAqB,KAAAA,oBAAO,IAAI,wBACXC,SAAAA,4BAAW,IAAI,yBACfC,MAAAA,sBAAQ,SACL3C,uCATHuC,aACAC,qBACA/B,kBAIAgC,OACAC,WACAC,UAKF,IAAgC1D,mBAAAA,MAAM6B,QAAQ,CAC5C,OAAO6B,QAAU,SAAWA,MAAQ,CAAC,KADhChC,SAAyB1B,OAAf2D,YAAe3D,OAGhC,IAA8BA,oBAAAA,MAAM6B,QAAQ,CAAC,OAAtCC,QAAuB9B,QAAd+B,WAAc/B,QAC9B,IAAM4D,MAAQ5D,MAAM6D,OAAO,CACzB,kBACEJ,SACIP,QAAQO,UAAUK,IAAI,CAAC,SAACC,cAAUA,MAAMC,IAAI,GAAK,UACjD,IAAI,EACV,CAACP,SAAS,EAEZ,IAAMQ,MAAQjE,MAAM6D,OAAO,CACzB,kBACEJ,SACIP,QAAQO,UAAUK,IAAI,CAAC,SAACC,cAAUA,MAAMC,IAAI,GAAK,UACjD,IAAI,EACV,CAACP,SAAS,EAEZ,IAAMhC,MAAQzB,MAAM6D,OAAO,CACzB,iBAAM,AAACL,CAAAA,KAAOA,KAAKU,MAAM,CAAGhB,QAAQU,MAAM7C,KAAK,CAAC0C,QAAQ,EAAES,MAAK,AAALA,GAAW,GACrE,CAACV,KAAMI,MAAM,EAEf5D,MAAMgC,SAAS,CAAC,kBAAM2B,YAAY,IAAI,CAACH,KAAMI,MAAM,EAEnD,OACE5D,wCACGmE,QAAQZ,mBAAmBa,QAAQ,CAAC,UACnCpE,MAACC,aAAAA,CAAAA,MAAAA,CACCC,UAAW,AAAC,0BAGV,OAHmCmE,YACnCd,qBAAuB,YACvB,gBAGDvD,MAAMsE,aAAa,CAAChB,WAAY,CAC/B7B,MAAAA,MACAC,SAAAA,SACAC,aAAc,SAAC4C,EAAGC,UAAMb,YAAYa,IACpC5C,gBAAiB,SAAC4C,UAAMzC,WAAWyC,IACnChD,gBAAAA,eACF,IAGJxB,oBAACG,aAAiBY,SAAAA,CAAAA,EAAAA,MAAAA,CAAOM,IAAKhB,YAC3B4D,GAAAA,MACDjE,MAAC4D,aAAAA,CAAAA,QAAAA,IAAAA,CACEJ,KACGA,KAAKiB,KAAK,CAAC/C,SAAUA,SAAWI,SAASc,GAAG,CAAC,SAAC8B,IAAKC,YACjD3E,MAAC4E,aAAAA,CAAAA,KAAAA,CAAG5B,IAAK2B,GACND,EAAAA,IAAI9B,GAAG,CAAC,SAACiC,IAAKC,YACb9E,MAAC+E,aAAAA,CAAAA,KAAAA,CAAG/B,IAAK8B,GAAMD,EAAAA,UAIrB3B,QAAQU,MAAM7C,KAAK,CAAC0C,QAAQ,EAAEgB,KAAK,CACjC/C,SACAA,SAAWI,QACZ,GAGRqC,QAAQZ,mBAAmBa,QAAQ,CAAC,aACnCpE,MAACC,aAAAA,CAAAA,MAAAA,CACCC,UAAW,AAAC,uBAGV,OAHgCmE,YAChCd,qBAAuB,eACvB,gBAGDvD,MAAMsE,aAAa,CAAChB,WAAY,CAC/B7B,MAAAA,MACAC,SAAAA,SACAC,aAAc,SAAC4C,EAAGC,UAAMb,YAAYa,IACpC5C,gBAAiB,SAAC4C,UAAMzC,WAAWyC,IACnCjD,UAAW,IAAI,CACfC,gBAAAA,eACF,IAKV"}