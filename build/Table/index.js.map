{"version":3,"file":"index.js","sources":["../../src/Table/GenericTable.tsx","../../src/Table/DefaultTablePagination.tsx","../../src/Table/Table.tsx"],"sourcesContent":["import React, { forwardRef, HTMLProps } from \"react\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { appendClass as ac } from \"src/utils\";\n\nconst Wrapper = <div className=\"responsive-table\" />;\n\nexport type GenericTableProps = {\n  outerWrap?: boolean;\n  lined?: boolean;\n  bordered?: boolean;\n  striped?: boolean;\n  selectable?: boolean;\n  fixed?: boolean;\n  wrapped?: boolean;\n  compressed?: boolean;\n  loose?: boolean;\n} & HTMLProps<HTMLTableElement>;\n\nexport const GenericTable = forwardRef<HTMLTableElement, GenericTableProps>(\n  (\n    {\n      outerWrap = true,\n      lined = false,\n      bordered = false,\n      striped = false,\n      selectable = false,\n      fixed = false,\n      wrapped = false,\n      compressed = false,\n      loose = false,\n      className = null,\n      ...props\n    },\n    forwardedRef\n  ) => (\n    <ConditionalWrapper condition={outerWrap} wrapper={Wrapper}>\n      <table\n        className={`table${ac(lined, \"table--lined\")}${ac(\n          bordered,\n          \"table--bordered\"\n        )}${ac(striped, \"table--striped\")}${ac(\n          selectable,\n          \"table--selectable\"\n        )}${ac(fixed, \"table--fixed\")}${ac(wrapped, \"table--wrapped\")}${ac(\n          compressed,\n          \"table--compressed\"\n        )}${ac(loose, \"table--loose\")}${ac(className)}`}\n        {...props}\n        ref={forwardedRef}\n      />\n    </ConditionalWrapper>\n  )\n);\n","import React, { FC, ReactNode } from \"react\";\n\nimport { Pagination } from \"src/Pagination\";\nimport { Dropdown } from \"src/Dropdown\";\n\ntype DefaultTablePaginationProps = {\n  total: number;\n  position: number;\n  onPageChange: (e, position: number) => void;\n  onPerPageChange: (value: number) => void;\n  perPageUp?: boolean;\n  paginationProps?: {\n    size?: \"small\" | \"default\" | \"large\";\n    rounded?: boolean;\n    icons?: boolean;\n    next?: ReactNode;\n    prev?: ReactNode;\n    firstAndLast?: boolean;\n  };\n};\n\nexport const DefaultTablePagination: FC<DefaultTablePaginationProps> = ({\n  perPageUp = false,\n  paginationProps = {},\n  total,\n  position,\n  onPageChange,\n  onPerPageChange,\n}) => {\n  const [perPage, setPerPage] = React.useState<number>(50);\n\n  React.useEffect(() => {\n    if (typeof onPerPageChange === \"function\") onPerPageChange(perPage);\n  }, [perPage, onPerPageChange]);\n\n  return (\n    <div className=\"flex-middle\">\n      <span className=\"qtr-margin-right\">Page:</span>\n      <Pagination\n        firstAndLast\n        icons\n        perPage={perPage}\n        total={total}\n        position={position}\n        onPageChange={onPageChange}\n        beginAt={0}\n        className=\"no-margin-top\"\n        {...paginationProps}\n      />\n      <span className=\"text-muted qtr-margin-left qtr-margin-right\">|</span>\n      <span className=\"qtr-margin-right\">Per page:</span>\n      <Dropdown\n        type=\"link\"\n        header={perPage}\n        openTo=\"left\"\n        alwaysClose\n        up={perPageUp}\n      >\n        {[10, 25, 50, 100, 250, 500].map((v) => (\n          <Dropdown.Element\n            onClick={() => setPerPage(v)}\n            key={v}\n            selected={v === perPage}\n          >\n            {v}\n          </Dropdown.Element>\n        ))}\n      </Dropdown>\n    </div>\n  );\n};\n","import React, { FC, forwardRef, ReactNode } from \"react\";\n\nimport { GenericTable, GenericTableProps } from \"./GenericTable\";\nimport { DefaultTablePagination } from \"./DefaultTablePagination\";\n\nimport { appendClass } from \"src/utils\";\n\nconst asArray = (v: unknown) => (Array.isArray(v) ? v : [v]);\n\ntype PaginationLocation =\n  | \"top-left\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n  | \"top-right\";\n\ntype TableProps = {\n  pagination?: FC<any> | React.ComponentClass<any> | string;\n  paginationLocation?: PaginationLocation;\n  paginationProps?: {\n    size?: \"small\" | \"default\" | \"large\";\n    rounded?: boolean;\n    icons?: boolean;\n    next?: ReactNode;\n    prev?: ReactNode;\n    firstAndLast?: boolean;\n  };\n  data?: any[][];\n  children?: ReactNode;\n  start?: number;\n} & GenericTableProps;\n\nexport const Table: FC<TableProps> = forwardRef<HTMLTableElement, TableProps>(\n  (\n    {\n      pagination = DefaultTablePagination,\n      paginationLocation = \"bottom-right\",\n      paginationProps = {\n        icons: true,\n        firstAndLast: true,\n      },\n      data = null,\n      children = null,\n      start = 1,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    const [position, setPosition] = React.useState(\n      typeof start === \"number\" ? start : 0\n    );\n    const [perPage, setPerPage] = React.useState(50);\n    const tbody = React.useMemo(\n      () =>\n        children\n          ? asArray(children).find((child) => child.type === \"tbody\")\n          : null,\n      [children]\n    );\n    const thead = React.useMemo(\n      () =>\n        children\n          ? asArray(children).find((child) => child.type === \"thead\")\n          : null,\n      [children]\n    );\n    const total = React.useMemo(\n      () => (data ? data.length : asArray(tbody.props.children).length) || 0,\n      [data, tbody]\n    );\n    React.useEffect(() => setPosition(0), [data, tbody]);\n\n    return (\n      <>\n        {Boolean(paginationLocation.includes(\"top-\")) && (\n          <div\n            className={`flex base-margin-bottom${appendClass(\n              paginationLocation === \"top-right\",\n              \"flex-right\"\n            )}`}\n          >\n            {React.createElement(pagination, {\n              total,\n              position,\n              onPageChange: (_, p) => setPosition(p),\n              onPerPageChange: (p) => setPerPage(p),\n              paginationProps,\n            })}\n          </div>\n        )}\n        <GenericTable {...props} ref={forwardedRef}>\n          {thead}\n          <tbody>\n            {data\n              ? data.slice(position, position + perPage).map((row, rid) => (\n                  <tr key={rid}>\n                    {row.map((col, cid) => (\n                      <td key={cid}>{col}</td>\n                    ))}\n                  </tr>\n                ))\n              : asArray(tbody.props.children).slice(\n                  position,\n                  position + perPage\n                )}\n          </tbody>\n        </GenericTable>\n        {Boolean(paginationLocation.includes(\"bottom-\")) && (\n          <div\n            className={`flex base-margin-top${appendClass(\n              paginationLocation === \"bottom-right\",\n              \"flex-right\"\n            )}`}\n          >\n            {React.createElement(pagination, {\n              total,\n              position,\n              onPageChange: (_, p) => setPosition(p),\n              onPerPageChange: (p) => setPerPage(p),\n              perPageUp: true,\n              paginationProps,\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n);\n"],"names":["_extends","Wrapper","div","className","GenericTable","forwardRef","forwardedRef","outerWrap","lined","bordered","striped","selectable","fixed","wrapped","compressed","loose","props","_objectWithoutProperties","ConditionalWrapper","condition","wrapper","table","ac","ref","_arrayLikeToArray","DefaultTablePagination","perPageUp","paginationProps","total","position","onPageChange","onPerPageChange","React","useState","perPage","setPerPage","useEffect","span","Pagination","firstAndLast","icons","beginAt","Dropdown","type","header","openTo","alwaysClose","up","map","v","Element","onClick","key","selected","asArray","Array","isArray","Table","pagination","paginationLocation","data","children","start","setPosition","tbody","useMemo","find","child","thead","length","Boolean","includes","appendClass","createElement","_","p","slice","row","rid","tr","col","cid","td"],"mappings":"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"}