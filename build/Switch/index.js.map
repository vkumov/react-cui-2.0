{"version":3,"file":"index.js","sources":["../../src/Switch/Switch.tsx"],"sourcesContent":["import React, { FC, forwardRef, HTMLProps, ReactNode } from \"react\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { appendClass as ac } from \"src/utils\";\n\ninterface SwitchProps {\n  left?: ReactNode;\n  right?: ReactNode;\n  disabled?: boolean;\n  inline?: boolean;\n  spacing?: \"compressed\" | \"loose\";\n  asFormGroup?: boolean;\n  className?: string;\n  id?: string;\n  style?: React.CSSProperties;\n}\n\nexport const Switch: FC<SwitchProps & HTMLProps<HTMLInputElement>> = forwardRef(\n  (\n    {\n      left = null,\n      right = null,\n      disabled = false,\n      inline = false,\n      spacing = null,\n      asFormGroup = true,\n      className = null,\n      id = null,\n      style = null,\n      ...input\n    },\n    forwardedRef\n  ) => (\n    <ConditionalWrapper\n      condition={asFormGroup}\n      wrapper={\n        <div\n          className={`form-group${ac(inline, \"form-group--inline\")}${ac(\n            className\n          )}${ac(spacing, ` form-group--${spacing}`)}`}\n          style={style}\n        />\n      }\n    >\n      <label\n        className={`switch${disabled ? \" disabled\" : \"\"}`}\n        htmlFor={id || input.name}\n      >\n        <input\n          type=\"checkbox\"\n          {...input}\n          id={id || input.name}\n          checked={input.checked}\n          ref={forwardedRef}\n        />\n        {left ? <span className=\"switch__label\">{left}</span> : null}\n        <span className=\"switch__input\" />\n        {right ? <span className=\"switch__label\">{right}</span> : null}\n      </label>\n    </ConditionalWrapper>\n  )\n);\n"],"names":["Switch","forwardRef","left","right","disabled","inline","spacing","asFormGroup","className","id","style","input","forwardedRef","ConditionalWrapper","condition","wrapper","div","ac","label","htmlFor","name","type","checked","ref","span"],"mappings":";;;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;AAiBO,MAAMA,uBAAwDC,UACnE,CAAA,CACE,EACEC,IAAO,EAAA,IAAI,GACXC,KAAAA,EAAQ,IAAI,GACZC,UAAW,KAAK,GAChBC,MAAS,EAAA,KAAK,GACdC,OAAAA,EAAU,IAAI,GACdC,aAAc,IAAI,GAClBC,SAAY,EAAA,IAAI,GAChBC,EAAAA,EAAK,IAAI,GACTC,OAAQ,IAAI,GACZ,GAAGC,KAAAA,EACJ,EACDC,YAAAA,iBAEA,KAACC,CAAAA,aAAAA,CAAAA,kBAAAA,EAAAA;QACCC,SAAWP,EAAAA,WAAAA;AACXQ,QAAAA,OAAAA,gBACE,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AACCR,YAAAA,SAAAA,EAAW,CAAC,UAAU,EAAES,YAAGZ,MAAQ,EAAA,oBAAA,CAAA,CAAsB,EAAEY,WACzDT,CAAAA,SAAAA,CAAAA,CACA,EAAES,WAAAA,CAAGX,SAAS,CAAC,aAAa,EAAEA,OAAQ,CAAA,CAAC,EAAE,CAAC;YAC5CI,KAAOA,EAAAA,KAAAA;;qBAIX,KAACQ,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA;AACCV,QAAAA,SAAAA,EAAW,CAAC,MAAM,EAAEJ,WAAW,WAAc,GAAA,EAAE,CAAC,CAAC;QACjDe,OAASV,EAAAA,EAAAA,IAAME,MAAMS,IAAI;qBAEzB,KAACT,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,QAAAA,CAAAA;QACCU,IAAK,EAAA,UAAA;AACDV,KAAAA,EAAAA,KAAAA,EAAAA;QACJF,EAAIA,EAAAA,EAAAA,IAAME,MAAMS,IAAI;AACpBE,QAAAA,OAAAA,EAASX,MAAMW,OAAO;QACtBC,GAAKX,EAAAA,YAAAA;AAENV,KAAAA,CAAAA,CAAAA,EAAAA,IAAAA,iBAAO,KAACsB,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;QAAKhB,SAAU,EAAA,eAAA;OAAiBN,IAAe,CAAA,GAAA,IAAI,gBAC5D,KAACsB,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;QAAKhB,SAAU,EAAA,eAAA;AACfL,KAAAA,CAAAA,EAAAA,KAAAA,iBAAQ,KAACqB,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;QAAKhB,SAAU,EAAA,eAAA;AAAiBL,KAAAA,EAAAA,KAAAA,CAAAA,GAAgB,IAAI,CAIpE,CAAA;;;;"}