{"version":3,"file":"index.js","sources":["../../src/Progressbar/Progressbar.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nexport type ProgressbarColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning-alt\"\n  | \"warning\"\n  | \"danger\"\n  | \"dark\";\n\ninterface ProgressbarProps {\n  percentage: number;\n  withLabel?: boolean;\n  label?: React.ReactNode;\n  size?: \"small\" | \"default\" | \"large\";\n  color?: ProgressbarColor;\n  className?: string;\n}\n\nexport const Progressbar = forwardRef<HTMLDivElement, ProgressbarProps>(\n  (\n    {\n      size = \"default\",\n      withLabel = false,\n      label = null,\n      color = null,\n      className = null,\n      percentage,\n      ...props\n    },\n    ref\n  ) => (\n    <div\n      className={`progressbar${ac(\n        size !== \"default\",\n        `progressbar--${size}`\n      )}${ac(color, `progressbar--${color}`)}${ac(className)}`}\n      data-percentage={percentage}\n      {...props}\n      ref={ref}\n    >\n      <div className=\"progressbar__fill\" />\n      {withLabel ? (\n        label ? (\n          <div className=\"progressbar__label\">{label}</div>\n        ) : (\n          <div className=\"progressbar__label\">{`${percentage}%`}</div>\n        )\n      ) : null}\n    </div>\n  )\n);\n"],"names":["Progressbar","forwardRef","size","withLabel","label","color","className","percentage","props","ref","React","ac"],"mappings":"qIAwBa,MAAAA,EAAcC,EACzB,CACE,CACE,KAAAC,EAAO,UACP,UAAAC,EAAY,GACZ,MAAAC,EAAQ,KACR,MAAAC,EAAQ,KACR,UAAAC,EAAY,KACZ,WAAAC,EACA,GAAGC,CACL,EACAC,IAEAC,EAAA,cAAC,MACC,CAAA,UAAW,cAAcC,EACvBT,IAAS,UACT,gBAAgBA,GAClB,IAAIS,EAAGN,EAAO,gBAAgBA,GAAO,IAAIM,EAAGL,CAAS,IACrD,kBAAiBC,EAChB,GAAGC,EACJ,IAAKC,CAELC,EAAAA,EAAA,cAAC,MAAI,CAAA,UAAU,mBAAoB,CAAA,EAClCP,EACCC,EACEM,EAAA,cAAC,MAAI,CAAA,UAAU,sBAAsBN,CAAM,EAE3CM,EAAA,cAAC,OAAI,UAAU,oBAAA,EAAsB,GAAGH,IAAc,EAEtD,IACN,CAEJ"}