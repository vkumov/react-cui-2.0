{"version":3,"file":"index.js","sources":["../../src/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useState,\n  type FC,\n  type HTMLProps,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactNode,\n  type Ref,\n  type RefCallback,\n} from \"react\";\nimport cx from \"classnames\";\n\nimport styles from \"./Segmented.module.scss\";\n\nexport type SegmentedOption<V> = {\n  label: ReactNode;\n  value: V;\n  disabled?: boolean;\n};\n\ntype ActiveProps = {\n  activeElement: HTMLDivElement | null;\n  value: any;\n  fullWidth?: boolean;\n  small: boolean;\n};\n\nconst Active: FC<ActiveProps> = ({\n  activeElement,\n  value,\n  fullWidth,\n  small,\n}) => {\n  const [coord, setCoord] = useState({ x: 0, y: 0, w: 0, h: 0 });\n\n  useEffect(() => {\n    if (!activeElement) return;\n\n    setCoord({\n      x: activeElement.offsetLeft - (small ? 2 : 4),\n      y: activeElement.offsetTop - (small ? 2 : 4),\n      w: activeElement.offsetWidth,\n      h: activeElement.offsetHeight,\n    });\n  }, [activeElement, value, fullWidth, small]);\n\n  if (!activeElement) return null;\n\n  return (\n    <span\n      className={styles.segmented_active}\n      style={{\n        width: `${coord.w}px`,\n        height: `${coord.h}px`,\n        transform:\n          coord.x > 0 || coord.y > 0\n            ? `translateX(${coord.x}px) translateY(${coord.y}px) translateZ(0px)`\n            : \"none\",\n      }}\n    />\n  );\n};\n\ntype OptionDisplayProps = {\n  value: any;\n  active: boolean;\n  disabled?: boolean;\n  activeRef: MutableRefObject<HTMLDivElement> | RefCallback<HTMLDivElement>;\n} & HTMLProps<HTMLInputElement>;\n\nconst OptionDisplay: FC<PropsWithChildren<OptionDisplayProps>> = ({\n  children,\n  value,\n  activeRef,\n  active,\n  className,\n  disabled,\n  id,\n  ...props\n}) => {\n  return (\n    <div\n      className={cx(styles.segmented_option_control, className, {\n        [styles.segmented_option_control_active]: active,\n        disabled,\n      })}\n      ref={active ? activeRef : null}\n    >\n      <input\n        type=\"radio\"\n        className={styles.segmented_option_control_input}\n        value={value}\n        id={`${id || props.name}-${value}`}\n        {...props}\n      />\n      <label\n        className={styles.segmented_option_control_label}\n        htmlFor={`${id || props.name}-${value}`}\n      >\n        {children}\n      </label>\n    </div>\n  );\n};\n\ntype Props<V> = {\n  options: SegmentedOption<V>[] | readonly SegmentedOption<V>[];\n  value: V;\n  label?: ReactNode;\n  inline?: boolean;\n  fullWidth?: boolean;\n  small?: boolean;\n} & HTMLProps<HTMLInputElement>;\n\nfunction UrefedSegmented<V extends string | number = string>(\n  {\n    options,\n    value,\n    label,\n    inline,\n    className,\n    fullWidth,\n    small,\n    ...props\n  }: Props<V>,\n  ref: Ref<HTMLDivElement>\n): JSX.Element {\n  const [el, setEl] = useState<HTMLDivElement | null>(null);\n  const activeRefCb: RefCallback<HTMLDivElement> = useCallback((node) => {\n    if (node !== null) {\n      setEl(node);\n    } else setEl(null);\n  }, []);\n\n  return (\n    <div\n      className={cx(\"form-group\", className, { \"form-group--inline\": inline })}\n    >\n      <div\n        className={cx(styles.form_group, {\n          [styles[\"form_group--full\"]]: fullWidth,\n          [styles.small]: small,\n        })}\n      >\n        {label ? <label>{label}</label> : null}\n        <div\n          className={cx(styles.segmented_root, {\n            [styles[\"segmented_root--full\"]]: fullWidth,\n          })}\n          ref={ref}\n        >\n          <Active\n            activeElement={el}\n            value={value}\n            fullWidth={fullWidth}\n            small={small}\n          />\n          {options.map((o) => (\n            <OptionDisplay\n              activeRef={activeRefCb}\n              active={value === o.value}\n              value={o.value}\n              key={o.value}\n              disabled={o.disabled}\n              {...props}\n            >\n              {o.label}\n            </OptionDisplay>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport type SegmentedControlProps<V> = Props<V> & {\n  ref?: React.ForwardedRef<HTMLDivElement>;\n};\n\nexport const SegmentedControl = forwardRef(UrefedSegmented) as <\n  V extends string | number = string\n>({\n  options,\n  value,\n  ...props\n}: SegmentedControlProps<V>) => ReturnType<typeof UrefedSegmented>;\n"],"names":["Active","activeElement","value","fullWidth","small","coord","setCoord","useState","useEffect","jsx","styles","OptionDisplay","children","activeRef","active","className","disabled","id","props","jsxs","cx","UrefedSegmented","options","label","inline","ref","el","setEl","activeRefCb","useCallback","node","o","SegmentedControl","forwardRef"],"mappings":"y0BA8BA,MAAMA,EAA0B,CAAC,CAC/B,cAAAC,EACA,MAAAC,EACA,UAAAC,EACA,MAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAE,CAAC,EAa7D,OAXAC,EAAU,IAAM,CACTP,GAELK,EAAS,CACP,EAAGL,EAAc,YAAcG,EAAQ,EAAI,GAC3C,EAAGH,EAAc,WAAaG,EAAQ,EAAI,GAC1C,EAAGH,EAAc,YACjB,EAAGA,EAAc,YACnB,CAAC,CACH,EAAG,CAACA,EAAeC,EAAOC,EAAWC,CAAK,CAAC,EAEtCH,EAGHQ,EAAC,OAAA,CACC,UAAWC,EAAO,iBAClB,MAAO,CACL,MAAO,GAAGL,EAAM,MAChB,OAAQ,GAAGA,EAAM,MACjB,UACEA,EAAM,EAAI,GAAKA,EAAM,EAAI,EACrB,cAAcA,EAAM,mBAAmBA,EAAM,uBAC7C,MACR,CAAA,CACF,EAbyB,IAe7B,EASMM,EAA2D,CAAC,CAChE,SAAAC,EACA,MAAAV,EACA,UAAAW,EACA,OAAAC,EACA,UAAAC,EACA,SAAAC,EACA,GAAAC,EACA,GAAGC,CACL,IAEIC,EAAC,OACC,UAAWC,EAAGV,EAAO,yBAA0BK,EAAW,CACxD,CAACL,EAAO,+BAA+B,EAAGI,EAC1C,SAAAE,CACF,CAAC,EACD,IAAKF,EAASD,EAAY,KAE1B,SAAAJ,CAAAA,EAAC,SACC,KAAK,QACL,UAAWC,EAAO,+BAClB,MAAOR,EACP,GAAI,GAAGe,GAAMC,EAAM,QAAQhB,IAC1B,GAAGgB,CAAAA,CACN,EACAT,EAAC,QAAA,CACC,UAAWC,EAAO,+BAClB,QAAS,GAAGO,GAAMC,EAAM,QAAQhB,IAE/B,SAAAU,CAAAA,CACH,CACF,CAAA,CAAA,EAaJ,SAASS,EACP,CACE,QAAAC,EACA,MAAApB,EACA,MAAAqB,EACA,OAAAC,EACA,UAAAT,EACA,UAAAZ,EACA,MAAAC,EACA,GAAGc,CACL,EACAO,EACa,CACb,KAAM,CAACC,EAAIC,CAAK,EAAIpB,EAAgC,IAAI,EAClDqB,EAA2CC,EAAaC,GAAS,CAEnEH,EADEG,IAAS,KACLA,EACK,IADD,CAEd,EAAG,CAAE,CAAA,EAEL,OACErB,EAAC,MAAA,CACC,UAAWW,EAAG,aAAcL,EAAW,CAAE,qBAAsBS,CAAO,CAAC,EAEvE,SAAAL,EAAC,OACC,UAAWC,EAAGV,EAAO,WAAY,CAC/B,CAACA,EAAO,kBAAkB,CAAC,EAAGP,EAC9B,CAACO,EAAO,KAAK,EAAGN,CAClB,CAAC,EAEA,SAAAmB,CAAAA,EAAQd,EAAC,QAAO,CAAA,SAAAc,EAAM,EAAW,KAClCJ,EAAC,MAAA,CACC,UAAWC,EAAGV,EAAO,eAAgB,CACnC,CAACA,EAAO,sBAAsB,CAAC,EAAGP,CACpC,CAAC,EACD,IAAKsB,EAEL,SAAAhB,CAAAA,EAACT,EAAA,CACC,cAAe0B,EACf,MAAOxB,EACP,UAAWC,EACX,MAAOC,CACT,CAAA,EACCkB,EAAQ,IAAKS,GACZtB,EAACE,EAAA,CACC,UAAWiB,EACX,OAAQ1B,IAAU6B,EAAE,MACpB,MAAOA,EAAE,MAET,SAAUA,EAAE,SACX,GAAGb,EAEH,SAAAa,EAAE,OAJEA,EAAE,KAKT,CACD,CAAA,CAAA,CACH,GACF,CACF,CAAA,CAEJ,CAMa,MAAAC,EAAmBC,EAAWZ,CAAe"}