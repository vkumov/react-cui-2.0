{"version":3,"file":"index.js","sources":["../../src/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import React, {\n  type FC,\n  type HTMLProps,\n  type PropsWithChildren,\n  type ReactNode,\n  type RefObject,\n  type Ref,\n  useEffect,\n  useRef,\n  useState,\n  forwardRef,\n} from \"react\";\nimport cx from \"classnames\";\n\nimport styles from \"./Segmented.module.scss\";\n\nexport type SegmentedOption<V> = {\n  label: ReactNode;\n  value: V;\n  disabled?: boolean;\n};\n\ntype ActiveProps = {\n  activeRef: RefObject<HTMLDivElement>;\n  value: any;\n  fullWidth?: boolean;\n  small: boolean;\n};\n\nconst Active: FC<ActiveProps> = ({ activeRef, value, fullWidth, small }) => {\n  const [coord, setCoord] = useState({ x: 0, y: 0, w: 0, h: 0 });\n\n  useEffect(() => {\n    if (!activeRef.current) return;\n\n    setCoord({\n      x: activeRef.current.offsetLeft - (small ? 2 : 4),\n      y: activeRef.current.offsetTop - (small ? 2 : 4),\n      w: activeRef.current.offsetWidth,\n      h: activeRef.current.offsetHeight,\n    });\n  }, [activeRef.current, value, fullWidth, small]);\n\n  if (!activeRef.current) return null;\n\n  return (\n    <span\n      className={styles.segmented_active}\n      style={{\n        width: `${coord.w}px`,\n        height: `${coord.h}px`,\n        transform:\n          coord.x > 0 || coord.y > 0\n            ? `translateX(${coord.x}px) translateY(${coord.y}px) translateZ(0px)`\n            : \"none\",\n      }}\n    />\n  );\n};\n\ntype OptionDisplayProps = {\n  value: any;\n  active: boolean;\n  disabled?: boolean;\n} & Pick<ActiveProps, \"activeRef\"> &\n  HTMLProps<HTMLInputElement>;\n\nconst OptionDisplay: FC<PropsWithChildren<OptionDisplayProps>> = ({\n  children,\n  value,\n  activeRef,\n  active,\n  className,\n  disabled,\n  id,\n  ...props\n}) => {\n  return (\n    <div\n      className={cx(styles.segmented_option_control, {\n        [styles.segmented_option_control_active]: active,\n        disabled,\n      })}\n      ref={active ? activeRef : null}\n    >\n      <input\n        type=\"radio\"\n        className={styles.segmented_option_control_input}\n        value={value}\n        id={`${id || props.name}-${value}`}\n        {...props}\n      />\n      <label\n        className={styles.segmented_option_control_label}\n        htmlFor={`${id || props.name}-${value}`}\n      >\n        {children}\n      </label>\n    </div>\n  );\n};\n\ntype Props<V> = {\n  options: SegmentedOption<V>[] | readonly SegmentedOption<V>[];\n  value: V;\n  label?: ReactNode;\n  inline?: boolean;\n  fullWidth?: boolean;\n  small?: boolean;\n} & HTMLProps<HTMLInputElement>;\n\nfunction UrefedSegmented<V extends string | number = string>(\n  {\n    options,\n    value,\n    label,\n    inline,\n    className,\n    fullWidth,\n    small,\n    ...props\n  }: Props<V>,\n  ref: Ref<HTMLDivElement>\n): JSX.Element {\n  const activeRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <div\n      className={cx(\"form-group\", className, { \"form-group--inline\": inline })}\n    >\n      <div\n        className={cx(styles.form_group, {\n          [styles[\"form_group--full\"]]: fullWidth,\n          [styles.small]: small,\n        })}\n      >\n        {label ? <label>{label}</label> : null}\n        <div\n          className={cx(styles.segmented_root, {\n            [styles[\"segmented_root--full\"]]: fullWidth,\n          })}\n          ref={ref}\n        >\n          <Active\n            activeRef={activeRef}\n            value={value}\n            fullWidth={fullWidth}\n            small={small}\n          />\n          {options.map((o) => (\n            <OptionDisplay\n              activeRef={activeRef}\n              active={value === o.value}\n              value={o.value}\n              key={o.value}\n              disabled={o.disabled}\n              {...props}\n            >\n              {o.label}\n            </OptionDisplay>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport type SegmentedControlProps<V> = Props<V> & {\n  ref?: React.ForwardedRef<HTMLDivElement>;\n};\n\nexport const SegmentedControl = forwardRef(UrefedSegmented) as <\n  V extends string | number = string\n>({\n  options,\n  value,\n  ...props\n}: SegmentedControlProps<V>) => ReturnType<typeof UrefedSegmented>;\n"],"names":["Active","activeRef","value","fullWidth","small","coord","setCoord","useState","x","y","w","h","useEffect","current","offsetLeft","offsetTop","offsetWidth","offsetHeight","span","className","styles","segmented_active","style","width","height","transform","OptionDisplay","children","active","disabled","id","props","div","cx","segmented_option_control","segmented_option_control_active","ref","input","type","segmented_option_control_input","name","label","segmented_option_control_label","htmlFor","UrefedSegmented","options","inline","useRef","form_group","segmented_root","map","o","key","SegmentedControl","forwardRef"],"mappings":"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"}