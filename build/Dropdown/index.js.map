{"version":3,"file":"index.js","sources":["../../src/Dropdown/Dropdown.tsx"],"sourcesContent":["import React, {\n  FC,\n  HTMLProps,\n  MouseEvent,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { appendClass } from \"src/utils\";\n\ntype ElementProps = {\n  selected?: boolean;\n  icon?: string;\n  children: ReactNode;\n} & HTMLProps<HTMLAnchorElement>;\n\nconst Element: FC<ElementProps> = ({\n  selected = false,\n  icon = null,\n  children,\n  className = null,\n  ...props\n}) => (\n  <a\n    className={`${selected ? \"selected\" : \"\"}${\n      className ? ` ${className}` : \"\"\n    }`}\n    {...props}\n  >\n    {icon ? <span className={`icon-${icon}`} /> : null}\n    <ConditionalWrapper\n      condition={Boolean(icon)}\n      wrapper={<span className=\"qtr-margin-left\" />}\n    >\n      {children}\n    </ConditionalWrapper>\n  </a>\n);\n\nconst Divider: FC = () => <div className=\"divider\" />;\n\ntype GroupProps = {\n  children: ReactNode;\n};\n\nconst Group: FC<GroupProps> = ({ children }) => (\n  <div className=\"dropdown__group\">{children}</div>\n);\n\ntype GroupHeaderProps = {\n  header: ReactNode;\n};\n\nconst GroupHeader: FC<GroupHeaderProps> = ({ header }) => (\n  <div className=\"dropdown__group-header\">{header}</div>\n);\n\ntype DropdownHeaderProps = {\n  type: string;\n  handleClick: (...args) => void;\n  className?: string;\n  header: ReactNode;\n};\n\nconst DropdownHeader: FC<DropdownHeaderProps> = ({\n  type,\n  handleClick,\n  className,\n  header,\n}) => {\n  switch (type) {\n    case \"icon\":\n      return <span onClick={handleClick} className={className} />;\n    case \"link\":\n      return (\n        <a onClick={handleClick} className={className}>\n          {header}\n        </a>\n      );\n    case \"div\":\n      return (\n        <div onClick={handleClick} className={className}>\n          {header}\n        </div>\n      );\n    case \"button\":\n      return (\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className={`btn ${className}`}\n        >\n          {header}\n        </button>\n      );\n    default:\n      return React.isValidElement(header)\n        ? React.cloneElement(header, { onClick: handleClick })\n        : null;\n  }\n};\n\ntype DropdownProps = {\n  type?: \"icon\" | \"link\" | \"div\" | \"button\" | \"custom\";\n  className?: string;\n  header?: ReactNode;\n  openTo?: \"left\" | \"right\" | \"center\";\n  alwaysClose?: boolean;\n  onOpen?: (e) => void;\n  onClose?: (e) => void;\n  stopPropagation?: boolean;\n  divClassName?: string;\n  children: ReactNode;\n  up?: boolean;\n  isOpen?: boolean;\n};\n\nexport interface DropdownParts {\n  Element: FC<ElementProps>;\n  Divider: FC;\n  Group: FC<GroupProps>;\n  GroupHeader: FC<GroupHeaderProps>;\n}\n\nconst Dropdown: DropdownParts & FC<DropdownProps> = ({\n  openTo = \"right\",\n  children,\n  type = \"button\",\n  className = null,\n  header = null,\n  divClassName = null,\n  up = false,\n  onClose = null,\n  onOpen = null,\n  stopPropagation = false,\n  alwaysClose = false,\n  isOpen: outsideIsOpen,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const divRef = useRef<HTMLDivElement>(undefined);\n\n  useEffect(() => {\n    if (typeof outsideIsOpen !== \"undefined\" && outsideIsOpen !== null)\n      setIsOpen(outsideIsOpen);\n  }, [outsideIsOpen]);\n\n  // eslint-disable-next-line prefer-const\n  let handleOutsideClick;\n\n  const handleClick = useCallback(\n    (e): void => {\n      if (stopPropagation) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      setIsOpen((current) => {\n        if (!current) {\n          // attach/remove event handler\n          document.addEventListener(\"click\", handleOutsideClick, true);\n        } else {\n          document.removeEventListener(\"click\", handleOutsideClick, true);\n        }\n        const newIsOpen = !current;\n        if (newIsOpen && onOpen) onOpen(e);\n        if (!newIsOpen && onClose) onClose(e);\n        return newIsOpen;\n      });\n    },\n    [stopPropagation, onClose, onOpen]\n  );\n\n  handleOutsideClick = (e: MouseEvent<Node>): void => {\n    // ignore clicks on the component itself\n    if (!(e.target instanceof Node) || !divRef?.current) return;\n    if (!alwaysClose && divRef.current && divRef.current.contains(e.target))\n      return;\n\n    if (!divRef.current.contains(e.target)) {\n      handleClick(e);\n      return;\n    }\n    if (!divRef.current.isSameNode(e.target.parentNode) && alwaysClose) {\n      handleClick(e);\n      return;\n    }\n  };\n\n  return (\n    <div\n      className={`dropdown${appendClass(\n        [\"left\", \"center\"].includes(openTo),\n        `dropdown--${openTo}`\n      )}${appendClass(up, \"dropdown--up\")}${appendClass(\n        isOpen,\n        \"active\"\n      )}${appendClass(divClassName)}`}\n      ref={divRef}\n    >\n      <DropdownHeader\n        type={type}\n        handleClick={handleClick}\n        className={className}\n        header={header}\n      />\n      <div className=\"dropdown__menu\">{children}</div>\n    </div>\n  );\n};\n\nDropdown.Divider = Divider;\nDropdown.Element = Element;\nDropdown.Group = Group;\nDropdown.GroupHeader = GroupHeader;\n\nexport {\n  Dropdown,\n  Element as DropdownElement,\n  Divider as DropdownDivider,\n  Group as DropdownGroup,\n  GroupHeader as DropdownGroupHeader,\n};\n"],"names":["Element","selected","icon","children","className","props","a","span","ConditionalWrapper","condition","Boolean","wrapper","Divider","div","Group","GroupHeader","header","DropdownHeader","type","handleClick","onClick","button","React","isValidElement","cloneElement","Dropdown","openTo","divClassName","up","onClose","onOpen","stopPropagation","alwaysClose","isOpen","useState","setIsOpen","divRef","useRef","undefined","useEffect","outsideIsOpen","handleOutsideClick","useCallback","e","preventDefault","current","document","addEventListener","removeEventListener","newIsOpen","target","Node","contains","isSameNode","parentNode","appendClass","includes","ref"],"mappings":"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"}