{"version":3,"file":"index.js","sources":["../../src/Dropdown/Dropdown.tsx"],"sourcesContent":["import {\n  type Strategy,\n  type Placement,\n  autoUpdate,\n  flip,\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingPortal,\n  FloatingTree,\n  offset,\n  safePolygon,\n  shift,\n  size,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingParentNodeId,\n  useFloatingTree,\n  useHover,\n  useInteractions,\n  useListNavigation,\n  useRole,\n  useTypeahead,\n} from \"@floating-ui/react\";\nimport React, {\n  type PropsWithChildren,\n  type ReactNode,\n  type ReactElement,\n  type HTMLProps,\n  Children,\n  cloneElement,\n  isValidElement,\n  useEffect,\n  useRef,\n  useState,\n  forwardRef,\n} from \"react\";\nimport cx from \"classnames\";\nimport { useMergeRefs } from \"use-callback-ref\";\nimport { Transition } from \"react-transition-group\";\n\nimport { useFloatingContext } from \"src/FloatingProvider\";\n\nimport styles from \"./Dropdown.module.scss\";\n\ntype MenuElementProps = {\n  selected?: boolean;\n  icon?: string | ReactElement;\n  submenu?: boolean;\n} & HTMLProps<HTMLAnchorElement>;\n\nexport const MenuElement = forwardRef<any, MenuElementProps>(\n  ({ selected, className, icon, children, submenu, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        {...props}\n        className={cx(className, {\n          selected: selected && !submenu,\n          [styles.submenu]: submenu,\n        })}\n      >\n        {icon ? (\n          isValidElement(icon) ? (\n            <>\n              {icon}\n              {isValidElement(children) ? (\n                children\n              ) : (\n                <span className=\"qtr-margin-left\">{children}</span>\n              )}\n            </>\n          ) : (\n            <>\n              <span className={icon} />\n              <span className=\"qtr-margin-left\">{children}</span>\n            </>\n          )\n        ) : (\n          children\n        )}\n      </a>\n    );\n  }\n);\n\nMenuElement.displayName = \"MenuElement\";\n\ntype DropdownProps = PropsWithChildren<{\n  label: ReactNode;\n  placement?: Placement;\n  noChevron?: boolean;\n  strategy?: Strategy;\n  portalRoot?: HTMLElement | null | undefined;\n  alwaysClose?: boolean;\n  onOpen?: () => unknown;\n  withSizeLimit?: boolean;\n}>;\n\ntype MenuComponentProps = {\n  nested?: boolean;\n} & DropdownProps;\n\nexport const Menu = forwardRef<\n  any,\n  MenuComponentProps & Omit<HTMLProps<HTMLButtonElement>, \"label\">\n>(\n  (\n    {\n      children,\n      label,\n      noChevron,\n      placement,\n      strategy: providedStrategy,\n      portalRoot,\n      alwaysClose,\n      onOpen,\n      nested,\n      withSizeLimit,\n      ...props\n    },\n    ref\n  ) => {\n    const [open, setOpen] = useState(false);\n    const [activeIndex, setActiveIndex] = useState<number | null>(null);\n    const [allowHover, setAllowHover] = useState(false);\n\n    const listItemsRef = useRef<Array<HTMLButtonElement | null>>([]);\n    const listContentRef = useRef(\n      Children.map(children, (child) =>\n        isValidElement(child) ? child.props.label : null\n      ) as Array<string | null>\n    );\n\n    const tree = useFloatingTree();\n    const nodeId = useFloatingNodeId();\n    const parentId = useFloatingParentNodeId();\n    nested ??= parentId != null;\n\n    const { x, y, reference, floating, strategy, refs, context } =\n      useFloating<HTMLButtonElement>({\n        open,\n        onOpenChange: (st) => {\n          if (typeof onOpen === \"function\") onOpen();\n          setOpen(st);\n        },\n        middleware: [\n          offset({ mainAxis: nested ? 0 : 2, alignmentAxis: nested ? -5 : 0 }),\n          flip(),\n          shift(),\n          withSizeLimit\n            ? size({\n                apply({ availableHeight, availableWidth, elements }) {\n                  Object.assign(elements.floating.style, {\n                    maxWidth: `${availableWidth}px`,\n                    maxHeight: `${availableHeight - 4}px`,\n                  });\n                },\n              })\n            : undefined,\n        ].filter(Boolean),\n        placement: nested ? \"right-start\" : placement,\n        nodeId,\n        whileElementsMounted: autoUpdate,\n        strategy: providedStrategy,\n      });\n\n    const { getReferenceProps, getFloatingProps, getItemProps } =\n      useInteractions([\n        useHover(context, {\n          handleClose: safePolygon({ restMs: 25 }),\n          enabled: nested && allowHover,\n          delay: { open: 75 },\n        }),\n        useClick(context, {\n          toggle: !nested,\n          event: \"mousedown\",\n          ignoreMouse: nested,\n        }),\n        useRole(context, { role: \"menu\" }),\n        useDismiss(context),\n        useListNavigation(context, {\n          listRef: listItemsRef,\n          activeIndex,\n          nested,\n          onNavigate: setActiveIndex,\n        }),\n        useTypeahead(context, {\n          listRef: listContentRef,\n          onMatch: open ? setActiveIndex : undefined,\n          activeIndex,\n        }),\n      ]);\n\n    useEffect(() => {\n      function onTreeClick() {\n        if (alwaysClose) setOpen(false);\n\n        if (parentId === null) {\n          refs.domReference.current?.focus();\n        }\n      }\n\n      tree?.events.on(\"click\", onTreeClick);\n      return () => {\n        tree?.events.off(\"click\", onTreeClick);\n      };\n    }, [parentId, tree, refs, alwaysClose]);\n\n    useEffect(() => {\n      function onPointerMove() {\n        setAllowHover(true);\n      }\n\n      function onKeyDown() {\n        setAllowHover(false);\n      }\n\n      window.addEventListener(\"pointermove\", onPointerMove, {\n        once: true,\n        capture: true,\n      });\n      window.addEventListener(\"keydown\", onKeyDown, true);\n      return () => {\n        window.removeEventListener(\"pointermove\", onPointerMove, {\n          capture: true,\n        });\n        window.removeEventListener(\"keydown\", onKeyDown, true);\n      };\n    }, [allowHover]);\n\n    const floatingNodeRef = useRef<HTMLElement>(null);\n    const mergedReferenceRef = useMergeRefs([ref, reference]);\n\n    const rootCtx = useFloatingContext();\n    portalRoot ??= rootCtx?.rootRef?.current || undefined;\n\n    return (\n      <FloatingNode id={nodeId}>\n        {isValidElement(label) ? (\n          cloneElement(label, {\n            ...getReferenceProps({\n              ...props,\n              ref: mergedReferenceRef,\n              onClick(event) {\n                event.stopPropagation();\n                (event.currentTarget as HTMLButtonElement).focus();\n              },\n              ...(nested\n                ? {\n                    className: cx(\"menu_item\", { open }),\n                    role: \"menuitem\",\n                    onKeyDown(event) {\n                      if (\n                        event.key === \"ArrowUp\" ||\n                        event.key === \"ArrowDown\"\n                      ) {\n                        setOpen(false);\n                      }\n                    },\n                  }\n                : {\n                    className: cx(styles.menu_root, label.props.className, {\n                      open,\n                      [styles.with_chevron]: !noChevron,\n                    }),\n                  }),\n            }),\n          })\n        ) : (\n          <MenuElement\n            submenu={nested}\n            {...getReferenceProps({\n              ...props,\n              ref: mergedReferenceRef,\n              onClick(event) {\n                event.stopPropagation();\n                (event.currentTarget as HTMLButtonElement).focus();\n              },\n              ...(nested\n                ? {\n                    className: cx(\"menu_item\", { open }),\n                    role: \"menuitem\",\n                    onKeyDown(event) {\n                      if (\n                        event.key === \"ArrowUp\" ||\n                        event.key === \"ArrowDown\"\n                      ) {\n                        setOpen(false);\n                      }\n                    },\n                  }\n                : {\n                    className: cx(styles.menu_root, {\n                      open,\n                      [styles.with_chevron]: !noChevron,\n                    }),\n                  }),\n            })}\n          >\n            {label}\n          </MenuElement>\n        )}\n        <FloatingPortal root={portalRoot}>\n          <Transition\n            in={open}\n            mountOnEnter\n            unmountOnExit\n            timeout={{ enter: 100, exit: 250 }}\n            nodeRef={floatingNodeRef}\n          >\n            {(state) => (\n              <FloatingFocusManager\n                context={context}\n                modal={!nested}\n                returnFocus={!nested}\n                order={[\"reference\", \"content\"]}\n              >\n                <div\n                  {...getFloatingProps({\n                    className: cx(\"dropdown\", styles.active, styles.dropdown, {\n                      [styles.disappear]:\n                        state === \"exiting\" || state === \"exited\",\n                    }),\n                    ref(r) {\n                      floatingNodeRef.current = r;\n                      floating(r);\n                    },\n                    style: {\n                      position: strategy,\n                      top: y ?? 0,\n                      left: x ?? 0,\n                    },\n                    onKeyDown(event) {\n                      if (event.key === \"Tab\") {\n                        setOpen(false);\n                      }\n                    },\n                  })}\n                >\n                  <div\n                    className=\"dropdown__menu\"\n                    onClick={\n                      alwaysClose\n                        ? () => {\n                            tree?.events.emit(\"click\");\n                          }\n                        : undefined\n                    }\n                  >\n                    {Children.map(\n                      children,\n                      (child, index) =>\n                        isValidElement(child) &&\n                        cloneElement(\n                          child,\n                          getItemProps({\n                            tabIndex: -1,\n                            role: \"menuitem\",\n                            className: \"menu_item\",\n                            ref(node: HTMLButtonElement) {\n                              listItemsRef.current[index] = node;\n                            },\n                            onClick(e) {\n                              if (child.props.onClick) child.props.onClick(e);\n                              else tree?.events.emit(\"click\");\n                            },\n                            onPointerEnter() {\n                              if (allowHover) {\n                                setActiveIndex(index);\n                              }\n                            },\n                          })\n                        )\n                    )}\n                  </div>\n                </div>\n              </FloatingFocusManager>\n            )}\n          </Transition>\n        </FloatingPortal>\n      </FloatingNode>\n    );\n  }\n);\n\nMenu.displayName = \"Menu\";\n\nexport const Dropdown = forwardRef<any, DropdownProps>(\n  ({ children, placement = \"bottom-start\", ...props }, ref) => {\n    return (\n      <FloatingTree>\n        <Menu placement={placement} {...props} nested={false} ref={ref}>\n          {children}\n        </Menu>\n      </FloatingTree>\n    );\n  }\n);\n\nDropdown.displayName = \"Dropdown\";\n\nexport const MenuDivider = forwardRef<\n  HTMLDivElement,\n  HTMLProps<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div {...props} className={cx(\"divider\", className)} ref={ref} />\n));\n\nMenuDivider.displayName = \"MenuDivider\";\n\nexport const MenuGroup = forwardRef<\n  HTMLDivElement,\n  HTMLProps<HTMLDivElement> & { header?: ReactNode }\n>(({ className, header, children, ...props }, ref) => (\n  <div className={cx(\"dropdown__group\", className)} {...props} ref={ref}>\n    {header ? <div className=\"dropdown__group-header\">{header}</div> : null}\n    {children}\n  </div>\n));\n\nMenuGroup.displayName = \"MenuGroup\";\n"],"names":["MenuElement","forwardRef","selected","className","icon","children","submenu","props","ref","a","cx","styles","isValidElement","span","displayName","Menu","label","noChevron","placement","strategy","providedStrategy","portalRoot","alwaysClose","onOpen","nested","withSizeLimit","rootCtx","open","setOpen","useState","activeIndex","setActiveIndex","allowHover","setAllowHover","listItemsRef","useRef","listContentRef","Children","map","child","tree","useFloatingTree","nodeId","useFloatingNodeId","parentId","useFloatingParentNodeId","x","y","reference","floating","refs","context","useFloating","onOpenChange","st","middleware","offset","mainAxis","alignmentAxis","flip","shift","size","apply","availableHeight","availableWidth","elements","Object","assign","style","maxWidth","maxHeight","undefined","filter","Boolean","whileElementsMounted","autoUpdate","getReferenceProps","getFloatingProps","getItemProps","useInteractions","useHover","handleClose","safePolygon","restMs","enabled","delay","useClick","toggle","event","ignoreMouse","useRole","role","useDismiss","useListNavigation","listRef","onNavigate","useTypeahead","onMatch","useEffect","onTreeClick","domReference","current","focus","events","on","off","onPointerMove","onKeyDown","window","addEventListener","once","capture","removeEventListener","floatingNodeRef","mergedReferenceRef","useMergeRefs","useFloatingContext","rootRef","FloatingNode","id","cloneElement","onClick","stopPropagation","currentTarget","key","menu_root","with_chevron","FloatingPortal","root","Transition","in","mountOnEnter","unmountOnExit","timeout","enter","exit","nodeRef","state","FloatingFocusManager","modal","returnFocus","order","div","active","dropdown","disappear","r","position","top","left","emit","index","tabIndex","node","e","onPointerEnter","Dropdown","FloatingTree","MenuDivider","MenuGroup","header"],"mappings":"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"}