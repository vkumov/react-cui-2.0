{"version":3,"file":"index.js","sources":["../../src/Select/Select.tsx"],"sourcesContent":["import React, {\n  ChangeEvent,\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  forwardRef,\n  useCallback,\n  useState,\n  useRef,\n  useMemo,\n  isValidElement,\n  ReactElement,\n  ReactHTMLElement,\n  MutableRefObject,\n  FC,\n} from \"react\";\nimport { useMergeRefs } from \"use-callback-ref\";\n\nimport { InputChips } from \"src/InputChips\";\nimport type { FullInputChipsProps } from \"../InputChips\";\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport { appendClass as ac } from \"src/utils\";\n\nfunction isOption(\n  element: ReactElement<unknown>\n): element is ReactHTMLElement<HTMLOptionElement> {\n  return element.type === \"option\";\n}\n\nfunction isOptGroup(\n  element: ReactElement<unknown>\n): element is ReactHTMLElement<HTMLOptGroupElement> {\n  return element.type === \"optgroup\";\n}\n\nconst SelectChildren = ({ children, handleOptionClick, isSelected }) =>\n  React.Children.map(children, (child, idx) => {\n    if (!isValidElement(child)) return child;\n\n    if (isOption(child))\n      return (\n        <a\n          key={idx}\n          onClick={(e) => handleOptionClick(e, child.props.value)}\n          className={`${ac(isSelected(child.props.value), \"selected\")}${ac(\n            child.props.disabled,\n            \"disabled\"\n          )}`}\n        >\n          {child.props.children}\n        </a>\n      );\n\n    if (isOptGroup(child))\n      return (\n        <div key={idx} className=\"dropdown__group\">\n          <div className=\"dropdown__group-header\">{child.props.label}</div>\n          <SelectChildren\n            handleOptionClick={handleOptionClick}\n            isSelected={isSelected}\n          >\n            {child.props.children}\n          </SelectChildren>\n        </div>\n      );\n\n    return child;\n  });\n\ntype Option = {\n  label: string;\n  value: string;\n};\n\ntype EditableSelectProps = {\n  compressed?: boolean;\n  label?: ReactNode;\n  prompt?: string;\n  inline?: boolean;\n  editable?: boolean;\n  type?: \"number\" | \"text\";\n  error?: ReactNode;\n  multi?: boolean;\n  onChange?: (value) => void;\n  value?: any;\n  displayValues?: boolean;\n  disabled?: boolean;\n  divRef?: MutableRefObject<HTMLDivElement>;\n  options?: Option[];\n  onSelect?: (value: string) => void | (() => void);\n  onDeselect?: (value: string) => void | (() => void);\n};\n\ntype WantedChipsProps = Omit<\n  FullInputChipsProps,\n  \"type\" | \"label\" | \"onSelect\" | \"onDeselect\" | \"value\"\n>;\n\ntype FullEditableSelectProps = PropsWithChildren<\n  EditableSelectProps & Partial<WantedChipsProps>\n>;\n\ntype Display = {\n  display: ReactNode;\n  value: any;\n};\n\nconst collectDisplays = (children: ReactNode): Display[] => {\n  const t = [];\n  React.Children.forEach(children, (child) => {\n    if (!isValidElement(child)) return null;\n    if (isOption(child)) {\n      t.push({\n        display: child.props.children,\n        value: child.props.value,\n      });\n    }\n    if (isOptGroup(child)) t.push(collectDisplays(child.props.children));\n  });\n  return t.flat();\n};\n\nexport const EditableSelect: FC<FullEditableSelectProps> = forwardRef<\n  HTMLInputElement,\n  FullEditableSelectProps\n>(\n  (\n    {\n      compressed = false,\n      prompt = \"Select an option\",\n      inline = false,\n      type = \"text\",\n      children,\n      label = null,\n      error = null,\n      onChange = null,\n      value: initialValue = undefined,\n      editable = false,\n      multi = false,\n      displayValues = false,\n      disabled,\n      className,\n      divRef,\n      options,\n      onSelect = null,\n      onDeselect = null,\n      ...input\n    },\n    inputRef\n  ) => {\n    const [isOpen, setOpen] = useState<boolean>(false);\n    const [value, setValue] = useState(initialValue);\n    const ref = useRef<HTMLDivElement>(undefined);\n\n    const display = useMemo(() => collectDisplays(children), [children]);\n\n    const handleClick = useCallback(\n      (newState = true) => {\n        if (disabled) return;\n        setOpen(newState);\n      },\n      [disabled]\n    );\n\n    useEffect(() => {\n      if (isOpen) {\n        const onOutsideClick = (e: MouseEvent) => {\n          // ignore clicks on the component itself\n          if (!(e.target instanceof Node) || !ref?.current) return;\n          if (ref.current && ref.current.contains(e.target)) return;\n\n          if (ref.current && !ref.current.contains(e.target)) {\n            handleClick(false);\n          }\n        };\n\n        document.addEventListener(\"click\", onOutsideClick, true);\n        return () =>\n          document.removeEventListener(\"click\", onOutsideClick, true);\n      }\n    }, [isOpen, handleClick]);\n\n    const handleOptionClick = useCallback(\n      (_e, newValue) => {\n        if (multi) {\n          let added = true;\n          setValue((curr) => {\n            if (curr?.includes(newValue)) {\n              added = false;\n              return curr.filter((v) => v !== newValue);\n            } else return (curr || []).concat(newValue);\n          });\n          const r = (added ? onSelect : onDeselect)?.call(undefined, newValue);\n          if (typeof r === \"function\") r();\n        } else {\n          setValue(newValue);\n        }\n        if (!multi) handleClick(false);\n      },\n      [handleClick, multi, onSelect, onDeselect]\n    );\n\n    const isSelected = (checkValue) =>\n      multi ? value?.includes(checkValue) : value === checkValue;\n\n    useEffect(() => {\n      setValue(initialValue);\n    }, [initialValue]);\n\n    useEffect(() => {\n      if (multi && initialValue && !Array.isArray(initialValue))\n        throw Error(\"Value must be an array if multi select is allowed.\");\n    }, [multi, initialValue]);\n\n    useEffect(() => {\n      if (typeof onChange === \"function\") onChange(value);\n    }, [value]);\n\n    return (\n      <div\n        className={`form-group dropdown${ac(\n          compressed,\n          \"input--compressed\"\n        )}${ac(isOpen, \"active\")}${ac(inline, \"form-group--inline\")}${ac(\n          error,\n          \"form-group--error\"\n        )}${ac(disabled, \"disabled\")}${ac(className)}`}\n        ref={useMergeRefs([ref, divRef])}\n      >\n        {multi ? (\n          <InputChips\n            className=\"select editable\"\n            label={label}\n            {...input}\n            placeholder={\n              !Array.isArray(value) || !value.length\n                ? input.placeholder || prompt\n                : \"\"\n            }\n            readOnly={!editable}\n            onClick={() => handleClick(true)}\n            onChange={() => void 0}\n            onChipRemove={(idx) => {\n              let val: any;\n              setValue((curr: any[]) => {\n                val = curr[idx];\n                return curr.filter((_v, i) => i !== idx);\n              });\n              if (typeof onDeselect === \"function\") onDeselect(val);\n            }}\n            value={\n              displayValues\n                ? value\n                : display\n                    .filter((d) => value?.includes(d.value))\n                    .map((d) => d.display)\n            }\n            noInput={\n              inline && !editable && Array.isArray(value) && value.length > 0\n            }\n            outerWrap={false}\n            ref={inputRef}\n          />\n        ) : (\n          <div\n            className=\"form-group__text select editable\"\n            onClick={() => handleClick(true)}\n          >\n            <input\n              type={type}\n              placeholder={input.placeholder || prompt}\n              autoComplete=\"off\"\n              readOnly={!editable}\n              {...input}\n              onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                if (!editable) return;\n                e.persist();\n                setValue(e.target.value);\n              }}\n              value={\n                editable\n                  ? value || \"\"\n                  : !displayValues\n                  ? display?.find((el) => el.value === value)?.display || \"\"\n                  : value\n              }\n              ref={inputRef}\n            />\n            {label ? <label htmlFor={input.id}>{label}</label> : null}\n          </div>\n        )}\n        <div className=\"dropdown__menu\">\n          <SelectChildren\n            handleOptionClick={handleOptionClick}\n            isSelected={isSelected}\n          >\n            {options\n              ? options.map((opt, idx) => (\n                  <option key={idx} value={opt.value}>\n                    {opt.value}\n                  </option>\n                ))\n              : children}\n          </SelectChildren>\n        </div>\n        {error ? <InputHelpBlock text={error} /> : null}\n      </div>\n    );\n  }\n);\n"],"names":["isOption","element","type","isOptGroup","SelectChildren","children","handleOptionClick","isSelected","React","Children","map","child","idx","isValidElement","a","key","onClick","e","props","value","className","ac","disabled","div","label","collectDisplays","t","forEach","push","display","flat","EditableSelect","forwardRef","compressed","prompt","inline","error","onChange","initialValue","undefined","editable","multi","displayValues","divRef","options","onSelect","onDeselect","input","inputRef","isOpen","setOpen","useState","setValue","ref","useRef","useMemo","handleClick","useCallback","newState","useEffect","onOutsideClick","target","Node","current","contains","document","addEventListener","removeEventListener","_e","newValue","added","curr","includes","filter","v","concat","r","call","checkValue","Array","isArray","Error","useMergeRefs","InputChips","placeholder","length","readOnly","onChipRemove","val","_v","i","d","noInput","outerWrap","autoComplete","persist","find","el","htmlFor","id","opt","option","InputHelpBlock","text"],"mappings":"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"}