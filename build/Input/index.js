import{jsxs as t,jsx as l}from"react/jsx-runtime";import{forwardRef as x}from"react";import{ConditionalWrapper as N,DisplayIf as g}from"../Conditional/index.js";import{InputHelpBlock as $}from"../InputHelp/index.js";import{appendClass as n}from"../utils/index.js";const k=x(({type:c="text",inline:o=null,helpBlock:m=!0,label:a=null,icon:r=null,iconClick:u=null,className:d=null,plain:f=!1,horizontal:p=null,horizontalLabelClassName:h="col-3",error:i=null,prefix:e=null,...s},b)=>t("div",{className:`form-group${n(d)}${n(i,"form-group--error")}${n(o==="form"||o==="both","form-group--inline")}${n(o==="label"||o==="both","label--inline")}${n(r,"input--icon")}${n(p,"form-group--horizontal")}`,children:[t("div",{className:"form-group__text",children:[t(N,{wrapper:l("div",{className:"flex labeled"}),condition:!!e,children:[e?l("div",{className:"input-label",children:e}):null,l("input",{type:c,ref:b,...s,className:n(f,"form-group--plaintext")})]}),a?l("label",{htmlFor:s.id,className:n(p,h),children:a}):null,r?l("button",{type:"button",className:"link",tabIndex:-1,onClick:u,children:typeof r=="string"?l("span",{className:r.startsWith(" ")?r:`icon-${r}`}):r}):null]}),l(g,{condition:!o&&m&&!!i,children:l($,{text:i})})]}));export{k as Input};
//# sourceMappingURL=index.js.map
