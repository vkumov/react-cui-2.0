{"version":3,"file":"index.js","sources":["../../src/Button/Button.tsx","../../src/Button/ButtonGroup.tsx"],"sourcesContent":["import React, {\n  createElement,\n  forwardRef,\n  ForwardRefExoticComponent,\n  HTMLProps,\n} from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nimport \"../../css/buttons.css\";\n\nexport type ButtonColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"success\"\n  | \"dark\"\n  | \"ghost\"\n  | \"link\"\n  | \"light\"\n  | \"danger\";\n\nexport type ButtonProps = {\n  size?: \"small\" | \"default\" | \"large\";\n  color?: ButtonColor;\n  wide?: boolean;\n  justified?: boolean;\n  circle?: boolean;\n  asLink?: boolean;\n  selected?: boolean;\n  style?: React.CSSProperties;\n  className?: string;\n  icon?: boolean;\n  type?: \"submit\" | \"reset\" | \"button\";\n} & Omit<HTMLProps<HTMLButtonElement>, \"size\">;\n\ntype BFR = ForwardRefExoticComponent<ButtonProps>;\n\ninterface ButtonType extends BFR {\n  Primary: BFR;\n  Secondary: BFR;\n  Success: BFR;\n  Dark: BFR;\n  Ghost: ForwardRefExoticComponent<ButtonProps & { fullGhost?: boolean }>;\n  Link: BFR;\n  Light: BFR;\n  Danger: BFR;\n}\n\nlet Button: ButtonType;\n\n(Button as any) = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  ButtonProps\n>(\n  (\n    {\n      size = \"default\",\n      color = \"primary\",\n      wide = false,\n      justified = false,\n      circle = false,\n      className = null,\n      asLink = false,\n      style = null,\n      selected = false,\n      type = null,\n      icon = false,\n      ...props\n    },\n    ref\n  ) =>\n    createElement(asLink ? \"a\" : \"button\", {\n      className: `btn${ac(\n        size !== \"default\",\n        `btn--${size}`\n      )} btn--${color}${ac(wide, \"btn--wide\")}${ac(\n        justified,\n        \"btn--justified\"\n      )}${ac(icon, \"btn--icon\")}${ac(circle, \"btn--circle\")}${ac(\n        selected,\n        \"selected\"\n      )}${ac(className)}${ac(asLink, \"flex-middle flex-center\")}`,\n      style: { ...(style || {}), ...(asLink ? { display: \"flex\" } : {}) },\n      ...(asLink ? {} : { type: type || \"button\" }),\n      ...props,\n      ref,\n    })\n);\n\nButton.Primary = forwardRef((props, ref) => (\n  <Button {...props} color=\"primary\" ref={ref} />\n));\nButton.Secondary = forwardRef((props, ref) => (\n  <Button {...props} color=\"secondary\" ref={ref} />\n));\nButton.Success = forwardRef((props, ref) => (\n  <Button {...props} color=\"success\" ref={ref} />\n));\nButton.Dark = forwardRef((props, ref) => (\n  <Button {...props} color=\"dark\" ref={ref} />\n));\nButton.Ghost = forwardRef(({ fullGhost = false, className, ...props }, ref) => (\n  <Button\n    className={`${ac(fullGhost, \"btn--full-ghost\")}${ac(className)}`}\n    {...props}\n    color=\"ghost\"\n    ref={ref}\n  />\n));\nButton.Link = forwardRef((props, ref) => (\n  <Button {...props} color=\"link\" ref={ref} />\n));\nButton.Light = forwardRef((props, ref) => (\n  <Button {...props} color=\"light\" ref={ref} />\n));\nButton.Danger = forwardRef((props, ref) => (\n  <Button {...props} color=\"danger\" ref={ref} />\n));\n\nexport { Button };\n","import React, { forwardRef } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nexport type ButtonGroupProps = {\n  square?: boolean;\n  withDivider?: boolean;\n  className?: string;\n};\n\nexport const ButtonGroup = forwardRef<\n  HTMLDivElement,\n  ButtonGroupProps & React.HTMLProps<HTMLDivElement>\n>(\n  (\n    { square = false, withDivider = false, className = null, ...props },\n    ref\n  ) => (\n    <div\n      className={`btn-group${ac(square, \"btn-group--square\")}${ac(\n        withDivider,\n        \" btn-group--divider\"\n      )}${ac(className)}`}\n      {...props}\n      ref={ref}\n    />\n  )\n);\n"],"names":["_extends","Button","forwardRef","size","color","wide","justified","circle","className","asLink","style","selected","type","icon","props","ref","createElement","ac","display","Primary","Secondary","Success","Dark","Ghost","fullGhost","Link","Light","Danger","ButtonGroup","square","withDivider","div"],"mappings":"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"}