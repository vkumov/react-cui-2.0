{"version":3,"file":"creatable.js","sources":["../../src/ReactSelect/components.tsx","../../src/ReactSelect/ReactSelectCreatable.tsx"],"sourcesContent":["import React from \"react\";\nimport type {\n  MultiValueGenericProps,\n  MultiValueRemoveProps,\n  GroupHeadingProps,\n  GroupProps,\n} from \"react-select\";\n\nimport { appendClass } from \"src/utils\";\nimport type { LabelColor } from \"src/Label\";\n\nexport const MultiValueContainer = (\n  props: MultiValueGenericProps<any>\n): JSX.Element => {\n  const color: LabelColor =\n    (props.selectProps as any).multiValueColor || \"primary\";\n  return (\n    <div\n      className={`label label--${color} label--small${appendClass(\n        props.innerProps?.className\n      )}`}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport const MultiValueLabel = (props: MultiValueGenericProps): JSX.Element => {\n  return <span>{props.children}</span>;\n};\n\nexport const MultiValueRemove = ({\n  innerProps: { className, ...props },\n}: MultiValueRemoveProps): JSX.Element => {\n  return <span className=\"icon-close\" {...props} />;\n};\n\nexport function Group<Option = unknown, IsMulti extends boolean = boolean>({\n  className,\n  children,\n  Heading,\n  headingProps,\n  innerProps,\n  ...props\n}: GroupProps<Option, IsMulti>) {\n  return (\n    <div className={`dropdown__group${appendClass(className)}`} {...innerProps}>\n      <Heading {...props} id={headingProps.id}>\n        {headingProps.data.label}\n      </Heading>\n      {children}\n    </div>\n  );\n}\n\nexport function GroupHeading<\n  Option = unknown,\n  IsMulti extends boolean = boolean\n>({ className, children, ...props }: GroupHeadingProps<Option, IsMulti>) {\n  return (\n    <div className={`dropdown__group-header${appendClass(className)}`}>\n      {children}\n    </div>\n  );\n}\n","import React, { forwardRef, type Ref, type ReactNode } from \"react\";\nimport type { GroupBase } from \"react-select/dist/declarations/src/types\";\nimport type SelectGeneric from \"react-select/dist/declarations/src/Select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport type { CreatableProps } from \"react-select/creatable\";\n\nimport { appendClass } from \"src/utils\";\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport type { LabelColor } from \"src/Label\";\n\nimport \"../../css/react-select.css\";\nimport {\n  MultiValueContainer,\n  MultiValueLabel,\n  MultiValueRemove,\n  Group as GroupComponent,\n  GroupHeading,\n} from \"./components\";\n\ntype CUISelectProps = {\n  label?: ReactNode;\n  multiValueColor?: LabelColor;\n  error?: ReactNode | boolean;\n};\n\nexport type CreatableReactSelectProps<\n  Option = unknown,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = CreatableProps<Option, IsMulti, Group> & CUISelectProps;\n\nfunction UnrefedSelect<\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  {\n    label = null,\n    className,\n    error,\n    ...props\n  }: CreatableReactSelectProps<Option, IsMulti, Group>,\n  ref: Ref<SelectGeneric<Option, IsMulti, Group>>\n): JSX.Element {\n  return (\n    <div\n      className={`form-group${appendClass(className)}${appendClass(\n        error,\n        \"form-group--error\"\n      )}`}\n    >\n      {label && <label>{label}</label>}\n      <CreatableSelect\n        className=\"react-select-container qtr-margin-top\"\n        classNamePrefix=\"react-select\"\n        components={{\n          MultiValueContainer,\n          MultiValueLabel,\n          MultiValueRemove,\n          Group: GroupComponent,\n          GroupHeading,\n        }}\n        formatCreateLabel={(inputValue: string) => (\n          <>\n            {props.isMulti ? \"Add \" : \"Use \"}\n            <span className=\"text-bold\">{inputValue}</span>\n          </>\n        )}\n        {...props}\n        ref={ref}\n      />\n      {Boolean(error) && typeof error !== \"boolean\" ? (\n        <InputHelpBlock text={error} />\n      ) : null}\n    </div>\n  );\n}\n\nexport const CreatableReactSelect = forwardRef(UnrefedSelect) as <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: CreatableReactSelectProps<Option, IsMulti, Group> & {\n    ref?: React.ForwardedRef<SelectGeneric<Option, IsMulti, Group>>;\n  }\n) => ReturnType<typeof UnrefedSelect>;\n"],"names":["_extends","MultiValueContainer","props","color","selectProps","multiValueColor","div","className","appendClass","innerProps","children","MultiValueLabel","span","MultiValueRemove","Group","Heading","headingProps","id","data","label","GroupHeading","UnrefedSelect","error","ref","CreatableSelect","classNamePrefix","components","GroupComponent","formatCreateLabel","inputValue","isMulti","Boolean","InputHelpBlock","text","CreatableReactSelect","forwardRef"],"mappings":"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"}