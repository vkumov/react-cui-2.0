{"version":3,"file":"creatable.js","sources":["../../src/ReactSelect/components.tsx","../../src/ReactSelect/ReactSelectCreatable.tsx"],"sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport type {\n  GroupHeadingProps,\n  GroupProps,\n  MultiValueGenericProps,\n  MultiValueRemoveProps,\n} from \"react-select\";\n\nimport type { LabelColor } from \"src/Label\";\n\nexport const MultiValueContainer = (\n  props: MultiValueGenericProps<any>\n): JSX.Element => {\n  const color: LabelColor =\n    (props.selectProps as any).multiValueColor || \"primary\";\n  return (\n    <div\n      className={cx(\n        `label label--${color} label--small`,\n        props.innerProps?.className\n      )}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport const MultiValueLabel = (props: MultiValueGenericProps): JSX.Element => {\n  return <span>{props.children}</span>;\n};\n\nexport const MultiValueRemove = ({\n  innerProps: props,\n}: MultiValueRemoveProps): JSX.Element => {\n  return <span {...props} className=\"icon-close\" />;\n};\n\nexport function Group<Option = unknown, IsMulti extends boolean = boolean>({\n  className,\n  children,\n  Heading,\n  headingProps,\n  innerProps,\n  ...props\n}: GroupProps<Option, IsMulti>) {\n  return (\n    <div className={cx(\"dropdown__group\", className)} {...innerProps}>\n      <Heading {...props} id={headingProps.id}>\n        {headingProps.data.label}\n      </Heading>\n      {children}\n    </div>\n  );\n}\n\nexport function GroupHeading<\n  Option = unknown,\n  IsMulti extends boolean = boolean\n>({ className, children }: GroupHeadingProps<Option, IsMulti>) {\n  return (\n    <div className={cx(\"dropdown__group-header\", className)}>{children}</div>\n  );\n}\n","import React, { forwardRef, type ReactNode, type Ref } from \"react\";\nimport cx from \"classnames\";\nimport CreatableSelect, { type CreatableProps } from \"react-select/creatable\";\nimport type SelectGeneric from \"react-select/dist/declarations/src/Select\";\nimport type { GroupBase } from \"react-select/dist/declarations/src/types\";\n\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport type { LabelColor } from \"src/Label\";\n\nimport \"../../css/react-select.css\";\nimport sts from \"./Select.module.scss\";\nimport {\n  Group as GroupComponent,\n  GroupHeading,\n  MultiValueContainer,\n  MultiValueLabel,\n  MultiValueRemove,\n} from \"./components\";\n\ntype CUISelectProps = {\n  label?: ReactNode;\n  multiValueColor?: LabelColor;\n  error?: ReactNode | boolean;\n};\n\nexport type CreatableReactSelectProps<\n  Option = unknown,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = CreatableProps<Option, IsMulti, Group> & CUISelectProps;\n\nfunction UnrefedSelect<\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  {\n    label = null,\n    className,\n    error,\n    ...props\n  }: CreatableReactSelectProps<Option, IsMulti, Group>,\n  ref: Ref<SelectGeneric<Option, IsMulti, Group>>\n): JSX.Element {\n  return (\n    <div\n      className={cx(\"form-group\", className, {\n        \"form-group--error\": error,\n        [sts.multi_select]: props.isMulti,\n      })}\n    >\n      {label && <label>{label}</label>}\n      <CreatableSelect\n        className=\"react-select-container qtr-margin-top\"\n        classNamePrefix=\"react-select\"\n        components={{\n          MultiValueContainer,\n          MultiValueLabel,\n          MultiValueRemove,\n          Group: GroupComponent,\n          GroupHeading,\n        }}\n        formatCreateLabel={(inputValue: string) => (\n          <>\n            {props.isMulti ? \"Add \" : \"Use \"}\n            <span className=\"text-bold\">{inputValue}</span>\n          </>\n        )}\n        {...props}\n        ref={ref}\n      />\n      {Boolean(error) && typeof error !== \"boolean\" ? (\n        <InputHelpBlock text={error} />\n      ) : null}\n    </div>\n  );\n}\n\nexport const CreatableReactSelect = forwardRef(UnrefedSelect) as <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: CreatableReactSelectProps<Option, IsMulti, Group> & {\n    ref?: React.ForwardedRef<SelectGeneric<Option, IsMulti, Group>>;\n  }\n) => ReturnType<typeof UnrefedSelect>;\n"],"names":["MultiValueContainer","props","_a","color","React","cx","MultiValueLabel","MultiValueRemove","Group","className","children","Heading","headingProps","innerProps","GroupHeading","UnrefedSelect","label","error","ref","sts","CreatableSelect","GroupComponent","inputValue","InputHelpBlock","CreatableReactSelect","forwardRef"],"mappings":"qQAWa,MAAAA,EACXC,GACgB,CAblB,IAAAC,EAcE,MAAMC,EACHF,EAAM,YAAoB,iBAAmB,UAChD,OACEG,EAAA,cAAC,MAAA,CACC,UAAWC,EACT,gBAAgBF,kBAChBD,EAAAD,EAAM,aAAN,KAAA,OAAAC,EAAkB,SACpB,CAAA,EAECD,EAAM,QACT,CAEJ,EAEaK,EAAmBL,GACvBG,EAAA,cAAC,OAAMH,KAAAA,EAAM,QAAS,EAGlBM,EAAmB,CAAC,CAC/B,WAAYN,CACd,IACSG,EAAA,cAAC,OAAM,CAAA,GAAGH,EAAO,UAAU,YAAa,CAAA,EAGjC,SAAAO,EAA2D,CACzE,UAAAC,EACA,SAAAC,EACA,QAAAC,EACA,aAAAC,EACA,WAAAC,EACA,GAAGZ,CACL,EAAgC,CAC9B,OACEG,EAAA,cAAC,MAAA,CAAI,UAAWC,EAAG,kBAAmBI,CAAS,EAAI,GAAGI,CACpDT,EAAAA,EAAA,cAACO,EAAA,CAAS,GAAGV,EAAO,GAAIW,EAAa,EAAA,EAClCA,EAAa,KAAK,KACrB,EACCF,CACH,CAEJ,CAEO,SAASI,EAGd,CAAE,UAAAL,EAAW,SAAAC,CAAS,EAAuC,CAC7D,OACEN,EAAA,cAAC,MAAA,CAAI,UAAWC,EAAG,yBAA0BI,CAAS,CAAIC,EAAAA,CAAS,CAEvE,CChCA,SAASK,EAKP,CACE,MAAAC,EAAQ,KACR,UAAAP,EACA,MAAAQ,EACA,GAAGhB,CACL,EACAiB,EACa,CACb,OACEd,EAAA,cAAC,MACC,CAAA,UAAWC,EAAG,aAAcI,EAAW,CACrC,oBAAqBQ,EACrB,CAACE,EAAI,YAAY,EAAGlB,EAAM,OAC5B,CAAC,CAEAe,EAAAA,GAASZ,EAAA,cAAC,QAAOY,KAAAA,CAAM,EACxBZ,EAAA,cAACgB,EAAA,CACC,UAAU,wCACV,gBAAgB,eAChB,WAAY,CACV,oBAAApB,EACA,gBAAAM,EACA,iBAAAC,EACA,MAAOc,EACP,aAAAP,CACF,EACA,kBAAoBQ,GAClBlB,EAAA,cAAAA,EAAA,cACGH,EAAM,QAAU,OAAS,OAC1BG,EAAA,cAAC,OAAK,CAAA,UAAU,WAAakB,EAAAA,CAAW,CAC1C,EAED,GAAGrB,EACJ,IAAKiB,CAAAA,CACP,EACSD,GAAU,OAAOA,GAAU,UAClCb,EAAA,cAACmB,EAAA,CAAe,KAAMN,CAAAA,CAAO,EAC3B,IACN,CAEJ,CAEa,MAAAO,EAAuBC,EAAWV,CAAa"}