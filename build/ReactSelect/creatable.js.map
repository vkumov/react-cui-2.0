{"version":3,"file":"creatable.js","sources":["../../src/ReactSelect/components.tsx","../../src/ReactSelect/ReactSelectCreatable.tsx"],"sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport type {\n  GroupHeadingProps,\n  GroupProps,\n  MultiValueGenericProps,\n  MultiValueRemoveProps,\n} from \"react-select\";\n\nimport type { LabelColor } from \"src/Label\";\n\nexport const MultiValueContainer = (\n  props: MultiValueGenericProps<any>\n): JSX.Element => {\n  const color: LabelColor =\n    (props.selectProps as any).multiValueColor || \"primary\";\n  return (\n    <div\n      className={cx(\n        `label label--${color} label--small`,\n        props.innerProps?.className\n      )}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport const MultiValueLabel = (props: MultiValueGenericProps): JSX.Element => {\n  return <span>{props.children}</span>;\n};\n\nexport const MultiValueRemove = ({\n  innerProps: props,\n}: MultiValueRemoveProps): JSX.Element => {\n  return <span {...props} className=\"icon-close\" />;\n};\n\nexport function Group<Option = unknown, IsMulti extends boolean = boolean>({\n  className,\n  children,\n  Heading,\n  headingProps,\n  innerProps,\n  ...props\n}: GroupProps<Option, IsMulti>) {\n  return (\n    <div className={cx(\"dropdown__group\", className)} {...innerProps}>\n      <Heading {...props} id={headingProps.id}>\n        {headingProps.data.label}\n      </Heading>\n      {children}\n    </div>\n  );\n}\n\nexport function GroupHeading<\n  Option = unknown,\n  IsMulti extends boolean = boolean\n>({ className, children }: GroupHeadingProps<Option, IsMulti>) {\n  return (\n    <div className={cx(\"dropdown__group-header\", className)}>{children}</div>\n  );\n}\n","import React, { forwardRef, type ReactNode, type Ref } from \"react\";\nimport cx from \"classnames\";\nimport CreatableSelect, { type CreatableProps } from \"react-select/creatable\";\nimport type SelectGeneric from \"react-select/dist/declarations/src/Select\";\nimport type { GroupBase } from \"react-select/dist/declarations/src/types\";\n\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport type { LabelColor } from \"src/Label\";\n\nimport \"../../css/react-select.css\";\nimport sts from \"./Select.module.scss\";\nimport {\n  Group as GroupComponent,\n  GroupHeading,\n  MultiValueContainer,\n  MultiValueLabel,\n  MultiValueRemove,\n} from \"./components\";\n\ntype CUISelectProps = {\n  label?: ReactNode;\n  multiValueColor?: LabelColor;\n  error?: ReactNode | boolean;\n  inline?: boolean;\n};\n\nexport type CreatableReactSelectProps<\n  Option = unknown,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = CreatableProps<Option, IsMulti, Group> & CUISelectProps;\n\nfunction UnrefedSelect<\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  {\n    label = null,\n    className,\n    error,\n    inline,\n    ...props\n  }: CreatableReactSelectProps<Option, IsMulti, Group>,\n  ref: Ref<SelectGeneric<Option, IsMulti, Group>>\n): JSX.Element {\n  return (\n    <div\n      className={cx(\"form-group\", className, {\n        \"form-group--error\": error,\n        \"form-group--inline\": inline,\n        [sts.multi_select]: props.isMulti,\n      })}\n    >\n      <div className=\"form-group__text\">\n        {label && <label>{label}</label>}\n        <CreatableSelect\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          components={{\n            MultiValueContainer,\n            MultiValueLabel,\n            MultiValueRemove,\n            Group: GroupComponent,\n            GroupHeading,\n          }}\n          formatCreateLabel={(inputValue: string) => (\n            <>\n              {props.isMulti ? \"Add \" : \"Use \"}\n              <span className=\"text-bold\">{inputValue}</span>\n            </>\n          )}\n          {...props}\n          ref={ref}\n        />\n      </div>\n      {Boolean(error) && typeof error !== \"boolean\" ? (\n        <InputHelpBlock text={error} />\n      ) : null}\n    </div>\n  );\n}\n\nexport const CreatableReactSelect = forwardRef(UnrefedSelect) as <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: CreatableReactSelectProps<Option, IsMulti, Group> & {\n    ref?: React.ForwardedRef<SelectGeneric<Option, IsMulti, Group>>;\n  }\n) => ReturnType<typeof UnrefedSelect>;\n"],"names":["MultiValueContainer","props","_a","color","jsx","cx","MultiValueLabel","MultiValueRemove","Group","className","children","Heading","headingProps","innerProps","jsxs","GroupHeading","UnrefedSelect","label","error","inline","ref","sts","CreatableSelect","GroupComponent","inputValue","Fragment","InputHelpBlock","CreatableReactSelect","forwardRef"],"mappings":"kUAWa,MAAAA,EACXC,GACgB,CAblB,IAAAC,EAcE,MAAMC,EACHF,EAAM,YAAoB,iBAAmB,UAChD,OACEG,EAAC,MACC,CAAA,UAAWC,EACT,gBAAgBF,kBAChBD,EAAAD,EAAM,aAAN,KAAAC,OAAAA,EAAkB,SACpB,EAEC,SAAAD,EAAM,QACT,CAAA,CAEJ,EAEaK,EAAmBL,GACvBG,EAAC,OAAM,CAAA,SAAAH,EAAM,QAAA,CAAS,EAGlBM,EAAmB,CAAC,CAC/B,WAAYN,CACd,IACSG,EAAC,OAAM,CAAA,GAAGH,EAAO,UAAU,YAAa,CAAA,EAGjC,SAAAO,EAA2D,CACzE,UAAAC,EACA,SAAAC,EACA,QAAAC,EACA,aAAAC,EACA,WAAAC,EACA,GAAGZ,CACL,EAAgC,CAC9B,OACEa,EAAC,MAAI,CAAA,UAAWT,EAAG,kBAAmBI,CAAS,EAAI,GAAGI,EACpD,SAAAT,CAAAA,EAACO,EAAA,CAAS,GAAGV,EAAO,GAAIW,EAAa,GAClC,SAAAA,EAAa,KAAK,KACrB,CAAA,EACCF,CACH,CAAA,CAAA,CAEJ,CAEO,SAASK,EAGd,CAAE,UAAAN,EAAW,SAAAC,CAAS,EAAuC,CAC7D,OACEN,EAAC,MAAI,CAAA,UAAWC,EAAG,yBAA0BI,CAAS,EAAI,SAAAC,CAAAA,CAAS,CAEvE,CC/BA,SAASM,EAKP,CACE,MAAAC,EAAQ,KACR,UAAAR,EACA,MAAAS,EACA,OAAAC,EACA,GAAGlB,CACL,EACAmB,EACa,CACb,OACEN,EAAC,MAAA,CACC,UAAWT,EAAG,aAAcI,EAAW,CACrC,oBAAqBS,EACrB,qBAAsBC,EACtB,CAACE,EAAI,YAAY,EAAGpB,EAAM,OAC5B,CAAC,EAED,SAAAa,CAAAA,EAAC,MAAI,CAAA,UAAU,mBACZ,SAAAG,CAAAA,GAASb,EAAC,QAAA,CAAO,SAAAa,CAAM,CAAA,EACxBb,EAACkB,EAAA,CACC,UAAU,yBACV,gBAAgB,eAChB,WAAY,CACV,oBAAAtB,EACA,gBAAAM,EACA,iBAAAC,EACA,MAAOgB,EACP,aAAAR,CACF,EACA,kBAAoBS,GAClBV,EAAAW,EAAA,CACG,SAAA,CAAAxB,EAAM,QAAU,OAAS,OAC1BG,EAAC,OAAK,CAAA,UAAU,YAAa,SAAAoB,EAAW,CAC1C,CAAA,CAAA,EAED,GAAGvB,EACJ,IAAKmB,CACP,CAAA,CAAA,CAAA,CACF,EACSF,GAAU,OAAOA,GAAU,UAClCd,EAACsB,EAAA,CAAe,KAAMR,CAAO,CAAA,EAC3B,MACN,CAEJ,CAEa,MAAAS,EAAuBC,EAAWZ,CAAa"}