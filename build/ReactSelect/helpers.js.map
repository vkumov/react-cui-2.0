{"version":3,"file":"helpers.js","sources":["../../src/ReactSelect/helpers.ts"],"sourcesContent":["import type { ReactNode } from \"react\";\n\nexport type Option<V = string> = { label?: ReactNode; value: V };\nexport type OptionGroup<O> = { label?: ReactNode; options: readonly O[] };\n\nexport function isGrouped<O extends { value: any }>(\n  v: O | OptionGroup<O>\n): v is OptionGroup<O> {\n  return \"options\" in v;\n}\n\nexport function findOption<V, O extends { value: V } = Option<V>>(\n  value: V,\n  options: readonly (O | OptionGroup<O>)[]\n): O {\n  let found: O;\n  for (const it of options) {\n    if (isGrouped<O>(it)) found = findOption<V, O>(value, it.options);\n    else found = it.value === value ? it : null;\n\n    if (found) return found;\n  }\n}\n"],"names":["isGrouped","v","findOption","value","options","found","it"],"mappings":"AAKO,SAASA,UACdC,CAAqB,CACA,CACrB,MAAO,YAAaA,CACtB,CAEO,SAASC,WACdC,KAAQ,CACRC,OAAwC,CACrC,CACH,IAAIC,UACC,+BAAA,wBAAA,6BAAL,QAAK,UAAYD,2BAAZ,QAAA,2BAAA,MAAA,wBAAA,+BAAqB,CAArB,IAAME,GAAN,YACH,GAAIN,UAAaM,IAAKD,MAAQH,WAAiBC,MAAOG,GAAGF,OAAO,OAC3DC,MAAQC,GAAGH,KAAK,GAAKA,MAAQG,GAAK,IAAI,AAAA,CAE3C,GAAID,MAAO,OAAOA,KAAAA,AACpB,aALK,uBAAA,mCAAA,2BAAA,wBAAA,+BAAA,yBAAA,iBAMP"}