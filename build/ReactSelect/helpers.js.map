{"version":3,"file":"helpers.js","sources":["../../src/ReactSelect/helpers.ts"],"sourcesContent":["import type { ReactNode } from \"react\";\n\nexport type Option<V = string> = { label: ReactNode; value: V };\nexport type OptionGroup<O> = { label: ReactNode; options: O[] };\n\nexport function isGrouped<O extends { value: any }>(\n  v: O | OptionGroup<O>\n): v is OptionGroup<O> {\n  return \"options\" in v;\n}\n\nexport function findOption<V, O extends { value: V } = Option<V>>(\n  value: V,\n  options: (O | OptionGroup<O>)[]\n): O {\n  let found: O;\n  for (const it of options) {\n    if (isGrouped<O>(it)) found = findOption<V, O>(value, it.options);\n    else found = it.value === value ? it : null;\n\n    if (found) return found;\n  }\n}\n"],"names":["isGrouped","v","findOption","value","options","found","it"],"mappings":"AAKO,SAASA,SAAS,CACvBC,CAAqB,EACA;IACrB,OAAO,SAAS,IAAIA,CAAC,CAAC;AACvB,CAAA;AAEM,SAASC,UAAU,CACxBC,KAAQ,EACRC,OAA+B,EAC5B;IACH,IAAIC,KAAK,CAAI;AACb,IAAA,KAAK,MAAMC,EAAE,IAAIF,OAAO,CAAE;AACxB,QAAA,IAAIJ,SAAS,CAAIM,EAAE,CAAC,EAAED,KAAK,GAAGH,UAAU,CAAOC,KAAK,EAAEG,EAAE,CAACF,OAAO,CAAC,CAAC;aAC7DC,KAAK,GAAGC,EAAE,CAACH,KAAK,KAAKA,KAAK,GAAGG,EAAE,GAAG,IAAI,CAAC;AAE5C,QAAA,IAAID,KAAK,EAAE,OAAOA,KAAK,CAAC;AACzB,KAAA;AACF;;;;"}