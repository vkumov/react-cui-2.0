{"version":3,"file":"helpers.js","sources":["../../src/ReactSelect/helpers.ts"],"sourcesContent":["import type { ReactNode } from \"react\";\n\nexport type Option = { label: ReactNode; value: string };\nexport type OptionGroup = { label: ReactNode; options: Option[] };\n\nexport const isGrouped = (v: Option | OptionGroup): v is OptionGroup => {\n  return \"options\" in v;\n};\n\nexport const findOption = (\n  value: any,\n  options: (Option | OptionGroup)[]\n): Option => {\n  let found: Option;\n  for (const it of options) {\n    if (isGrouped(it)) found = findOption(value, it.options);\n    else found = it.value === value ? it : null;\n\n    if (found) return found;\n  }\n};\n"],"names":["isGrouped","v","findOption","value","options","found","it"],"mappings":"AAKaA,IAAAA,SAAS,GAAG,SAACC,CAAuB,EAAuB;IACtE,OAAO,SAAS,IAAIA,CAAC,CAAC;EACtB;IAEWC,UAAU,GAAG,SACxBC,KAAU,EACVC,OAAiC,EACtB;IACX,IAAIC,KAAK,CAAS;QACb,yBAAQ,GAAA,IAAA,EAAR,iBAAQ,GAAA,KAAA,EAAR,cAAQ,GAAA,SAAA,CAAA;;AAAb,QAAA,IAAA,IAAK,SAAQ,GAAID,OAAO,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAnB,KAAQ,EAAA,EAAR,yBAAQ,GAAA,CAAR,KAAQ,GAAR,SAAQ,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAR,yBAAQ,GAAa,IAAA,CAAA;YAArB,IAAME,EAAE,GAAR,KAAQ,CAAA,KAAA,CAAA;AACX,YAAA,IAAIN,SAAS,CAACM,EAAE,CAAC,EAAED,KAAK,GAAGH,UAAU,CAACC,KAAK,EAAEG,EAAE,CAACF,OAAO,CAAC,CAAC;iBACpDC,KAAK,GAAGC,EAAE,CAACH,KAAK,KAAKA,KAAK,GAAGG,EAAE,GAAG,IAAI,CAAC;AAE5C,YAAA,IAAID,KAAK,EAAE,OAAOA,KAAK,CAAC;AACzB,SAAA;;QALI,iBAAQ,GAAA,IAAA,CAAA;QAAR,cAAQ,GAAA,GAAA,CAAA;;;AAAR,YAAA,IAAA,CAAA,yBAAQ,IAAR,SAAQ,CAAA,MAAA,IAAA,IAAA,EAAA;gBAAR,SAAQ,CAAA,MAAA,EAAA,CAAA;;;gBAAR,iBAAQ,EAAA;sBAAR,cAAQ,CAAA;;;;;;;;"}