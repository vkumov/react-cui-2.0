{"version":3,"file":"index.js","sources":["../../src/Gauge/Gauge.tsx"],"sourcesContent":["import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\n\nimport { appendClass } from \"src/utils\";\n\nexport type GaugeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype GaugeProps = {\n  color?: GaugeColor;\n  size?: \"small\" | \"default\" | \"large\";\n  className?: string;\n  label?: ReactNode;\n  percentage: number;\n};\n\nexport const Gauge = forwardRef<\n  HTMLDivElement,\n  GaugeProps & Omit<HTMLProps<HTMLDivElement>, \"size\">\n>(\n  (\n    {\n      color = \"primary\",\n      size = \"default\",\n      className = null,\n      label,\n      percentage,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        className={`gauge-container${appendClass(className)}`}\n        {...props}\n        ref={ref}\n      >\n        <div\n          className={`gauge${appendClass(\n            size && size !== \"default\",\n            `gauge--${size}`\n          )}${appendClass(color, `gauge--${color}`)}`}\n          data-percentage={`${percentage}`}\n        >\n          <div className=\"gauge__circle\">\n            <div className=\"mask full\">\n              <div className=\"fill\"></div>\n            </div>\n            <div className=\"mask half\">\n              <div className=\"fill\"></div>\n              <div className=\"fill fix\"></div>\n            </div>\n          </div>\n          <div className=\"gauge__inset\">\n            <div className=\"gauge__percentage\">{percentage}</div>\n          </div>\n        </div>\n        {label ? <div className=\"gauge__label\">{label}</div> : null}\n      </div>\n    );\n  }\n);\n"],"names":["_extends","Gauge","forwardRef","ref","color","size","className","label","percentage","props","React","div","appendClass","data-percentage"],"mappings":"oxBAAA,SAAAA,UAAA,iQAwBO,IAAMC,MAAQC,WAInB,gBASEC,IACG,mBARDC,MAAAA,sBAAQ,8BACRC,KAAAA,oBAAO,kCACPC,UAAAA,8BAAY,IAAI,YAChBC,aAAAA,MACAC,kBAAAA,WACGC,uCALHL,QACAC,OACAC,YACAC,QACAC,eAKF,OACEE,MAACC,aAAAA,CAAAA,MAAAA,SAAAA,CACCL,UAAW,AAAC,kBAAwC,OAAvBM,YAAYN,WACrCG,EAAAA,MAAAA,CACJN,IAAKA,MAELO,MAACC,aAAAA,CAAAA,MAAAA,CACCL,UAAW,AAAC,QAGRM,OAHeA,YACjBP,MAAQA,OAAS,UACjB,AAAC,UAAc,OAALA,QAC8B,OAAtCO,YAAYR,MAAO,AAAC,UAAe,OAANA,SACjCS,kBAAiB,AAAC,GAAa,OAAXL,aAEpBE,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,iBACbI,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,aACbI,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,UAEjBI,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,aACbI,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,SACfI,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,eAGnBI,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,gBACbI,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,mBAAqBE,EAAAA,cAGvCD,MAAQG,MAACC,aAAAA,CAAAA,MAAAA,CAAIL,UAAU,cAAgBC,EAAAA,OAAe,IAAI,CAGjE"}