{"version":3,"file":"index.js","sources":["../../src/Gauge/Gauge.tsx"],"sourcesContent":["import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\nimport { appendClass } from \"../utils\";\n\nexport type GaugeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype GaugeProps = {\n  color?: GaugeColor;\n  size?: \"small\" | \"default\" | \"large\";\n  className?: string;\n  label?: ReactNode;\n  percentage: number;\n};\n\nexport const Gauge = forwardRef<\n  HTMLDivElement,\n  GaugeProps & Omit<HTMLProps<HTMLDivElement>, \"size\">\n>(\n  (\n    {\n      color = \"primary\",\n      size = \"default\",\n      className = null,\n      label,\n      percentage,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        className={`gauge-container${appendClass(className)}`}\n        {...props}\n        ref={ref}\n      >\n        <div\n          className={`gauge${appendClass(\n            size && size !== \"default\",\n            `gauge--${size}`\n          )}${appendClass(color, `gauge--${color}`)}`}\n          data-percentage={`${percentage}`}\n        >\n          <div className=\"gauge__circle\">\n            <div className=\"mask full\">\n              <div className=\"fill\"></div>\n            </div>\n            <div className=\"mask half\">\n              <div className=\"fill\"></div>\n              <div className=\"fill fix\"></div>\n            </div>\n          </div>\n          <div className=\"gauge__inset\">\n            <div className=\"gauge__percentage\">{percentage}</div>\n          </div>\n        </div>\n        {label ? <div className=\"gauge__label\">{label}</div> : null}\n      </div>\n    );\n  }\n);\n"],"names":["Gauge","forwardRef","color","size","className","label","percentage","props","ref","div","appendClass","data-percentage"],"mappings":";;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;AAuBO,MAAMA,sBAAQC,UAInB,CAAA,CACE,EACEC,KAAQ,EAAA,SAAA,GACRC,IAAAA,EAAO,SAAS,GAChBC,WAAY,IAAI,GAChBC,KAAK,GACLC,aACA,GAAGC,KACJ,EAAA,EACDC,GACG,GAAA;AACH,IAAA,qBACE,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA,QAAAA,CAAAA;AACCL,QAAAA,SAAAA,EAAW,CAAC,eAAe,EAAEM,WAAAA,CAAYN,WAAW,CAAC;AACjDG,KAAAA,EAAAA,KAAAA,EAAAA;QACJC,GAAKA,EAAAA,GAAAA;sBAEL,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QACCL,SAAW,EAAA,CAAC,KAAK,EAAEM,WAAAA,CACjBP,QAAQA,IAAS,KAAA,SAAA,EACjB,CAAC,OAAO,EAAEA,IAAAA,CAAK,CAAC,CAChB,CAAA,EAAEO,YAAYR,KAAO,EAAA,CAAC,OAAO,EAAEA,KAAAA,CAAM,CAAC,CAAA,CAAE,CAAC;QAC3CS,iBAAiB,EAAA,CAAC,EAAEL,UAAAA,CAAW,CAAC;qBAEhC,KAACG,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,eAAA;qBACb,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,WAAA;qBACb,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,MAAA;uBAEjB,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,WAAA;qBACb,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,MAAA;sBACf,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,UAAA;wBAGnB,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,cAAA;qBACb,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,mBAAA;AAAqBE,KAAAA,EAAAA,UAAAA,CAAAA,CAAAA,CAAAA,EAGvCD,sBAAQ,KAACI,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,cAAA;AAAgBC,KAAAA,EAAAA,KAAAA,CAAAA,GAAe,IAAI,CAAA,CAAA;AAGjE,CACA;;;;"}