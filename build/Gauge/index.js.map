{"version":3,"file":"index.js","sources":["../../src/Gauge/Gauge.tsx"],"sourcesContent":["import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\nimport { appendClass } from \"../utils\";\n\nexport type GaugeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype GaugeProps = {\n  color?: GaugeColor;\n  size?: \"small\" | \"default\" | \"large\";\n  className?: string;\n  label?: ReactNode;\n  percentage: number;\n};\n\nexport const Gauge = forwardRef<\n  HTMLDivElement,\n  GaugeProps & Omit<HTMLProps<HTMLDivElement>, \"size\">\n>(\n  (\n    {\n      color = \"primary\",\n      size = \"default\",\n      className = null,\n      label,\n      percentage,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        className={`gauge-container${appendClass(className)}`}\n        {...props}\n        ref={ref}\n      >\n        <div\n          className={`gauge${appendClass(\n            size && size !== \"default\",\n            `gauge--${size}`\n          )}${appendClass(color, `gauge--${color}`)}`}\n          data-percentage={`${percentage}`}\n        >\n          <div className=\"gauge__circle\">\n            <div className=\"mask full\">\n              <div className=\"fill\"></div>\n            </div>\n            <div className=\"mask half\">\n              <div className=\"fill\"></div>\n              <div className=\"fill fix\"></div>\n            </div>\n          </div>\n          <div className=\"gauge__inset\">\n            <div className=\"gauge__percentage\">{percentage}</div>\n          </div>\n        </div>\n        {label ? <div className=\"gauge__label\">{label}</div> : null}\n      </div>\n    );\n  }\n);\n"],"names":["Gauge","forwardRef","color","size","className","label","percentage","props","ref","div","appendClass","data-percentage"],"mappings":";;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;AAuBaA,MAAAA,KAAK,iBAAGC,UAAU,CAI7B,CACE,EACEC,KAAK,EAAG,SAAS,GACjBC,IAAI,EAAG,SAAS,GAChBC,SAAS,EAAG,IAAI,GAChBC,KAAK,GACLC,UAAU,GACV,GAAGC,KAAK,EACT,EACDC,GAAG,GACA;AACH,IAAA,qBACE,oBAACC,KAAG,EAAA,QAAA,CAAA;QACFL,SAAS,EAAE,CAAC,eAAe,EAAEM,WAAW,CAACN,SAAS,CAAC,CAAC,CAAC;OACjDG,KAAK,EAAA;AACTC,QAAAA,GAAG,EAAEA,GAAG;AAER,KAAA,CAAA,gBAAA,KAAA,CAAA,aAAA,CAACC,KAAG,EAAA;AACFL,QAAAA,SAAS,EAAE,CAAC,KAAK,EAAEM,WAAW,CAC5BP,IAAI,IAAIA,IAAI,KAAK,SAAS,EAC1B,CAAC,OAAO,EAAEA,IAAI,CAAC,CAAC,CACjB,CAAC,EAAEO,WAAW,CAACR,KAAK,EAAE,CAAC,OAAO,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3CS,QAAAA,iBAAe,EAAE,CAAC,EAAEL,UAAU,CAAC,CAAC;AAEhC,KAAA,gBAAA,KAAA,CAAA,aAAA,CAACG,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,eAAe;AAC5B,KAAA,gBAAA,KAAA,CAAA,aAAA,CAACK,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,WAAW;AACxB,KAAA,gBAAA,KAAA,CAAA,aAAA,CAACK,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,MAAM;MAAO,CACxB,gBACN,oBAACK,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,WAAW;AACxB,KAAA,gBAAA,KAAA,CAAA,aAAA,CAACK,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,MAAM;AAAO,KAAA,CAAA,gBAC5B,oBAACK,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,UAAU;MAAO,CAC5B,CACF,gBACN,KAAA,CAAA,aAAA,CAACK,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,cAAc;AAC3B,KAAA,gBAAA,KAAA,CAAA,aAAA,CAACK,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,mBAAmB;AAAEE,KAAAA,EAAAA,UAAU,CAAO,CACjD,CACF,EACLD,KAAK,iBAAG,oBAACI,KAAG,EAAA;AAACL,QAAAA,SAAS,EAAC,cAAc;AAAEC,KAAAA,EAAAA,KAAK,CAAO,GAAG,IAAI,CACvD,CACN;AACH,CAAA;;;;"}