{"version":3,"file":"index.js","sources":["../../src/ContextMenu/ContextMenu.tsx"],"sourcesContent":["import React, {\n  Children,\n  FC,\n  MutableRefObject,\n  ReactNode,\n  cloneElement,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingPortal,\n  FloatingTree,\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingParentNodeId,\n  useFloatingTree,\n  useInteractions,\n  useListNavigation,\n  useMergeRefs,\n  useRole,\n  useTypeahead,\n} from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport { Transition } from \"react-transition-group\";\n\nimport { useFloatingContext } from \"src/FloatingProvider\";\n\nimport styles from \"../Dropdown/Dropdown.module.scss\";\n\ninterface ContextMenuProps {\n  contextMenuRef: MutableRefObject<HTMLElement | null>;\n  onContextMenu?: (e: globalThis.MouseEvent) => boolean | Promise<boolean>;\n  children: ReactNode;\n}\n\nconst ContextMenuInner: FC<ContextMenuProps> = ({\n  contextMenuRef,\n  onContextMenu,\n  children,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  const listItemsRef = useRef<Array<HTMLButtonElement | null>>([]);\n  const listContentRef = useRef(\n    Children.map(children, (child) =>\n      isValidElement(child) ? child.props.label : null\n    ) as Array<string | null>\n  );\n\n  const tree = useFloatingTree();\n  const nodeId = useFloatingNodeId();\n  const parentId = useFloatingParentNodeId();\n  // const nested ??= parentId != null;\n\n  const { x, y, refs, strategy, context } = useFloating({\n    open,\n    onOpenChange: setOpen,\n    middleware: [\n      offset({ mainAxis: 5, alignmentAxis: 4 }),\n      flip({ padding: { bottom: 50 } }),\n      shift(),\n    ],\n    placement: \"right-start\",\n    strategy: \"fixed\",\n    whileElementsMounted: autoUpdate,\n    nodeId,\n  });\n\n  const { getFloatingProps, getItemProps } = useInteractions([\n    useRole(context, { role: \"menu\" }),\n    useDismiss(context),\n    useClick(context, {\n      event: \"mousedown\",\n    }),\n    useListNavigation(context, {\n      listRef: listItemsRef,\n      activeIndex,\n      nested: false,\n      onNavigate: setActiveIndex,\n    }),\n    useTypeahead(context, {\n      listRef: listContentRef,\n      onMatch: open ? setActiveIndex : undefined,\n      activeIndex,\n    }),\n  ]);\n\n  const onRightClick = useCallback(\n    (e: globalThis.MouseEvent) => {\n      e.preventDefault();\n      const pos = {\n        x: e.clientX,\n        y: e.clientY,\n        width: 0,\n        height: 0,\n        top: e.clientY,\n        right: e.clientX,\n        bottom: e.clientY,\n        left: e.clientX,\n      };\n      const makePop = () => {\n        refs.setPositionReference({\n          getBoundingClientRect() {\n            return pos;\n          },\n        });\n\n        setOpen(true);\n      };\n\n      if (onContextMenu) {\n        const awaitResult = async () => {\n          if (await onContextMenu(e)) makePop();\n        };\n\n        awaitResult();\n      } else makePop();\n    },\n    [refs, onContextMenu]\n  );\n\n  useEffect(() => {\n    function onTreeClick() {\n      setOpen(false);\n    }\n\n    tree?.events.on(\"click\", onTreeClick);\n    return () => {\n      tree?.events.off(\"click\", onTreeClick);\n    };\n  }, [parentId, tree, refs]);\n\n  useEffect(() => {\n    if (!contextMenuRef.current) return;\n\n    const el = contextMenuRef.current;\n\n    el.addEventListener(\"contextmenu\", onRightClick);\n    return () => {\n      el.removeEventListener(\"contextmenu\", onRightClick);\n    };\n  }, [contextMenuRef, onRightClick]);\n\n  const floatingNodeRef = useRef<HTMLElement>(null);\n  const mergedFloatingRef = useMergeRefs([floatingNodeRef, refs.setFloating]);\n\n  return (\n    <Transition\n      in={open}\n      mountOnEnter\n      unmountOnExit\n      timeout={{ enter: 100, exit: 250 }}\n      nodeRef={floatingNodeRef}\n    >\n      {(state) => (\n        <FloatingFocusManager context={context} initialFocus={refs.floating}>\n          <FloatingNode id={nodeId}>\n            <div\n              {...getFloatingProps({\n                className: cx(\"dropdown\", styles.active, styles.dropdown, {\n                  [styles.disappear]: state === \"exiting\" || state === \"exited\",\n                }),\n                ref: mergedFloatingRef,\n                style: {\n                  position: strategy,\n                  top: y ?? 0,\n                  left: x ?? 0,\n                },\n              })}\n            >\n              <div className=\"dropdown__menu\" style={{ position: \"unset\" }}>\n                {Children.map(\n                  children,\n                  (child, index) =>\n                    isValidElement(child) &&\n                    cloneElement(\n                      child,\n                      getItemProps({\n                        tabIndex: -1,\n                        role: \"menuitem\",\n                        className: \"menu_item\",\n                        ref(node: HTMLButtonElement) {\n                          listItemsRef.current[index] = node;\n                        },\n                        onClick(e) {\n                          if (child.props.onClick) child.props.onClick(e);\n                          else tree?.events.emit(\"click\");\n                        },\n                        // onPointerEnter() {\n                        //   if (allowHover) {\n                        //     setActiveIndex(index);\n                        //   }\n                        // },\n                      })\n                    )\n                )}\n              </div>\n            </div>\n          </FloatingNode>\n        </FloatingFocusManager>\n      )}\n    </Transition>\n  );\n};\n\nexport const ContextMenu: FC<ContextMenuProps> = ({\n  children,\n  contextMenuRef,\n  onContextMenu,\n}) => {\n  const rootCtx = useFloatingContext();\n  return (\n    <FloatingPortal root={rootCtx?.rootRef?.current || undefined}>\n      <FloatingTree>\n        <ContextMenuInner\n          contextMenuRef={contextMenuRef}\n          onContextMenu={onContextMenu}\n        >\n          {children}\n        </ContextMenuInner>\n      </FloatingTree>\n    </FloatingPortal>\n  );\n};\n"],"names":["_extends","ContextMenuInner","contextMenuRef","onContextMenu","children","useState","open","setOpen","activeIndex","setActiveIndex","listItemsRef","useRef","listContentRef","Children","map","child","isValidElement","props","label","tree","useFloatingTree","nodeId","useFloatingNodeId","parentId","useFloatingParentNodeId","useFloating","onOpenChange","middleware","offset","mainAxis","alignmentAxis","flip","padding","bottom","shift","placement","strategy","whileElementsMounted","autoUpdate","x","y","refs","context","useInteractions","useRole","role","useDismiss","useClick","event","useListNavigation","listRef","nested","onNavigate","useTypeahead","onMatch","undefined","getFloatingProps","getItemProps","onRightClick","useCallback","e","preventDefault","pos","clientX","clientY","width","height","top","right","left","makePop","setPositionReference","getBoundingClientRect","awaitResult","useEffect","onTreeClick","events","on","off","current","el","addEventListener","removeEventListener","floatingNodeRef","mergedFloatingRef","useMergeRefs","setFloating","React","Transition","in","mountOnEnter","unmountOnExit","timeout","enter","exit","nodeRef","state","FloatingFocusManager","initialFocus","floating","FloatingNode","id","createElement","div","className","cx","styles","active","dropdown","disappear","ref","style","position","index","cloneElement","tabIndex","node","onClick","emit","ContextMenu","rootCtx","useFloatingContext","FloatingPortal","root","rootRef","FloatingTree"],"mappings":"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"}