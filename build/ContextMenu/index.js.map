{"version":3,"file":"index.js","sources":["../../src/ContextMenu/ContextMenu.tsx"],"sourcesContent":["import React, {\n  Children,\n  cloneElement,\n  isValidElement,\n  useEffect,\n  useRef,\n  useState,\n  type ComponentProps,\n  type FC,\n  type MutableRefObject,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingPortal,\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingParentNodeId,\n  useFloatingTree,\n  useInteractions,\n  useListNavigation,\n  useMergeRefs,\n  useRole,\n  useTypeahead,\n} from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport { Transition } from \"react-transition-group\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { FloatingTreeWrapper, useFloatingContext } from \"src/FloatingProvider\";\n\nimport styles from \"../Dropdown/Dropdown.module.scss\";\n\ninterface ContextMenuProps {\n  contextMenuRef: MutableRefObject<HTMLElement | null>;\n  onContextMenu?: (e: globalThis.MouseEvent) => boolean | Promise<boolean>;\n  children: ReactNode;\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n}\n\nconst ContextMenuInner: FC<ContextMenuProps> = ({\n  contextMenuRef,\n  onContextMenu,\n  children,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  const listItemsRef = useRef<Array<HTMLButtonElement | null>>([]);\n  const listContentRef = useRef(\n    Children.map(children, (child) =>\n      isValidElement(child) ? child.props.label : null\n    ) as Array<string | null>\n  );\n\n  const tree = useFloatingTree();\n  const nodeId = useFloatingNodeId();\n  const parentId = useFloatingParentNodeId();\n  // const nested ??= parentId != null;\n\n  const { x, y, refs, strategy, context } = useFloating({\n    open,\n    onOpenChange: setOpen,\n    middleware: [\n      offset({ mainAxis: 5, alignmentAxis: 4 }),\n      flip({ padding: { bottom: 50 } }),\n      shift(),\n    ],\n    placement: \"right-start\",\n    strategy: \"fixed\",\n    whileElementsMounted: autoUpdate,\n    nodeId,\n  });\n\n  const { getFloatingProps, getItemProps } = useInteractions([\n    useRole(context, { role: \"menu\" }),\n    useDismiss(context, { bubbles: false }),\n    useListNavigation(context, {\n      listRef: listItemsRef,\n      activeIndex,\n      nested: false,\n      onNavigate: setActiveIndex,\n    }),\n    useTypeahead(context, {\n      listRef: listContentRef,\n      onMatch: open ? setActiveIndex : undefined,\n      activeIndex,\n    }),\n  ]);\n\n  const onRightClick = useEvent((e: globalThis.MouseEvent) => {\n    e.preventDefault();\n    const pos = {\n      x: e.clientX,\n      y: e.clientY,\n      width: 0,\n      height: 0,\n      top: e.clientY,\n      right: e.clientX,\n      bottom: e.clientY,\n      left: e.clientX,\n    };\n    const makePop = () => {\n      refs.setPositionReference({\n        getBoundingClientRect() {\n          return pos;\n        },\n      });\n\n      setOpen(true);\n    };\n\n    if (onContextMenu) {\n      const awaitResult = async () => {\n        if (await onContextMenu(e)) makePop();\n      };\n\n      awaitResult();\n    } else makePop();\n  });\n\n  useEffect(() => {\n    function onTreeClick() {\n      setOpen(false);\n    }\n\n    tree?.events.on(\"click\", onTreeClick);\n    return () => {\n      tree?.events.off(\"click\", onTreeClick);\n    };\n  }, [parentId, tree, refs]);\n\n  useEffect(() => {\n    if (!contextMenuRef.current) return;\n\n    const el = contextMenuRef.current;\n\n    el.addEventListener(\"contextmenu\", onRightClick);\n    return () => {\n      el.removeEventListener(\"contextmenu\", onRightClick);\n    };\n  }, [contextMenuRef, onRightClick]);\n\n  const floatingNodeRef = useRef<HTMLElement>(null);\n  const mergedFloatingRef = useMergeRefs([floatingNodeRef, refs.setFloating]);\n\n  return (\n    <Transition\n      in={open}\n      mountOnEnter\n      unmountOnExit\n      appear\n      timeout={{ enter: 100, exit: 250 }}\n      nodeRef={floatingNodeRef}\n    >\n      {(state) => (\n        <FloatingFocusManager context={context} initialFocus={refs.floating}>\n          <FloatingNode id={nodeId}>\n            <div\n              {...getFloatingProps({\n                className: cx(\"dropdown\", styles.dropdown, {\n                  [styles.disappear]: state === \"exiting\" || state === \"exited\",\n                  [styles.appear]: state === \"entering\",\n                  [styles.active]: state === \"entered\",\n                }),\n                ref: mergedFloatingRef,\n                style: {\n                  position: strategy,\n                  top: y ?? 0,\n                  left: x ?? 0,\n                },\n              })}\n            >\n              <div className=\"dropdown__menu\" style={{ position: \"unset\" }}>\n                {Children.map(\n                  children,\n                  (child, index) =>\n                    isValidElement(child) &&\n                    cloneElement(\n                      child,\n                      getItemProps({\n                        tabIndex: -1,\n                        role: \"menuitem\",\n                        className: \"menu_item\",\n                        ref(node: HTMLButtonElement) {\n                          listItemsRef.current[index] = node;\n                        },\n                        onClick(e) {\n                          if (child.props.onClick) child.props.onClick(e);\n                          else tree?.events.emit(\"click\");\n                        },\n                        // onPointerEnter() {\n                        //   if (allowHover) {\n                        //     setActiveIndex(index);\n                        //   }\n                        // },\n                      })\n                    )\n                )}\n              </div>\n            </div>\n          </FloatingNode>\n        </FloatingFocusManager>\n      )}\n    </Transition>\n  );\n};\n\nexport const ContextMenu: FC<ContextMenuProps> = ({\n  children,\n  contextMenuRef,\n  onContextMenu,\n  portalId,\n}) => {\n  const { root, id } = useFloatingContext({\n    portalId,\n    fallbackPortalId: \"--cui-context-menu-portal\",\n  });\n\n  const tree = useFloatingTree();\n\n  return (\n    <FloatingTreeWrapper withPortal={!tree} portalRoot={root} portalId={id}>\n      <ContextMenuInner\n        contextMenuRef={contextMenuRef}\n        onContextMenu={onContextMenu}\n      >\n        {children}\n      </ContextMenuInner>\n    </FloatingTreeWrapper>\n  );\n};\n"],"names":["ContextMenuInner","contextMenuRef","onContextMenu","children","open","setOpen","useState","activeIndex","setActiveIndex","listItemsRef","useRef","listContentRef","Children","child","isValidElement","tree","useFloatingTree","nodeId","useFloatingNodeId","parentId","useFloatingParentNodeId","x","y","refs","strategy","context","useFloating","offset","flip","shift","autoUpdate","getFloatingProps","getItemProps","useInteractions","useRole","useDismiss","useListNavigation","useTypeahead","onRightClick","useEvent","pos","makePop","useEffect","onTreeClick","el","floatingNodeRef","mergedFloatingRef","useMergeRefs","jsx","Transition","state","FloatingFocusManager","FloatingNode","cx","styles","index","cloneElement","node","e","ContextMenu","portalId","root","id","useFloatingContext","FloatingTreeWrapper"],"mappings":"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"}