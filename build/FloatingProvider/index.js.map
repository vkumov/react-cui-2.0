{"version":3,"file":"index.js","sources":["../../src/FloatingProvider/FloatingProvider.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useMemo,\n  type FC,\n  type PropsWithChildren,\n  type RefObject,\n} from \"react\";\n\ntype FloatingContextProps = {\n  rootRef: RefObject<HTMLElement>;\n};\n\nconst FloatingContext = createContext<FloatingContextProps>(null);\n\ntype Options = {\n  root?: HTMLElement;\n  portalId?: any;\n  fallbackPortalId?: any;\n};\n\nexport const useFloatingContext = ({\n  root,\n  portalId,\n  fallbackPortalId,\n}: Options = {}) => {\n  const ctx = useContext(FloatingContext);\n\n  root ??= ctx?.rootRef?.current || undefined;\n  portalId ??= typeof root === \"undefined\" ? fallbackPortalId : undefined;\n\n  return useMemo(() => ({ root, id: portalId }), [root, portalId]);\n};\n\nexport const FloatingProvider: FC<PropsWithChildren<FloatingContextProps>> = ({\n  rootRef,\n  children,\n}) => {\n  return (\n    <FloatingContext.Provider value={{ rootRef }}>\n      {children}\n    </FloatingContext.Provider>\n  );\n};\n"],"names":["FloatingContext","createContext","useFloatingContext","root","portalId","fallbackPortalId","ctx","useContext","rootRef","current","undefined","useMemo","id","FloatingProvider","children","React","createElement","Provider","value"],"mappings":"2DAaA,IAAMA,gBAAkBC,cAAoC,IAAI,EAQnDC,IAAAA,mBAAqB,UAId,gEAAP,CAAA,EAHXC,SAAAA,KACAC,aAAAA,SACAC,qBAAAA,iBAISC,IAAAA,KAFT,IAAMA,IAAMC,WAAWP,gBAEvBG,CAAAA,OAAAA,IAAAA,EAAAA,OAAAA,KAAAA,EAAAA,KAAAA,KAASG,AAAAA,CAAAA,YAAAA,MAAAA,KAAAA,EAAAA,KAAAA,EAAAA,AAAAA,CAAAA,KAAAA,IAAKE,OAAO,AAAA,IAAA,IAAA,EAAZF,cAAAA,KAAAA,EAAAA,KAAcG,OAAH,AAAGA,GAAWC,SAAS,AAC3CN,CAAAA,WAAAA,IAAAA,EAAAA,kBAAAA,SAAAA,SAAa,OAAOD,OAAS,YAAcE,iBAAmBK,SAAS,CAEvE,OAAOC,QAAQ,iBAAO,CAAER,KAAAA,KAAMS,GAAIR,QAAS,GAAI,CAACD,KAAMC,SAAS,CACjE,EAEO,IAAMS,iBAAgE,eAGvE,KAFJL,cAAAA,QACAM,eAAAA,SAEA,OACEC,MAAAC,aAAA,CAAChB,gBAAgBiB,QAAQ,CAAA,CAACC,MAAO,CAAEV,QAAAA,OAAQ,CACxCM,EAAAA,SAGP"}