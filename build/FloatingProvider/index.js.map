{"version":3,"file":"index.js","sources":["../../src/FloatingProvider/FloatingProvider.tsx","../../src/FloatingProvider/TreeWrapper.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useMemo,\n  type FC,\n  type PropsWithChildren,\n  type RefObject,\n} from \"react\";\n\ntype FloatingContextProps = {\n  rootRef: RefObject<HTMLElement>;\n};\n\nconst FloatingContext = createContext<FloatingContextProps>(null);\n\ntype Options = {\n  root?: HTMLElement;\n  portalId?: any;\n  fallbackPortalId?: any;\n};\n\nexport const useFloatingContext = ({\n  root,\n  portalId,\n  fallbackPortalId,\n}: Options = {}) => {\n  const ctx = useContext(FloatingContext);\n\n  root ??= ctx?.rootRef?.current || undefined;\n  portalId ??= fallbackPortalId ?? null;\n\n  return useMemo(() => ({ root, id: portalId }), [root, portalId]);\n};\n\nexport const FloatingProvider: FC<PropsWithChildren<FloatingContextProps>> = ({\n  rootRef,\n  children,\n}) => {\n  return (\n    <FloatingContext.Provider value={{ rootRef }}>\n      {children}\n    </FloatingContext.Provider>\n  );\n};\n","import React, { type ComponentProps, type FC, type ReactNode } from \"react\";\nimport {\n  FloatingPortal,\n  FloatingTree,\n  useFloatingTree,\n} from \"@floating-ui/react\";\n\nexport const FloatingTreeWrapper: FC<{\n  children: ReactNode;\n  withPortal?: boolean;\n  portalRoot?: ComponentProps<typeof FloatingPortal>[\"root\"];\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  force?: boolean;\n}> = ({ children, withPortal, portalId, portalRoot, force }) => {\n  const tree = useFloatingTree();\n\n  if (!Boolean(tree) || force) {\n    if (withPortal)\n      return (\n        <FloatingPortal id={portalId} root={portalRoot}>\n          <FloatingTree>{children}</FloatingTree>\n        </FloatingPortal>\n      );\n    return <FloatingTree>{children}</FloatingTree>;\n  }\n\n  return <>{children}</>;\n};\n"],"names":["FloatingContext","createContext","useFloatingContext","root","portalId","fallbackPortalId","_a","ctx","useContext","useMemo","FloatingProvider","rootRef","children","React","FloatingTreeWrapper","withPortal","portalRoot","force","useFloatingTree","FloatingPortal","FloatingTree"],"mappings":"iKAaA,MAAMA,EAAkBC,EAAoC,IAAI,EAQnDC,EAAqB,CAAC,CACjC,KAAAC,EACA,SAAAC,EACA,iBAAAC,CACF,EAAa,KAAO,CAzBpB,IAAAC,EA0BE,MAAMC,EAAMC,EAAWR,CAAe,EAEtC,OAAAG,GAAA,OAAAA,IAASG,EAAAC,GAAK,UAAL,KAAAD,OAAAA,EAAc,UAAW,QAClCF,GAAA,OAAAA,EAAaC,GAAoB,MAE1BI,EAAQ,KAAO,CAAE,KAAAN,EAAM,GAAIC,CAAS,GAAI,CAACD,EAAMC,CAAQ,CAAC,CACjE,EAEaM,EAAgE,CAAC,CAC5E,QAAAC,EACA,SAAAC,CACF,IAEIC,EAAA,cAACb,EAAgB,SAAhB,CAAyB,MAAO,CAAE,QAAAW,CAAQ,GACxCC,CACH,EClCSE,EAMR,CAAC,CAAE,SAAAF,EAAU,WAAAG,EAAY,SAAAX,EAAU,WAAAY,EAAY,MAAAC,CAAM,IAGpD,CAFSC,KAESD,EAChBF,EAEAF,EAAA,cAACM,EAAA,CAAe,GAAIf,EAAU,KAAMY,CAAAA,EAClCH,EAAA,cAACO,EAAA,KAAcR,CAAS,CAC1B,EAEGC,EAAA,cAACO,EAAA,KAAcR,CAAS,EAG1BC,EAAA,cAAAA,EAAA,SAAA,KAAGD,CAAS"}