{"version":3,"file":"index.esm.js","sources":["../src/Alert/Alert.tsx","../src/FloatingProvider/FloatingProvider.tsx","../src/FloatingProvider/TreeWrapper.tsx","../src/utils/index.ts","../src/Modal/Header.tsx","../src/Modal/Footer.tsx","../src/Modal/Body.tsx","../src/Conditional/Conditional.tsx","../src/Button/Button.tsx","../src/Button/ButtonGroup.tsx","../src/utils/eventManager.ts","../src/Modal/ConfirmationModal.tsx","../src/InputHelp/InputHelpBaloon.tsx","../src/InputHelp/InputHelpBlock.tsx","../src/Input/Input.tsx","../src/Modal/PromptModal.tsx","../src/Modal/DynamicModal.tsx","../src/Modal/ModalProvider.tsx","../src/Modal/Modal.tsx","../src/Modal/calls.tsx","../src/hooks/useCustomDismiss.ts","../src/Dropdown/Dropdown.tsx","../src/Dropzone/Dropzone.tsx","../src/Loader/Dots.tsx","../src/Loader/Spinner.tsx","../src/Progressbar/Progressbar.tsx","../src/Label/Label.tsx","../src/Panel/Panel.tsx","../src/utils/clipboard.ts","../src/Toast/Toast.tsx","../src/Toast/ToastContainer.tsx","../src/Layout/Footer.tsx","../src/Layout/Header.tsx","../src/Table/GenericTable.tsx","../src/Pagination/PaginationContext.tsx","../src/Pagination/Pagination.tsx","../src/Table/DefaultTablePagination.tsx","../src/Table/Table.tsx","../src/Checkbox/Checkbox.tsx","../src/Checkbox/IndeterminateCheckbox.tsx","../src/Switch/Switch.tsx","../src/Icon/Icon.tsx","../src/hooks/useIsomorphicEffect.ts","../src/hooks/usePortal.ts","../src/Portal/Portal.tsx","../src/Accordion/Accordion.tsx","../src/Accordion/AccordionElement.tsx","../src/Badge/Badge.tsx","../src/hooks/usePrevious.ts","../src/Tabs/Tabs.tsx","../src/Section/Section.tsx","../src/Typo/Typo.tsx","../src/Timeline/Timeline.tsx","../src/Steps/Step.tsx","../src/Steps/Steps.tsx","../src/VerticalCenter/VerticalCenter.tsx","../src/Textarea/Textarea.tsx","../src/Radio/Radio.tsx","../src/InputChips/InputChips.tsx","../src/Select/Select.tsx","../src/ReactSelect/components.tsx","../src/ReactSelect/ReactSelect.tsx","../src/ReactSelect/ReactSelectCreatable.tsx","../src/ReactSelect/helpers.ts","../src/VSeparator/VSeparator.tsx","../src/Slider/Slider.tsx","../src/utils/base16Theme.ts","../src/Kbd/Kbd.tsx","../src/Blockquote/Blockquote.tsx","../src/Gauge/Gauge.tsx","../src/Tooltip/Tooltip.tsx","../src/SegmentedControl/SegmentedControl.tsx","../src/hooks/useLockedBody.ts","../src/Popover/GenericPopover.tsx","../src/Popover/context.tsx","../src/Popover/Popover.tsx","../src/Popover/PopoverTitle.tsx","../src/Popover/usePopover.tsx","../src/ContextMenu/ContextMenu.tsx"],"sourcesContent":["import React, { type FC, type ReactNode } from \"react\";\n\nconst classes = (type: string, icon: string): string[] => {\n  switch (type) {\n    case \"warning\":\n      return [\"alert--warning\", icon || \"icon-warning-outline\"];\n    case \"warning-alt\":\n      return [\"alert--warning-alt\", icon || \"icon-warning-outline\"];\n    case \"danger\":\n    case \"error\":\n      return [\"alert--warning-alt\", icon || \"icon-error-outline\"];\n    case \"success\":\n      return [\"alert--success\", icon || \"icon-check-outline\"];\n    case \"dark\":\n      return [\"alert--dark\", icon || \"icon-help-outline\"];\n    case \"light\":\n      return [\"alert--light\", icon || \"icon-help-outline\"];\n    default:\n      return [\"alert--info\", icon || \"icon-info-outline\"];\n  }\n};\n\nexport type AlertType =\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"error\"\n  | \"success\"\n  | \"dark\"\n  | \"light\"\n  | \"info\";\n\nexport type AlertProps = {\n  type?: AlertType;\n  children: ReactNode;\n  title?: string;\n  dismissable?: boolean;\n  className?: string;\n  onDismiss?: (e) => void;\n  withIcon?: boolean;\n  icon?: string;\n};\n\ntype AlertTypes =\n  | \"Warning\"\n  | \"Danger\"\n  | \"Error\"\n  | \"Success\"\n  | \"Info\"\n  | \"Dark\"\n  | \"Light\"\n  | \"WarningAlt\";\ntype IAlert = {\n  [x in AlertTypes]: FC<Omit<AlertProps, \"type\">>;\n};\n\nexport const Alert: IAlert & FC<AlertProps> = ({\n  type = \"info\",\n  children,\n  title = \"\",\n  dismissable = false,\n  className = null,\n  onDismiss = null,\n  withIcon = true,\n  icon = null,\n}): JSX.Element => {\n  const [dismissed, setDismissed] = React.useState(false);\n\n  const handleDismiss = (e) => {\n    setDismissed(true);\n    if (onDismiss) onDismiss(e);\n  };\n\n  if (dismissed) return null;\n\n  const [alertClass, iconClass] = classes(type, icon);\n\n  return (\n    <div className={`alert ${alertClass} ${className || \"\"}`}>\n      {withIcon ? <div className={`alert__icon ${iconClass}`} /> : null}\n      <div className=\"alert__message\">\n        {title && <h4>{title}</h4>}\n        {children}\n      </div>\n      {dismissable && (\n        <a className=\"alert__close icon-close\" onClick={handleDismiss} />\n      )}\n    </div>\n  );\n};\n\nAlert.Warning = (props) => <Alert type=\"warning\" {...props} />;\nAlert.Danger = (props) => <Alert type=\"danger\" {...props} />;\nAlert.Error = (props) => <Alert type=\"error\" {...props} />;\nAlert.Success = (props) => <Alert type=\"success\" {...props} />;\nAlert.Info = (props) => <Alert type=\"info\" {...props} />;\nAlert.Dark = (props) => <Alert type=\"dark\" {...props} />;\nAlert.Light = (props) => <Alert type=\"light\" {...props} />;\nAlert.WarningAlt = (props) => <Alert type=\"warning-alt\" {...props} />;\n","import React, {\n  createContext,\n  useContext,\n  useMemo,\n  type FC,\n  type PropsWithChildren,\n  type RefObject,\n} from \"react\";\n\ntype FloatingContextProps = {\n  rootRef: RefObject<HTMLElement>;\n};\n\nconst FloatingContext = createContext<FloatingContextProps>(null);\n\ntype Options = {\n  root?: HTMLElement;\n  portalId?: any;\n  fallbackPortalId?: any;\n};\n\nexport const useFloatingContext = ({\n  root,\n  portalId,\n  fallbackPortalId,\n}: Options = {}) => {\n  const ctx = useContext(FloatingContext);\n\n  root ??= ctx?.rootRef?.current || undefined;\n  portalId ??= fallbackPortalId ?? null;\n\n  return useMemo(() => ({ root, id: portalId }), [root, portalId]);\n};\n\nexport const FloatingProvider: FC<PropsWithChildren<FloatingContextProps>> = ({\n  rootRef,\n  children,\n}) => {\n  return (\n    <FloatingContext.Provider value={{ rootRef }}>\n      {children}\n    </FloatingContext.Provider>\n  );\n};\n","import React, { type ComponentProps, type FC, type ReactNode } from \"react\";\nimport {\n  FloatingPortal,\n  FloatingTree,\n  useFloatingTree,\n} from \"@floating-ui/react\";\n\nexport const FloatingTreeWrapper: FC<{\n  children: ReactNode;\n  withPortal?: boolean;\n  portalRoot?: ComponentProps<typeof FloatingPortal>[\"root\"];\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  force?: boolean;\n}> = ({ children, withPortal, portalId, portalRoot, force }) => {\n  const tree = useFloatingTree();\n\n  if (!Boolean(tree) || force) {\n    if (withPortal)\n      return (\n        <FloatingPortal id={portalId} root={portalRoot}>\n          <FloatingTree>{children}</FloatingTree>\n        </FloatingPortal>\n      );\n    return <FloatingTree>{children}</FloatingTree>;\n  }\n\n  return <>{children}</>;\n};\n","type ClassFunction = () => string;\n\nexport const appendClass = (\n  c: any,\n  what: string | ClassFunction | undefined = undefined\n): string => {\n  if (c) {\n    if (typeof what === \"function\") return ` ${what()}`;\n    return ` ${what || c}`;\n  }\n  return \"\";\n};\n","import React, { type FC, type HTMLProps, type PropsWithChildren } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\n/**\n * Modal Header\n */\n\ntype ModalHeaderProps = PropsWithChildren<{\n  className?: string;\n}> &\n  HTMLProps<HTMLDivElement>;\n\nexport const ModalHeader: FC<ModalHeaderProps> = ({\n  className = null,\n  children,\n  ...props\n}) => (\n  <div className={`modal__header${ac(className)}`} {...props}>\n    {children}\n  </div>\n);\n","import React, {\n  forwardRef,\n  type FC,\n  type HTMLProps,\n  type PropsWithChildren,\n} from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\n/**\n * Modal Footer\n */\n\ntype ModalFooterProps = PropsWithChildren<{\n  className?: string;\n}> &\n  HTMLProps<HTMLDivElement>;\n\nexport const ModalFooter: FC<ModalFooterProps> = forwardRef(\n  ({ className = null, children, ...props }, ref) => (\n    <div className={`modal__footer${ac(className)}`} {...props} ref={ref}>\n      {children}\n    </div>\n  )\n);\n","import React, { FC, HTMLProps, PropsWithChildren, forwardRef } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\n/**\n * Modal Body\n */\n\ntype ModalBodyProps = PropsWithChildren<{\n  className?: string;\n}> &\n  HTMLProps<HTMLDivElement>;\n\nexport const ModalBody: FC<ModalBodyProps> = forwardRef(\n  ({ className = null, children, ...props }, ref) => (\n    <div className={`modal__body${ac(className)}`} {...props} ref={ref}>\n      {children}\n    </div>\n  )\n);\n","import React, { type FC } from \"react\";\n\ntype ConditionalWrapperProps = {\n  condition: boolean;\n  wrapper: JSX.Element;\n  children: React.ReactNode;\n};\n\nexport const ConditionalWrapper: FC<ConditionalWrapperProps> = ({\n  condition,\n  wrapper,\n  children,\n}) =>\n  condition ? (\n    React.cloneElement(wrapper, null, children)\n  ) : React.isValidElement(children) ? (\n    children\n  ) : (\n    <>{children}</>\n  );\n\ntype IfProps = {\n  condition: boolean;\n  children: React.ReactNode;\n};\n\nexport const DisplayIf: FC<IfProps> = ({ condition, children }) =>\n  condition ? (\n    React.isValidElement(children) ? (\n      children\n    ) : (\n      <>{children}</>\n    )\n  ) : null;\n","import React, {\n  createElement,\n  forwardRef,\n  type ComponentType,\n  type FunctionComponent,\n  type HTMLProps,\n} from \"react\";\nimport cx from \"classnames\";\n\nimport \"../../css/buttons.css\";\n\nexport type ButtonColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"success\"\n  | \"dark\"\n  | \"ghost\"\n  | \"link\"\n  | \"light\"\n  | \"danger\";\n\nexport type ButtonProps = {\n  size?: \"small\" | \"default\" | \"large\";\n  color?: ButtonColor;\n  wide?: boolean;\n  justified?: boolean;\n  circle?: boolean;\n  asLink?: boolean;\n  selected?: boolean;\n  style?: React.CSSProperties;\n  className?: string;\n  icon?: boolean;\n  type?: \"submit\" | \"reset\" | \"button\";\n} & Omit<HTMLProps<HTMLButtonElement>, \"size\">;\n\ninterface ButtonType extends FunctionComponent<ButtonProps> {\n  Primary: ComponentType<ButtonProps>;\n  Secondary: ComponentType<ButtonProps>;\n  Success: ComponentType<ButtonProps>;\n  Dark: ComponentType<ButtonProps>;\n  Ghost: ComponentType<ButtonProps & { fullGhost?: boolean }>;\n  Link: ComponentType<ButtonProps>;\n  Light: ComponentType<ButtonProps>;\n  Danger: ComponentType<ButtonProps>;\n}\n\nlet Button: ButtonType;\n\n(Button as any) = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  ButtonProps\n>(\n  (\n    {\n      size = \"default\",\n      color = \"primary\",\n      wide = false,\n      justified = false,\n      circle = false,\n      className = null,\n      asLink = false,\n      style = null,\n      selected = false,\n      type = null,\n      icon = false,\n      ...props\n    },\n    ref\n  ) =>\n    createElement(asLink ? \"a\" : \"button\", {\n      className: cx(\n        \"btn\",\n        `btn--${color}`,\n        {\n          [`btn--${size}`]: size !== \"default\",\n          \"btn--wide\": wide,\n          \"btn--justified\": justified,\n          \"btn--icon\": icon,\n          \"btn--circle\": circle,\n          selected,\n          \"flex-middle flex-center\": asLink,\n        },\n        className\n      ),\n      style: { ...(style || {}), ...(asLink ? { display: \"flex\" } : {}) },\n      ...(asLink ? {} : { type: type || \"button\" }),\n      ...props,\n      ref,\n    })\n);\n\nButton.displayName = \"Button\";\n\nButton.Primary = forwardRef((props, ref) => (\n  <Button {...props} color=\"primary\" ref={ref} />\n));\nButton.Primary.displayName = \"Button.Primary\";\n\nButton.Secondary = forwardRef((props, ref) => (\n  <Button {...props} color=\"secondary\" ref={ref} />\n));\nButton.Secondary.displayName = \"Button.Secondary\";\n\nButton.Success = forwardRef((props, ref) => (\n  <Button {...props} color=\"success\" ref={ref} />\n));\nButton.Success.displayName = \"Button.Success\";\n\nButton.Dark = forwardRef((props, ref) => (\n  <Button {...props} color=\"dark\" ref={ref} />\n));\nButton.Dark.displayName = \"Button.Dark\";\n\nButton.Ghost = forwardRef(({ fullGhost = false, className, ...props }, ref) => (\n  <Button\n    className={cx({ \"btn--full-ghost\": fullGhost, [className]: className })}\n    {...props}\n    color=\"ghost\"\n    ref={ref}\n  />\n));\nButton.Ghost.displayName = \"Button.Ghost\";\n\nButton.Link = forwardRef((props, ref) => (\n  <Button {...props} color=\"link\" ref={ref} />\n));\nButton.Link.displayName = \"Button.Link\";\n\nButton.Light = forwardRef((props, ref) => (\n  <Button {...props} color=\"light\" ref={ref} />\n));\nButton.Light.displayName = \"Button.Light\";\n\nButton.Danger = forwardRef((props, ref) => (\n  <Button {...props} color=\"danger\" ref={ref} />\n));\nButton.Danger.displayName = \"Button.Danger\";\n\nexport { Button };\n","import React, { forwardRef } from \"react\";\nimport cx from \"classnames\";\n\nexport type ButtonGroupProps = {\n  square?: boolean;\n  withDivider?: boolean;\n  className?: string;\n};\n\nexport const ButtonGroup = forwardRef<\n  HTMLDivElement,\n  ButtonGroupProps & React.HTMLProps<HTMLDivElement>\n>(\n  (\n    { square = false, withDivider = false, className = null, ...props },\n    ref\n  ) => (\n    <div\n      className={cx(\n        \"btn-group\",\n        {\n          \"btn-group--square\": square,\n          \"btn-group--divider\": withDivider,\n        },\n        className\n      )}\n      {...props}\n      ref={ref}\n    />\n  )\n);\n","import type React from \"react\";\nimport EventEmitter from \"eventemitter3\";\n\nimport type { ButtonProps } from \"src/Button\";\nimport type {\n  ConfirmationModalProps,\n  ModalProps,\n  PromptModalProps,\n} from \"src/Modal\";\n\ntype Callback = () => void;\nexport type FullBodyProps = { close: Callback };\ntype FullBodyRenderer = (props: FullBodyProps) => React.ReactElement;\n\ntype CommonModalProps = {\n  onModalClose?: () => unknown;\n  title?: React.ReactNode;\n  onClosed?: Callback;\n};\n\ntype PromptOptions<T extends string | number = any> = {\n  initial: PromptModalProps<T>[\"initial\"];\n  type: PromptModalProps<T>[\"type\"];\n  hint: PromptModalProps<T>[\"hint\"];\n  validate: PromptModalProps<T>[\"validate\"];\n};\n\nexport type EventModalProps = (\n  | {\n      modalType: \"confirmation\";\n      prompt: ConfirmationModalProps[\"prompt\"];\n      onConfirm: ConfirmationModalProps[\"confirmHandle\"];\n      confirmText?: ConfirmationModalProps[\"confirmText\"];\n      confirmType?: ConfirmationModalProps[\"confirmType\"];\n      dontAskAgain?: ConfirmationModalProps[\"dontAskAgain\"];\n    }\n  | {\n      modalType: \"notification\";\n      body: React.ReactNode;\n      buttonColor?: ButtonProps[\"color\"];\n      button: React.ReactNode;\n    }\n  | ({\n      modalType: \"prompt\";\n      options?: Partial<PromptOptions>;\n      question: React.ReactNode;\n      cb: PromptModalProps<any>[\"onSave\"];\n    } & Omit<Partial<PromptOptions>, \"validate\">)\n  | {\n      modalType: \"dynamic\";\n      fullBody:\n        | React.ReactElement<FullBodyProps & Record<string, any>>\n        | FullBodyRenderer;\n      modalProps?: Partial<ModalProps>;\n      body?: React.ReactNode;\n      buttons?: {\n        text?: React.ReactNode;\n        color?: ButtonProps[\"color\"];\n        onClick?: (\n          event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n          close: Callback\n        ) => void;\n      }[];\n    }\n) &\n  CommonModalProps;\n\ninterface KnownEvents {\n  showModal: (modal: EventModalProps) => void;\n}\n\nexport const eventManager = new EventEmitter<KnownEvents>();\n","import React, { type ChangeEvent, type FC, type ReactNode } from \"react\";\n\nimport { Button, type ButtonColor } from \"src/Button\";\n\nimport { ModalBody } from \"./Body\";\nimport { ModalFooter } from \"./Footer\";\nimport { Modal } from \"./Modal\";\nimport type { DontAskAgain } from \"./calls\";\n\n/**\n * Confirmation Modal\n */\n\nexport type ConfirmationModalProps = {\n  isOpen?: boolean;\n  confirmHandle: (dontAskAgain?: boolean) => boolean | Promise<boolean>;\n  closeHandle: () => void;\n  prompt: ReactNode;\n  confirmType?: ButtonColor;\n  confirmText?: string;\n  autoClose?: boolean;\n  dontAskAgain?: DontAskAgain;\n};\n\nexport const ConfirmationModal: FC<ConfirmationModalProps> = ({\n  isOpen = false,\n  confirmType = \"primary\",\n  autoClose = true,\n  confirmText = \"Confirm\",\n  confirmHandle,\n  closeHandle,\n  prompt,\n  dontAskAgain = { show: false },\n}) => {\n  const [doing, setDoing] = React.useState(false);\n  const [dontAsk, setDontAsk] = React.useState(false);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      closeIcon\n      closeHandle={closeHandle}\n      autoClose={autoClose}\n      title=\"Confirmation\"\n    >\n      <ModalBody>\n        {prompt}\n        {dontAskAgain?.show ? (\n          <div className=\"form-group\">\n            <label className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                checked={dontAsk}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                  setDontAsk(e.target.checked);\n                }}\n              />\n              <span className=\"checkbox__input\"></span>\n              <span className=\"checkbox__label\">\n                {dontAskAgain.text || \"Don't ask again\"}\n              </span>\n            </label>\n          </div>\n        ) : null}\n      </ModalBody>\n      <ModalFooter>\n        <Button.Light onClick={closeHandle}>Close</Button.Light>\n        <Button\n          color={confirmType}\n          disabled={doing}\n          onClick={async () => {\n            setDoing(true);\n            if (await confirmHandle(dontAsk)) setDoing(false);\n          }}\n        >\n          {confirmText}\n          {doing ? (\n            <span className=\"icon-animation spin qtr-margin-left\" />\n          ) : null}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { FC } from \"react\";\n\ntype InputHelpBaloonProps = {\n  baloon: string;\n};\n\nexport const InputHelpBaloon: FC<InputHelpBaloonProps> = ({ baloon }) => (\n  <span\n    data-balloon={baloon}\n    data-balloon-length=\"large\"\n    data-balloon-pos=\"up\"\n    className=\"qtr-margin-left\"\n  >\n    <span className=\"icon-question-circle\" style={{ cursor: \"help\" }} />\n  </span>\n);\n","import React, { FC } from \"react\";\n\ntype InputHelpBlockProps = {\n  text: React.ReactNode;\n};\n\nexport const InputHelpBlock: FC<InputHelpBlockProps> = ({ text = null }) =>\n  text && (\n    <div className=\"form-group__help\" role=\"alert\">\n      <span>{text}</span>\n    </div>\n  );\n","import React, { HTMLProps, ReactElement, ReactNode, forwardRef } from \"react\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport { appendClass as ac } from \"src/utils\";\n\nimport \"../../css/input.css\";\n\nexport type InputProps = {\n  label?: ReactNode;\n  type?: string;\n  inline?: \"label\" | \"both\" | \"form\";\n  helpBlock?: boolean | ReactNode;\n  iconClick?: (e) => void;\n  icon?: string | ReactElement<any>;\n  className?: string;\n  plain?: boolean;\n  error?: ReactNode;\n  horizontal?: boolean;\n  horizontalLabelClassName?: string;\n  prefix?: string;\n};\n\nexport const Input = forwardRef<\n  HTMLInputElement,\n  InputProps & Omit<HTMLProps<HTMLInputElement>, \"label\">\n>(\n  (\n    {\n      type = \"text\",\n      inline = null,\n      helpBlock = true,\n      label = null,\n      icon = null,\n      iconClick = null,\n      className = null,\n      plain = false,\n      horizontal = null,\n      horizontalLabelClassName = \"col-3\",\n      error = null,\n      prefix = null,\n      ...input\n    },\n    ref\n  ) => (\n    <div\n      className={`form-group${ac(className)}${ac(\n        error,\n        \"form-group--error\"\n      )}${ac(inline === \"form\" || inline === \"both\", \"form-group--inline\")}${ac(\n        inline === \"label\" || inline === \"both\",\n        \"label--inline\"\n      )}${ac(icon, \"input--icon\")}${ac(horizontal, \"form-group--horizontal\")}`}\n    >\n      <div className=\"form-group__text\">\n        <ConditionalWrapper\n          wrapper={<div className=\"flex labeled\" />}\n          condition={!!prefix}\n        >\n          {prefix ? <div className=\"input-label\">{prefix}</div> : null}\n          <input\n            type={type}\n            ref={ref}\n            {...input}\n            className={ac(plain, \"form-group--plaintext\")}\n          />\n        </ConditionalWrapper>\n        {label ? (\n          <label\n            htmlFor={input.id}\n            className={ac(horizontal, horizontalLabelClassName)}\n          >\n            {label}\n          </label>\n        ) : null}\n        {icon ? (\n          <button\n            type=\"button\"\n            className=\"link\"\n            tabIndex={-1}\n            onClick={iconClick}\n          >\n            {typeof icon === \"string\" ? (\n              <span className={icon.startsWith(\" \") ? icon : `icon-${icon}`} />\n            ) : (\n              icon\n            )}\n          </button>\n        ) : null}\n      </div>\n      {!inline && helpBlock ? (\n        error ? (\n          <InputHelpBlock text={error} />\n        ) : typeof helpBlock !== \"boolean\" ? (\n          <InputHelpBlock text={helpBlock} />\n        ) : null\n      ) : null}\n    </div>\n  )\n);\n","import React, {\n  type ChangeEvent,\n  type ComponentProps,\n  type KeyboardEvent,\n  type PropsWithChildren,\n  type ReactNode,\n} from \"react\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { Button } from \"src/Button\";\nimport { DisplayIf as If } from \"src/Conditional\";\nimport { Input } from \"src/Input\";\n\nimport { ModalBody } from \"./Body\";\nimport { ModalFooter } from \"./Footer\";\nimport { Modal } from \"./Modal\";\n\n/**\n * Prompt Modal\n */\n\nexport interface PromptModalProps<T extends string | number> {\n  title: ReactNode;\n  question: ReactNode;\n  onSave: (value: T) => void | Promise<void>;\n  onClose?: () => void;\n  initial?: T;\n  type?: string;\n  isOpen: boolean;\n  hint?: ReactNode;\n  validate?: ((value: T) => Promise<boolean>) | ((value: T) => boolean);\n  autoClose?: ComponentProps<typeof Modal>[\"autoClose\"];\n}\n\nexport function PromptModal<T extends string | number>({\n  title,\n  question,\n  onSave: cb,\n  onClose,\n  initial,\n  type,\n  isOpen,\n  hint,\n  validate,\n  autoClose,\n}: PropsWithChildren<PromptModalProps<T>>): JSX.Element {\n  const [val, setVal] = React.useState<T>(initial);\n  const [doing, setDoing] = React.useState(false);\n  const onSave = useEvent(async () => {\n    if (typeof validate === \"function\" && !(await validate(val))) return;\n\n    setDoing(true);\n    await cb(val);\n    setDoing(false);\n    onClose();\n  });\n\n  React.useEffect(() => setVal(initial), [initial]);\n\n  const inpRef = React.useRef<HTMLInputElement>(undefined);\n\n  React.useEffect(() => {\n    if (isOpen && inpRef.current) inpRef.current.focus();\n  }, [isOpen]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      closeIcon\n      closeHandle={onClose}\n      title={title}\n      autoClose={autoClose}\n    >\n      <ModalBody>\n        <Input\n          type={type}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setVal(e.target.value as T)\n          }\n          onKeyUp={(e: KeyboardEvent<HTMLInputElement>) => {\n            if (e.key === \"Enter\") {\n              onSave();\n            }\n          }}\n          name=\"promptInput\"\n          value={val}\n          label={\n            <>\n              {question}\n              <If condition={!!hint && typeof hint === \"string\"}>\n                <span\n                  data-balloon={hint}\n                  data-balloon-length=\"large\"\n                  data-balloon-pos=\"up\"\n                >\n                  <span\n                    className=\"icon-question-circle qtr-margin-left\"\n                    style={{ cursor: \"help\" }}\n                  />\n                </span>\n              </If>\n            </>\n          }\n          ref={inpRef}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"light\" onClick={onClose} disabled={doing}>\n          Close\n        </Button>\n        <Button color=\"primary\" onClick={onSave} disabled={doing}>\n          OK\n          {doing ? (\n            <span className=\"icon-animation spin qtr-margin-left\" />\n          ) : null}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { cloneElement, type ComponentProps, type FC } from \"react\";\nimport { FloatingPortal, useFloatingPortalNode } from \"@floating-ui/react\";\nimport { nanoid } from \"nanoid\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { Button } from \"src/Button\";\nimport { FloatingTreeWrapper } from \"src/FloatingProvider\";\nimport {\n  eventManager,\n  type EventModalProps as EMP,\n  type FullBodyProps,\n} from \"src/utils/eventManager\";\n\nimport { ModalBody } from \"./Body\";\nimport { ConfirmationModal } from \"./ConfirmationModal\";\nimport { ModalFooter } from \"./Footer\";\nimport { Modal } from \"./Modal\";\nimport { PromptModal } from \"./PromptModal\";\n\nexport type DynamicModalProps = {\n  portalRoot?: ComponentProps<typeof FloatingPortal>[\"root\"];\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  closeTimeout?: number;\n};\n\ntype EventModalProps = EMP & { id: string; shown: boolean };\n\ntype IsLastProps = { isLast: boolean };\n\nfunction assertUnreachable(x: never): null {\n  throw new Error(`Unexpected value ${x}`);\n}\n\nconst CustomWrapper: FC<\n  Extract<EventModalProps, { modalType: \"dynamic\" }> &\n    FullBodyProps &\n    IsLastProps\n> = ({\n  fullBody,\n  body,\n  buttons,\n  modalProps,\n  id,\n  shown,\n  title,\n  close,\n  isLast,\n}) => {\n  return (\n    <Modal\n      {...modalProps}\n      key={id}\n      isOpen={shown}\n      closeHandle={close}\n      title={title}\n      autoClose={isLast ? modalProps?.autoClose : false}\n    >\n      {fullBody ? (\n        typeof fullBody === \"function\" ? (\n          fullBody({ close })\n        ) : (\n          cloneElement(fullBody, { close })\n        )\n      ) : (\n        <>\n          <ModalBody>{body}</ModalBody>\n          <ModalFooter>\n            {buttons.map((button, idx) => (\n              <Button\n                key={idx}\n                color={button.color || \"light\"}\n                onClick={(e) => {\n                  if (typeof button.onClick === \"function\")\n                    button.onClick(e, close);\n                  else close();\n                }}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </ModalFooter>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nconst NotificationWrapper: FC<\n  Extract<EventModalProps, { modalType: \"notification\" }> &\n    FullBodyProps &\n    IsLastProps\n> = ({ id, body, button, close, isLast, shown, buttonColor, title }) => {\n  return (\n    <Modal\n      key={id}\n      isOpen={shown}\n      closeIcon\n      closeHandle={close}\n      title={title}\n      autoClose={isLast ? undefined : false} // override default behavior only if it's not last rendered modal\n    >\n      <ModalBody>{body}</ModalBody>\n      <ModalFooter>\n        <Button color={buttonColor || \"light\"} onClick={close}>\n          {button}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst PromptWrapper: FC<\n  Extract<EventModalProps, { modalType: \"prompt\" }> &\n    FullBodyProps &\n    IsLastProps\n> = ({\n  cb,\n  close,\n  id,\n  isLast,\n  question,\n  shown,\n  hint,\n  initial,\n  options,\n  title,\n  type,\n}) => {\n  let validate: (typeof options)[\"validate\"];\n\n  if (typeof options !== \"undefined\") {\n    ({\n      initial = \"\",\n      type = \"text\",\n      hint = undefined,\n      validate = undefined,\n    } = options);\n  }\n\n  return (\n    <PromptModal\n      key={id}\n      isOpen={shown}\n      onClose={close}\n      onSave={cb}\n      title={title}\n      question={question}\n      initial={initial}\n      type={type}\n      hint={hint}\n      validate={validate}\n      autoClose={isLast ? undefined : false} // override default behavior only if it's not last rendered modal\n    />\n  );\n};\n\nconst ConfirmationWrapper: FC<\n  Extract<EventModalProps, { modalType: \"confirmation\" }> &\n    FullBodyProps &\n    IsLastProps\n> = ({\n  close,\n  id,\n  isLast,\n  onConfirm,\n  prompt,\n  shown,\n  confirmText,\n  confirmType,\n  dontAskAgain,\n}) => {\n  return (\n    <ConfirmationModal\n      key={id}\n      isOpen={shown}\n      prompt={prompt}\n      confirmHandle={async (dontAskAgain) => {\n        const r = await onConfirm(dontAskAgain);\n        if (r) close();\n        return true;\n      }}\n      closeHandle={close}\n      confirmText={confirmText}\n      confirmType={confirmType}\n      dontAskAgain={dontAskAgain}\n      autoClose={isLast ? undefined : false} // override default behavior only if it's not last rendered modal\n    />\n  );\n};\n\nexport const DynamicModal: FC<DynamicModalProps> = ({\n  closeTimeout = 300,\n  ...props\n}) => {\n  const [modals, setModals] = React.useState<EventModalProps[]>([]);\n\n  useFloatingPortalNode({\n    id: props.portalId ?? \"--cui-modal-portal\",\n  });\n\n  const addModal = React.useCallback(\n    (modal: EventModalProps) =>\n      setModals((curr) => [...curr, { id: nanoid(), shown: true, ...modal }]),\n    []\n  );\n\n  const hideModal = React.useCallback((id: string) => {\n    setModals((curr) =>\n      curr.map((m) => (m.id === id ? { ...m, shown: false } : m))\n    );\n  }, []);\n\n  const deleteModal = useEvent((id: string) => {\n    setModals((curr) =>\n      curr.filter((m) => {\n        if (m.id === id && typeof m.onClosed === \"function\") m.onClosed();\n        return m.id !== id;\n      })\n    );\n  });\n\n  const closeModal = useEvent((id: string, cb?: () => unknown) => {\n    hideModal(id);\n    setTimeout(() => deleteModal(id), closeTimeout);\n    if (cb) cb();\n  });\n\n  React.useEffect(() => {\n    const cb = (m: EventModalProps) => addModal(m);\n    eventManager.on(\"showModal\", cb);\n    return () => {\n      eventManager.off(\"showModal\", cb);\n    };\n  }, [addModal]);\n\n  return (\n    <>\n      {modals.length > 0 ? (\n        <FloatingTreeWrapper\n          withPortal={true}\n          portalId={props.portalId ?? \"--cui-modal-portal\"}\n          portalRoot={props.portalRoot}\n        >\n          {modals.map((modal, idx) => {\n            switch (modal.modalType) {\n              case \"dynamic\":\n                return (\n                  <CustomWrapper\n                    {...modal}\n                    key={modal.id}\n                    close={() => closeModal(modal.id, modal.onModalClose)}\n                    isLast={idx === modals.length - 1}\n                  />\n                );\n\n              case \"notification\":\n                return (\n                  <NotificationWrapper\n                    {...modal}\n                    key={modal.id}\n                    close={() => closeModal(modal.id, modal.onModalClose)}\n                    isLast={idx === modals.length - 1}\n                  />\n                );\n\n              case \"prompt\":\n                return (\n                  <PromptWrapper\n                    {...modal}\n                    key={modal.id}\n                    close={() => closeModal(modal.id, modal.onModalClose)}\n                    isLast={idx === modals.length - 1}\n                  />\n                );\n\n              case \"confirmation\":\n                return (\n                  <ConfirmationWrapper\n                    {...modal}\n                    key={modal.id}\n                    close={() => closeModal(modal.id, modal.onModalClose)}\n                    isLast={idx === modals.length - 1}\n                  />\n                );\n\n              default:\n                return assertUnreachable(modal);\n            }\n          })}\n        </FloatingTreeWrapper>\n      ) : null}\n    </>\n  );\n};\n\nexport { DynamicModal as ConfirmationListener };\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  type ComponentProps,\n  type FC,\n  type MutableRefObject,\n  type ReactNode,\n} from \"react\";\nimport type { FloatingPortal } from \"@floating-ui/react\";\n\nimport { DynamicModal } from \"./DynamicModal\";\n\ntype ModalContextProps = {\n  addRendered: (id: string) => void;\n  removeRendered: (id: string) => void;\n  lastRendered: () => string | null;\n  rendered: MutableRefObject<string[]>;\n};\n\nconst ModalContext = createContext<ModalContextProps | null>(null);\n\nexport type ModalProviderProps = {\n  portalRoot?: ComponentProps<typeof FloatingPortal>[\"root\"];\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  closeTimeout?: number;\n  children: ReactNode;\n};\n\nexport const useModalProvider = () => useContext(ModalContext);\n\nexport const ModalProvider: FC<ModalProviderProps> = ({\n  children,\n  closeTimeout,\n  portalId,\n  portalRoot,\n}) => {\n  const rendered = useRef<string[]>([]);\n  const addRendered = useCallback((id: string) => {\n    rendered.current = [...rendered.current, id];\n  }, []);\n  const removeRendered = useCallback((id: string) => {\n    rendered.current = rendered.current.filter((n) => n !== id);\n  }, []);\n  const lastRendered = useCallback(() => {\n    if (rendered.current.length > 0)\n      return rendered.current[rendered.current.length - 1];\n    return null;\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={useMemo(\n        () => ({\n          rendered,\n          addRendered,\n          removeRendered,\n          lastRendered,\n        }),\n        [rendered, addRendered, removeRendered, lastRendered]\n      )}\n    >\n      {children}\n      <DynamicModal\n        closeTimeout={closeTimeout}\n        portalId={portalId}\n        portalRoot={portalRoot}\n      />\n    </ModalContext.Provider>\n  );\n};\n","import React, { type ComponentProps, type FC, type ReactNode } from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingOverlay,\n  FloatingPortal,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingTree,\n  useInteractions,\n  useRole,\n  type ReferenceType,\n  type UseDismissProps,\n} from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport { Transition } from \"react-transition-group\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport {\n  FloatingProvider,\n  FloatingTreeWrapper,\n  useFloatingContext,\n} from \"src/FloatingProvider\";\nimport { useCustomDismiss } from \"src/hooks/useCustomDismiss\";\n\nimport { ModalBody } from \"./Body\";\nimport { ModalFooter } from \"./Footer\";\nimport { ModalHeader } from \"./Header\";\nimport sts from \"./Modal.module.scss\";\nimport { useModalProvider } from \"./ModalProvider\";\n\n/**\n * Modal\n */\n\nexport type ModalSize = \"small\" | \"default\" | \"large\" | \"full\" | \"fluid\";\n\nexport interface ModalProps {\n  size?: ModalSize;\n  closeIcon?: boolean;\n  closeHandle?: () => void;\n  children?: ReactNode;\n  title?: ReactNode;\n  isOpen: boolean;\n  autoClose?: boolean;\n  left?: boolean;\n  animationDuration?: ComponentProps<typeof Transition>[\"timeout\"];\n  dialogProps?: ComponentProps<\"div\">;\n  contentProps?: ComponentProps<\"div\">;\n  maximize?: boolean;\n  refElement?: ReferenceType;\n  root?: ComponentProps<typeof FloatingPortal>[\"root\"];\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  lockScroll?: ComponentProps<typeof FloatingOverlay>[\"lockScroll\"];\n  ancestorScroll?: UseDismissProps[\"ancestorScroll\"];\n}\n\ntype ModalSizes = {\n  Small: FC<ModalProps>;\n  Large: FC<ModalProps>;\n  Full: FC<ModalProps>;\n  Fluid: FC<ModalProps>;\n};\n\ntype ModalComponents = {\n  Header: typeof ModalHeader;\n  Body: typeof ModalBody;\n  Footer: typeof ModalFooter;\n};\n\nexport const Modal: ModalSizes & ModalComponents & FC<ModalProps> = ({\n  size = null,\n  autoClose = true,\n  animationDuration = 250,\n  closeIcon = false,\n  title = null,\n  closeHandle = null,\n  left = false,\n  dialogProps = null,\n  contentProps = null,\n  maximize = false,\n  children,\n  isOpen,\n  refElement,\n  root: rootProvided,\n  lockScroll,\n  ancestorScroll,\n  portalId,\n}) => {\n  const [maximized, setMaximized] = React.useState(false);\n\n  const nodeId = useFloatingNodeId();\n  const modalCtx = useModalProvider();\n  const notifyCtx = useEvent((o: boolean) => {\n    if (!modalCtx) return;\n    if (o) modalCtx.addRendered(nodeId);\n    else modalCtx.removeRendered(nodeId);\n  });\n\n  React.useEffect(() => {\n    setMaximized(false);\n    notifyCtx(isOpen);\n    return () => notifyCtx(false);\n  }, [isOpen, notifyCtx]);\n  const realSize = React.useMemo(\n    () => (maximized ? \"full\" : size),\n    [maximized, size]\n  );\n\n  const { reference, floating, context } = useFloating({\n    open: isOpen,\n    onOpenChange: (state) =>\n      !state && closeHandle ? void closeHandle() : void 0,\n    nodeId,\n  });\n  const floatingTree = useFloatingTree();\n\n  React.useEffect(() => {\n    if (refElement) reference(refElement);\n  }, [refElement]);\n\n  const outsidePress = useEvent((): boolean => {\n    if (!modalCtx) return true;\n    if (modalCtx.lastRendered() === nodeId) return true;\n    return false;\n  });\n\n  const { getFloatingProps } = useInteractions([\n    useClick(context),\n    useRole(context, { role: \"dialog\" }),\n    useDismiss(context, {\n      enabled: autoClose,\n      escapeKey: false,\n      ancestorScroll,\n      bubbles: false,\n      outsidePress: outsidePress,\n    }),\n    useCustomDismiss(context, { enabled: autoClose, modal: true }),\n  ]);\n\n  const overlayRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n\n  const { id, root } = useFloatingContext({\n    root: rootProvided,\n    portalId,\n    fallbackPortalId: \"--cui-modal-portal\",\n  });\n\n  return (\n    <Transition\n      in={isOpen}\n      mountOnEnter\n      unmountOnExit\n      appear\n      timeout={animationDuration}\n      nodeRef={overlayRef}\n    >\n      {(state) => (\n        <FloatingTreeWrapper\n          withPortal={!floatingTree}\n          portalId={id}\n          portalRoot={root}\n        >\n          <FloatingNode id={nodeId}>\n            <FloatingOverlay\n              className={cx(\"modal-backdrop\", {\n                \"modal-backdrop--before-close\": state === \"exiting\",\n              })}\n              lockScroll={lockScroll}\n              ref={overlayRef}\n              id={nodeId}\n            >\n              <FloatingFocusManager context={context} modal>\n                <div\n                  className={cx(\"modal\", \"modal_transitions\", {\n                    [`modal--${realSize}`]: Boolean(realSize),\n                    \"modal--left\": Boolean(left),\n                  })}\n                >\n                  <div\n                    ref={floating}\n                    {...getFloatingProps({\n                      ...dialogProps,\n                      className: cx(\"modal__dialog\", {\n                        [sts.modal__dialog__appear]: state === \"entering\",\n                        [sts.modal__dialog__open]: state === \"entered\",\n                        [dialogProps?.className]: dialogProps?.className,\n                      }),\n                    })}\n                  >\n                    <FloatingProvider rootRef={contentRef}>\n                      <div\n                        className=\"modal__content\"\n                        ref={contentRef}\n                        {...contentProps}\n                      >\n                        {!!(closeIcon && closeHandle) || maximize ? (\n                          <ConditionalWrapper\n                            condition={!!(closeIcon && closeHandle) && maximize}\n                            wrapper={<div className=\"modal__close\" />}\n                          >\n                            {Boolean(maximize) && (\n                              <a\n                                className={cx({\n                                  modal__close: !(closeIcon && closeHandle),\n                                  \"qtr-margin-right\": closeIcon && closeHandle,\n                                })}\n                                onClick={() => setMaximized((curr) => !curr)}\n                              >\n                                <span\n                                  className={\n                                    maximized\n                                      ? \"icon-minimize\"\n                                      : \"icon-maximize\"\n                                  }\n                                />\n                              </a>\n                            )}\n                            {Boolean(closeIcon && closeHandle) && (\n                              <a\n                                className={!maximize ? \"modal__close\" : \"\"}\n                                onClick={closeHandle}\n                              >\n                                <span className=\"icon-close\" />\n                              </a>\n                            )}\n                          </ConditionalWrapper>\n                        ) : null}\n                        {Boolean(title) && (\n                          <ModalHeader>\n                            <h1 className=\"modal__title\">{title}</h1>\n                          </ModalHeader>\n                        )}\n                        {children}\n                      </div>\n                    </FloatingProvider>\n                  </div>\n                </div>\n              </FloatingFocusManager>\n            </FloatingOverlay>\n          </FloatingNode>\n        </FloatingTreeWrapper>\n      )}\n    </Transition>\n  );\n};\n\nModal.Small = (props) => <Modal {...props} size=\"small\" />;\nModal.Large = (props) => <Modal {...props} size=\"large\" />;\nModal.Full = (props) => <Modal {...props} size=\"full\" />;\nModal.Fluid = (props) => <Modal {...props} size=\"fluid\" />;\n\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\n","import React, { type ReactNode } from \"react\";\n\nimport type { ButtonColor } from \"src/Button\";\nimport { EventModalProps, eventManager } from \"src/utils/eventManager\";\n\nimport type { ModalProps } from \"./Modal\";\nimport type { PromptModalProps } from \"./PromptModal\";\n\nexport type DontAskAgain = {\n  show: boolean;\n  text?: ReactNode;\n};\n\ntype TextOrNumber = string | number;\n\nexport function confirmation(\n  prompt: ReactNode,\n  onConfirm: (dontAskAgain?: boolean) => boolean | Promise<boolean>,\n  confirmType: ButtonColor = \"primary\",\n  confirmText = \"Confirm\",\n  dontAskAgain: DontAskAgain = { show: false }\n): Promise<void> {\n  if (!prompt) throw new Error(\"Prompt must be specified\");\n  if (!onConfirm || typeof onConfirm !== \"function\")\n    throw new Error(\"onConfirm must be specified and must be a function\");\n\n  return new Promise((resolve) =>\n    eventManager.emit(\"showModal\", {\n      modalType: \"confirmation\",\n      prompt: <p>{prompt}</p>,\n      onConfirm,\n      confirmText,\n      confirmType,\n      dontAskAgain,\n      onModalClose: resolve,\n    })\n  );\n}\n\ntype NotificationModal = (\n  title: ReactNode,\n  body: ReactNode,\n  buttonColor?: ButtonColor,\n  button?: ReactNode\n) => Promise<void>;\n\nexport const notificationModal: NotificationModal = (\n  title,\n  body,\n  buttonColor = \"light\",\n  button = \"OK\"\n): Promise<void> => {\n  if (!title || !body) throw new Error(\"Title and body must be specified\");\n\n  return new Promise((resolve) => {\n    eventManager.emit(\"showModal\", {\n      modalType: \"notification\",\n      title,\n      body,\n      buttonColor,\n      button,\n      onClosed: resolve,\n    });\n  });\n};\n\nexport { notificationModal as notification };\n\ntype initialOrOptions<T extends TextOrNumber> =\n  | Pick<PromptModalProps<T>, \"initial\" | \"type\" | \"hint\" | \"validate\">\n  | string;\n\nexport function prompt<T extends TextOrNumber>(\n  title: string,\n  question: ReactNode,\n  cb: (value: T) => void | Promise<void>,\n  initial?: string,\n  type?: string,\n  hint?: ReactNode\n): Promise<void>;\nexport function prompt<T extends TextOrNumber>(\n  title: string,\n  question: ReactNode,\n  cb: (value: T) => void | Promise<void>,\n  options?: Pick<PromptModalProps<T>, \"initial\" | \"type\" | \"hint\" | \"validate\">\n): Promise<void>;\nexport function prompt<T extends TextOrNumber>(\n  title: string,\n  question: ReactNode,\n  cb: (value: T) => void | Promise<void>,\n  initial: initialOrOptions<T>,\n  type = \"text\",\n  hint = undefined\n): Promise<void> {\n  if (!title || !question)\n    throw new Error(\"Title and question must be specified\");\n\n  if (typeof initial === \"object\") {\n    return new Promise((resolve) =>\n      eventManager.emit(\"showModal\", {\n        modalType: \"prompt\",\n        title,\n        question,\n        cb,\n        options: initial,\n        onModalClose: resolve,\n      })\n    );\n  }\n\n  return new Promise((resolve) =>\n    eventManager.emit(\"showModal\", {\n      modalType: \"prompt\",\n      title,\n      initial,\n      type,\n      question,\n      cb,\n      hint,\n      onModalClose: resolve,\n    })\n  );\n}\n\ntype CloseHandler = () => void;\n\ninterface ModalButton {\n  color?: ButtonColor;\n  text: ReactNode;\n  onClick?: (\n    e: React.MouseEvent<HTMLButtonElement>,\n    close: CloseHandler\n  ) => void;\n}\n\nexport type PropsWithCloseModal<P = {}> = P & { close: () => void };\n\ninterface DynamicModalOptions {\n  title: ReactNode;\n  fullBody?: Extract<EventModalProps, { modalType: \"dynamic\" }>[\"fullBody\"];\n  body?: ReactNode;\n  buttons?: ModalButton[];\n  modalProps?: Partial<ModalProps>;\n}\n\ntype DynamicModalHandler = (options: DynamicModalOptions) => Promise<void>;\n\nexport const dynamicModal: DynamicModalHandler = ({\n  title,\n  fullBody = null,\n  body = null,\n  buttons = [],\n  modalProps = {},\n}): Promise<void> => {\n  return new Promise((resolve) => {\n    eventManager.emit(\"showModal\", {\n      modalType: \"dynamic\",\n      title,\n      fullBody,\n      body,\n      buttons,\n      modalProps,\n      onModalClose: resolve,\n    });\n  });\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport {\n  useFloatingTree,\n  type ElementProps,\n  type FloatingContext,\n  type FloatingNodeType,\n  type ReferenceType,\n} from \"@floating-ui/react\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { useModalProvider } from \"src/Modal\";\n\nfunction getDocument(node: Element | null) {\n  return node?.ownerDocument || document;\n}\n\nfunction getChildren<RT extends ReferenceType = ReferenceType>(\n  nodes: Array<FloatingNodeType<RT>>,\n  id: string | undefined\n) {\n  let allChildren =\n    nodes.filter((node) => node.parentId === id && node.context?.open) || [];\n  let currentChildren = allChildren;\n\n  while (currentChildren.length) {\n    currentChildren =\n      nodes.filter((node) =>\n        currentChildren?.some(\n          (n) => node.parentId === n.id && node.context?.open\n        )\n      ) || [];\n\n    allChildren = allChildren.concat(currentChildren);\n  }\n\n  return allChildren;\n}\n\ntype Options = {\n  enabled?: boolean;\n  modal?: boolean;\n};\n\nexport function useCustomDismiss<RT extends ReferenceType = ReferenceType>(\n  {\n    open,\n    onOpenChange,\n    events,\n    nodeId,\n    elements: { floating },\n  }: FloatingContext<RT>,\n  { enabled = true, modal = false }: Options = {}\n): ElementProps {\n  const tree = useFloatingTree();\n  const modalCtx = useModalProvider();\n\n  const closeOnEscapeKeyDown = useEvent(\n    (event: React.KeyboardEvent<Element> | KeyboardEvent) => {\n      if (!open || !enabled || event.key !== \"Escape\") {\n        return;\n      }\n\n      const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n\n      event.stopPropagation();\n\n      if (children.length > 0) return;\n      if (modal && modalCtx && modalCtx.lastRendered() !== nodeId) return;\n\n      events.emit(\"dismiss\", {\n        type: \"escapeKey\",\n        data: {\n          returnFocus: { preventScroll: false },\n        },\n      });\n\n      onOpenChange(false);\n    }\n  );\n\n  useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n\n    const doc = getDocument(floating);\n    doc.addEventListener(\"keydown\", closeOnEscapeKeyDown);\n\n    return () => {\n      doc.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\n    };\n  }, [closeOnEscapeKeyDown, enabled, floating, open]);\n\n  return useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n\n    return {\n      reference: {\n        onKeyDown: closeOnEscapeKeyDown,\n      },\n      floating: {\n        onKeyDown: closeOnEscapeKeyDown,\n      },\n    };\n  }, [closeOnEscapeKeyDown, enabled]);\n}\n","import React, {\n  Children,\n  cloneElement,\n  forwardRef,\n  isValidElement,\n  useEffect,\n  useRef,\n  useState,\n  type ComponentProps,\n  type FC,\n  type HTMLProps,\n  type PropsWithChildren,\n  type ReactElement,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingOverlay,\n  FloatingPortal,\n  autoUpdate,\n  flip,\n  offset,\n  safePolygon,\n  shift,\n  size,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingParentNodeId,\n  useFloatingTree,\n  useHover,\n  useInteractions,\n  useListNavigation,\n  useMergeRefs,\n  useRole,\n  useTypeahead,\n  type Placement,\n  type Strategy,\n} from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport { Transition } from \"react-transition-group\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { FloatingTreeWrapper, useFloatingContext } from \"src/FloatingProvider\";\nimport { useCustomDismiss } from \"src/hooks/useCustomDismiss\";\n\nimport styles from \"./Dropdown.module.scss\";\n\ntype MenuElementProps = {\n  selected?: boolean;\n  icon?: string | ReactElement;\n  submenu?: boolean;\n} & HTMLProps<HTMLAnchorElement>;\n\nexport const MenuElement = forwardRef<any, MenuElementProps>(\n  ({ selected, className, icon, children, submenu, ...props }, ref) => {\n    return (\n      <a\n        ref={ref}\n        {...props}\n        className={cx(className, {\n          selected: selected && !submenu,\n          [styles.submenu]: submenu,\n        })}\n      >\n        {icon ? (\n          isValidElement(icon) ? (\n            <>\n              {icon}\n              {isValidElement(children) ? (\n                children\n              ) : (\n                <span className=\"qtr-margin-left\">{children}</span>\n              )}\n            </>\n          ) : (\n            <>\n              <span className={icon as string} />\n              <span className=\"qtr-margin-left\">{children}</span>\n            </>\n          )\n        ) : (\n          children\n        )}\n      </a>\n    );\n  }\n);\n\nMenuElement.displayName = \"MenuElement\";\n\ntype DropdownProps = PropsWithChildren<{\n  label: ReactNode;\n  placement?: Placement;\n  noChevron?: boolean;\n  strategy?: Strategy;\n  alwaysClose?: boolean;\n  onOpen?: () => unknown;\n  onClose?: () => unknown;\n  isOpen?: boolean;\n  withSizeLimit?: boolean;\n  portalRoot?: ComponentProps<typeof FloatingPortal>[\"root\"];\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  explicitPortal?: boolean;\n}>;\n\ntype MenuComponentProps = {\n  nested?: boolean;\n} & DropdownProps &\n  Pick<MenuElementProps, \"icon\">;\n\nconst TreeClickHandleWrapper: FC<\n  PropsWithChildren<{ onClick: () => void }>\n> = ({ onClick, children }) => {\n  const tree = useFloatingTree();\n\n  useEffect(() => {\n    const t = tree;\n    t?.events.on(\"click\", onClick);\n    return () => {\n      t?.events.off(\"click\", onClick);\n    };\n  }, [tree, onClick]);\n\n  return <>{children}</>;\n};\n\nexport const Menu = forwardRef<\n  any,\n  MenuComponentProps & Omit<HTMLProps<HTMLButtonElement>, \"label\">\n>(\n  (\n    {\n      children,\n      label,\n      noChevron,\n      placement,\n      strategy: providedStrategy,\n      alwaysClose,\n      onOpen,\n      onClose,\n      isOpen,\n      nested,\n      withSizeLimit,\n      portalId,\n      portalRoot,\n      icon,\n      explicitPortal,\n      ...props\n    },\n    ref\n  ) => {\n    const [open, setOpen] = useState(isOpen ?? false);\n    const [activeIndex, setActiveIndex] = useState<number | null>(null);\n    const [allowHover, setAllowHover] = useState(false);\n\n    useEffect(() => {\n      if (typeof isOpen !== \"undefined\") setOpen(isOpen);\n    }, [isOpen]);\n\n    const listItemsRef = useRef<Array<HTMLButtonElement | null>>([]);\n    const listContentRef = useRef(\n      Children.map(children, (child) =>\n        isValidElement(child) ? child.props.label : null\n      ) as Array<string | null>\n    );\n\n    const tree = useFloatingTree();\n    const nodeId = useFloatingNodeId();\n    const parentId = useFloatingParentNodeId();\n    nested ??= parentId != null;\n\n    const { root, id } = useFloatingContext({\n      root: portalRoot,\n      portalId,\n      fallbackPortalId: \"--cui-dropdown-portal\",\n    });\n\n    const { x, y, reference, floating, strategy, refs, context } =\n      useFloating<HTMLButtonElement>({\n        open,\n        onOpenChange: (st) => {\n          if (typeof onOpen === \"function\" && st) onOpen();\n          if (typeof onClose === \"function\" && !st) onClose();\n          setOpen(st);\n        },\n        middleware: [\n          offset({ mainAxis: nested ? 0 : 2, alignmentAxis: nested ? -5 : 0 }),\n          flip(),\n          shift(),\n          withSizeLimit\n            ? size({\n                apply({ availableHeight, availableWidth, elements }) {\n                  Object.assign(elements.floating.style, {\n                    maxWidth: `${availableWidth}px`,\n                    maxHeight: `${availableHeight - 4}px`,\n                  });\n                },\n              })\n            : undefined,\n        ].filter(Boolean),\n        placement: nested ? \"right-start\" : placement,\n        nodeId,\n        whileElementsMounted: autoUpdate,\n        strategy: providedStrategy,\n      });\n\n    const { getReferenceProps, getFloatingProps, getItemProps } =\n      useInteractions([\n        useHover(context, {\n          handleClose: safePolygon({ requireIntent: true }),\n          enabled: nested && allowHover,\n          delay: { open: 75 },\n        }),\n        useClick(context, {\n          toggle: !nested,\n          event: \"mousedown\",\n          ignoreMouse: nested,\n        }),\n        useRole(context, { role: \"menu\" }),\n        useDismiss(context, {\n          bubbles: true,\n          outsidePress: true,\n          escapeKey: false,\n        }),\n        useCustomDismiss(context),\n        useListNavigation(context, {\n          listRef: listItemsRef,\n          activeIndex,\n          nested,\n          onNavigate: setActiveIndex,\n        }),\n        useTypeahead(context, {\n          listRef: listContentRef,\n          onMatch: open ? setActiveIndex : undefined,\n          activeIndex,\n        }),\n      ]);\n\n    const onTreeClick = useEvent(() => {\n      if (alwaysClose) setOpen(false);\n\n      if (parentId === null) {\n        refs.domReference.current?.focus();\n      }\n    });\n\n    useEffect(() => {\n      function onPointerMove() {\n        setAllowHover(true);\n      }\n\n      function onKeyDown() {\n        setAllowHover(false);\n      }\n\n      window.addEventListener(\"pointermove\", onPointerMove, {\n        once: true,\n        capture: true,\n      });\n      window.addEventListener(\"keydown\", onKeyDown, true);\n      return () => {\n        window.removeEventListener(\"pointermove\", onPointerMove, {\n          capture: true,\n        });\n        window.removeEventListener(\"keydown\", onKeyDown, true);\n      };\n    }, [allowHover]);\n\n    const floatingNodeRef = useRef<HTMLElement>(null);\n    const mergedFloatingRef = useMergeRefs([floatingNodeRef, floating]);\n    const mergedReferenceRef = useMergeRefs([ref, reference]);\n\n    useEffect(() => {\n      const onClick = (e: MouseEvent) => {\n        if (!floatingNodeRef.current) return;\n        if (floatingNodeRef.current.contains(e.target as Node)) {\n          if (tree) tree.events.emit(\"click\");\n          else onTreeClick();\n        }\n      };\n\n      document.addEventListener(\"click\", onClick);\n      return () => {\n        document.removeEventListener(\"click\", onClick);\n      };\n    }, [tree, onTreeClick]);\n\n    return (\n      <>\n        {isValidElement(label) ? (\n          cloneElement(label, {\n            ...getReferenceProps({\n              ...props,\n              ref: mergedReferenceRef,\n              onClick(event) {\n                event.stopPropagation();\n                (event.currentTarget as HTMLButtonElement).focus();\n              },\n              ...(nested\n                ? {\n                    className: cx(\"menu_item\", label.props.className, {\n                      open,\n                    }),\n                    role: \"menuitem\",\n                    onKeyDown(event) {\n                      if (\n                        event.key === \"ArrowUp\" ||\n                        event.key === \"ArrowDown\"\n                      ) {\n                        setOpen(false);\n                      }\n                    },\n                  }\n                : {\n                    className: cx(styles.menu_root, label.props.className, {\n                      open,\n                      [styles.with_chevron]: !noChevron,\n                    }),\n                  }),\n            }),\n          })\n        ) : (\n          <MenuElement\n            submenu={nested}\n            icon={icon}\n            {...getReferenceProps({\n              ...props,\n              ref: mergedReferenceRef,\n              onClick(event) {\n                event.stopPropagation();\n                (event.currentTarget as HTMLButtonElement).focus();\n              },\n              ...(nested\n                ? {\n                    className: cx(\"menu_item\", { open }),\n                    role: \"menuitem\",\n                    onKeyDown(event) {\n                      if (\n                        event.key === \"ArrowUp\" ||\n                        event.key === \"ArrowDown\"\n                      ) {\n                        setOpen(false);\n                      }\n                    },\n                  }\n                : {\n                    className: cx(styles.menu_root, {\n                      open,\n                      [styles.with_chevron]: !noChevron,\n                    }),\n                  }),\n            })}\n          >\n            {label}\n          </MenuElement>\n        )}\n        <Transition\n          in={open}\n          mountOnEnter\n          unmountOnExit\n          appear\n          timeout={{ enter: 100, exit: 250 }}\n          nodeRef={floatingNodeRef}\n        >\n          {(state) => (\n            <FloatingTreeWrapper\n              withPortal={explicitPortal || !tree}\n              force={explicitPortal ? true : undefined}\n              portalId={id}\n              portalRoot={root}\n            >\n              <FloatingNode id={nodeId}>\n                <TreeClickHandleWrapper onClick={onTreeClick}>\n                  <FloatingOverlay\n                    style={{\n                      zIndex: nested\n                        ? 50\n                        : \"calc(var(--cui-max-zindex, 1000) + 2)\",\n                    }}\n                  >\n                    <FloatingFocusManager\n                      context={context}\n                      modal={!nested}\n                      returnFocus={!nested}\n                      order={[\"reference\", \"content\"]}\n                    >\n                      <div\n                        {...getFloatingProps({\n                          className: cx(\"dropdown\", styles.dropdown, {\n                            [styles.disappear]:\n                              state === \"exiting\" || state === \"exited\",\n                            [styles.appear]: state === \"entering\",\n                            [styles.active]: state === \"entered\",\n                          }),\n                          ref: mergedFloatingRef,\n                          style: {\n                            position: strategy,\n                            top: y ?? 0,\n                            left: x ?? 0,\n                          },\n                          onKeyDown(event) {\n                            if (event.key === \"Tab\") {\n                              setOpen(false);\n                            }\n                          },\n                        })}\n                      >\n                        <div\n                          className=\"dropdown__menu\"\n                          onClick={\n                            alwaysClose\n                              ? () => {\n                                  tree?.events.emit(\"click\");\n                                }\n                              : undefined\n                          }\n                        >\n                          {Children.map(\n                            children,\n                            (child, index) =>\n                              isValidElement(child) &&\n                              cloneElement(\n                                child,\n                                getItemProps({\n                                  ...child.props,\n                                  tabIndex: -1,\n                                  role: \"menuitem\",\n                                  className: cx(\n                                    \"menu_item\",\n                                    child.props.className\n                                  ),\n                                  ref(node: HTMLButtonElement) {\n                                    listItemsRef.current[index] = node;\n                                  },\n                                  onPointerEnter() {\n                                    if (allowHover) {\n                                      setActiveIndex(index);\n                                    }\n                                  },\n                                })\n                              )\n                          )}\n                        </div>\n                      </div>\n                    </FloatingFocusManager>\n                  </FloatingOverlay>\n                </TreeClickHandleWrapper>\n              </FloatingNode>\n            </FloatingTreeWrapper>\n          )}\n        </Transition>\n      </>\n    );\n  }\n);\n\nMenu.displayName = \"Menu\";\n\nexport const Dropdown = forwardRef<any, DropdownProps>(\n  ({ children, placement = \"bottom-start\", ...props }, ref) => {\n    return (\n      <Menu placement={placement} {...props} nested={false} ref={ref}>\n        {children}\n      </Menu>\n    );\n  }\n);\n\nDropdown.displayName = \"Dropdown\";\n\nexport const MenuDivider = forwardRef<\n  HTMLDivElement,\n  HTMLProps<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div {...props} className={cx(\"divider\", className)} ref={ref} />\n));\n\nMenuDivider.displayName = \"MenuDivider\";\n\nexport const MenuGroup = forwardRef<\n  HTMLDivElement,\n  HTMLProps<HTMLDivElement> & { header?: ReactNode }\n>(({ className, header, children, ...props }, ref) => (\n  <div className={cx(\"dropdown__group\", className)} {...props} ref={ref}>\n    {header ? <div className=\"dropdown__group-header\">{header}</div> : null}\n    {children}\n  </div>\n));\n\nMenuGroup.displayName = \"MenuGroup\";\n","import React, { useMemo, type FC, type ReactNode } from \"react\";\nimport bytes from \"bytes\";\nimport cx from \"classnames\";\nimport ReactDropzone, {\n  type DropzoneProps as ReactDropzoneProps,\n} from \"react-dropzone\";\nimport useEvent from \"react-use-event-hook\";\n\nimport \"../../css/dropzone.css\";\n\ntype FileCardProps = {\n  file: any;\n  i: number;\n  removeFile: (i: number) => void;\n  inline: boolean;\n};\n\nconst FileCard: FC<FileCardProps> = ({ file, i, removeFile, inline }) => (\n  <div\n    className=\"file-drop__card col-lg-4 col-md-6 col-sm-6\"\n    key={`${i}-${file.name}`}\n  >\n    <div\n      className=\"panel panel--bordered hover-emboss--small\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      {inline ? (\n        <div className=\"panel__body flex flex-row\">\n          <div\n            className=\"text-left flex-fill\"\n            style={{ maxWidth: \"calc(100% - 20px)\" }}\n          >\n            <div className=\"text-ellipsis\">{file.name}</div>\n            <small style={{ whiteSpace: \"nowrap\" }}>\n              {bytes.format(file.size, { unitSeparator: \" \" })}\n            </small>\n          </div>\n          <a className=\"link pull-right\" onClick={() => removeFile(i)}>\n            <span className=\"icon-close\" title=\"Remove the file.\" />\n          </a>\n        </div>\n      ) : (\n        <div className=\"panel__body\">\n          <a\n            className=\"link pull-right\"\n            style={{ marginRight: \"5px\" }}\n            onClick={() => removeFile(i)}\n          >\n            <span className=\"icon-close\" title=\"Remove the file.\" />\n          </a>\n          <div className=\"text-ellipsis half-margin-bottom\">{file.name}</div>\n          <span className=\"file-icon text-muted icon-file-o qtr-margin-right\" />\n          <small>{bytes.format(file.size, { unitSeparator: \" \" })}</small>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport type DropzoneProps = {\n  name: string;\n  value?: any[];\n  maxFiles?: number;\n  inline?: boolean;\n  showTotalSelected?: boolean;\n  accept?: string;\n  loose?: boolean;\n  compressed?: boolean;\n  label: string;\n  multiple: boolean;\n  error?: ReactNode;\n  maxFileSize?: string | number;\n  onChange?: (value: File[]) => void;\n};\n\nconst DropzoneMessage: FC<\n  Pick<DropzoneProps, \"inline\" | \"accept\"> & { maxFileSize: number }\n> = ({ inline, accept, maxFileSize }) => {\n  if (inline) {\n    return (\n      <div className=\"dropzone-message flex flex-row flex-center-vertical\">\n        <h5 className=\"text-muted text-left flex-fill no-margin\">\n          Click Here or Drop Files to Upload\n        </h5>\n        {accept && (\n          <span className=\"text-muted text-small half-margin-right\">\n            {\"Allowed files: \"}\n            {typeof accept === \"string\" ? accept.split(\",\").join(\", \") : accept}\n          </span>\n        )}\n        <span className=\"file-drop__icon icon-upload\"></span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dropzone-message\">\n      <span className=\"file-drop__icon icon-upload\"></span>\n      <h4 className=\"text-muted\">Click Here or Drop Files to Upload</h4>\n      {accept && (\n        <div className=\"text-muted\">\n          Allowed files: {accept.split(\",\").join(\", \")}\n        </div>\n      )}\n      {maxFileSize && (\n        <div className=\"text-muted\">\n          Max file size: {bytes.format(maxFileSize, { unitSeparator: \" \" })}\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype DropzoneFilesProps = {\n  files?: File[];\n  removeFile: (toRemove: number) => void;\n};\n\nconst DropzoneFiles: FC<\n  DropzoneFilesProps &\n    Required<Pick<DropzoneProps, \"inline\" | \"showTotalSelected\">>\n> = ({ files, inline, showTotalSelected, removeFile }) => {\n  if (!Array.isArray(files) || !files.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"dropzone-previews\">\n      <div className=\"file-drop__container container--fluid\">\n        <div className=\"row\">\n          {files.map((file, i) => (\n            <FileCard\n              key={i}\n              file={file}\n              i={i}\n              inline={inline}\n              removeFile={removeFile}\n            />\n          ))}\n        </div>\n      </div>\n      {showTotalSelected ? (\n        <div className=\"file-drop__filecnt\">{files.length} selected</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport const Dropzone: FC<DropzoneProps & ReactDropzoneProps> = ({\n  error,\n  loose,\n  compressed,\n  inline,\n  label,\n  name,\n  value,\n  maxFileSize: customMaxFileSize,\n  maxFiles,\n  onChange,\n  showTotalSelected,\n  ...props\n}) => {\n  const maxFileSize = useMemo(() => {\n    if (customMaxFileSize) {\n      return bytes.parse(customMaxFileSize);\n    } else {\n      return null;\n    }\n  }, [customMaxFileSize]);\n\n  const padding = useMemo(() => {\n    let tmp = \"\";\n    if (loose) tmp = \"dropzone--loose\";\n    if (compressed) tmp = \"dropzone--compressed\";\n    if (inline && Array.isArray(value) && value.length) {\n      switch (tmp) {\n        case \"dropzone--loose\":\n          tmp = `${tmp} half-padding-bottom`;\n          break;\n        case \"dropzone--compressed\":\n          tmp = `${tmp} no-padding-bottom`;\n          break;\n        default:\n          tmp = `${tmp} qtr-padding-bottom`;\n          break;\n      }\n    }\n    return tmp;\n  }, [loose, compressed, value, inline]);\n\n  const handleDrop = useEvent((filesToUpload: File[]) => {\n    if (maxFileSize)\n      filesToUpload = filesToUpload.filter((file) => file.size <= maxFileSize);\n\n    if (maxFiles && filesToUpload.length > maxFiles)\n      filesToUpload = filesToUpload.slice(0, maxFiles);\n\n    onChange(filesToUpload);\n  });\n\n  const removeFile = (toRemove: number) => {\n    onChange(\n      Array.isArray(value) ? value.filter((_, idx) => toRemove !== idx) : value\n    );\n  };\n\n  return (\n    <div className={cx(\"form-group\", { \"form-group--error\": error })}>\n      <div className=\"form-group__text\">\n        {label ? <label htmlFor={name}>{label}</label> : null}\n        <ReactDropzone {...props} onDrop={handleDrop} maxSize={maxFileSize}>\n          {({ getRootProps, getInputProps }) => (\n            <div className={`dropzone ${padding}`} {...getRootProps()}>\n              <input {...getInputProps()} />\n              <DropzoneFiles\n                files={value}\n                showTotalSelected={showTotalSelected}\n                inline={inline}\n                removeFile={removeFile}\n              />\n              {Array.isArray(value) && value.length ? null : (\n                <DropzoneMessage\n                  maxFileSize={maxFileSize}\n                  inline={inline}\n                  accept={props.accept}\n                />\n              )}\n            </div>\n          )}\n        </ReactDropzone>\n      </div>\n      {error ? (\n        <div className=\"help-block text-danger\" role=\"alert\">\n          <span>{error}</span>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React, { forwardRef } from \"react\";\n\nexport type DotsColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype DotsProps = {\n  color?: DotsColor;\n};\n\nexport const Dots = forwardRef<HTMLDivElement, DotsProps>(\n  ({ color = \"primary\" }, ref) => (\n    <div\n      className={`loading-dots${\n        color !== \"primary\" ? ` loading-dots--${color}` : \"\"\n      }`}\n      ref={ref}\n    >\n      <span />\n      <span />\n      <span />\n    </div>\n  )\n);\n","import React, { FC, forwardRef } from \"react\";\n\ntype SpinnerProps = {\n  size?: \"small\" | \"default\" | \"large\";\n  text?: React.ReactNode;\n};\n\nexport const Spinner: FC<SpinnerProps> = forwardRef<\n  HTMLDivElement,\n  SpinnerProps\n>(({ size = \"default\", text = null }, ref) => (\n  <div className=\"flex-center flex-middle\" style={{ flex: 1 }} ref={ref}>\n    <div>\n      <div\n        className={`loader${\n          size !== \"default\" ? ` loader--${size}` : \"\"\n        } flex-center`}\n      >\n        <div className=\"wrapper flex flex-center\">\n          <div className=\"wheel\" />\n        </div>\n      </div>\n      {!text ? null : (\n        <div className=\"base-margin-top text-center\">\n          {text || \"Loading...\"}\n        </div>\n      )}\n    </div>\n  </div>\n));\n","import React, { forwardRef } from \"react\";\nimport cx from \"classnames\";\n\nexport type ProgressbarColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning-alt\"\n  | \"warning\"\n  | \"danger\"\n  | \"dark\";\n\ninterface ProgressbarProps {\n  percentage: number;\n  withLabel?: boolean;\n  label?: React.ReactNode;\n  size?: \"small\" | \"default\" | \"large\";\n  color?: ProgressbarColor;\n  className?: string;\n}\n\nexport const Progressbar = forwardRef<HTMLDivElement, ProgressbarProps>(\n  (\n    {\n      size = \"default\",\n      withLabel = false,\n      label,\n      color,\n      className,\n      percentage,\n      ...props\n    },\n    ref\n  ) => (\n    <div\n      className={cx(\"progressbar\", {\n        [`progressbar--${size}`]: size !== \"default\",\n        [`progressbar--${color}`]: color,\n        [className]: className,\n      })}\n      data-percentage={percentage}\n      {...props}\n      ref={ref}\n    >\n      <div className=\"progressbar__fill\" />\n      {withLabel ? (\n        label ? (\n          <div className=\"progressbar__label\">{label}</div>\n        ) : (\n          <div className=\"progressbar__label\">{`${percentage}%`}</div>\n        )\n      ) : null}\n    </div>\n  )\n);\n","import React, { FC } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nexport type LabelColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning-alt\"\n  | \"warning\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype LabelProps = React.PropsWithChildren<{\n  size?: \"tiny\" | \"small\" | \"default\" | \"large\";\n  color?: LabelColor;\n  bordered?: boolean;\n  removable?: boolean;\n  onRemove?: (e) => void;\n  raised?: boolean;\n  className?: string;\n}> &\n  React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n  >;\n\ntype LabelTypes =\n  | \"Primary\"\n  | \"Secondary\"\n  | \"Tertiary\"\n  | \"Success\"\n  | \"Info\"\n  | \"WarningAlt\"\n  | \"Warning\"\n  | \"Danger\"\n  | \"Dark\"\n  | \"Light\";\ntype ILabel = {\n  [x in LabelTypes]: FC<LabelProps>;\n};\n\nexport const Label: ILabel & FC<LabelProps> = ({\n  size = \"default\",\n  color = \"primary\",\n  bordered = false,\n  removable = false,\n  onRemove = null,\n  raised = false,\n  className = null,\n  children,\n  ...props\n}) => (\n  <span\n    className={`label label--${color}${ac(\n      size !== \"default\",\n      `label--${size}`\n    )}${ac(bordered, \"label--bordered\")}${ac(raised, \"label--raised\")}${ac(\n      className\n    )}`}\n    {...props}\n  >\n    {children}\n    {removable ? <span className=\"icon-close\" onClick={onRemove} /> : null}\n  </span>\n);\n\nLabel.Primary = (props) => <Label color=\"primary\" {...props} />;\nLabel.Secondary = (props) => <Label color=\"secondary\" {...props} />;\nLabel.Tertiary = (props) => <Label color=\"tertiary\" {...props} />;\nLabel.Success = (props) => <Label color=\"success\" {...props} />;\nLabel.Info = (props) => <Label color=\"info\" {...props} />;\nLabel.WarningAlt = (props) => <Label color=\"warning-alt\" {...props} />;\nLabel.Warning = (props) => <Label color=\"warning\" {...props} />;\nLabel.Danger = (props) => <Label color=\"danger\" {...props} />;\nLabel.Dark = (props) => <Label color=\"dark\" {...props} />;\nLabel.Light = (props) => <Label color=\"light\" {...props} />;\n","import React, { FC, HTMLProps } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nimport \"../../css/panel.css\";\n\ntype Borders = \"top\" | \"right\" | \"left\" | \"bottom\";\n\nexport interface PanelProps {\n  color?:\n    | \"plain\"\n    | \"primary\"\n    | \"secondary\"\n    | \"tertiary\"\n    | \"success\"\n    | \"info\"\n    | \"warning-alt\"\n    | \"warning\"\n    | \"danger\"\n    | \"dark\"\n    | \"light\"\n    | \"lightest\";\n  padding?: \"none\" | \"compressed\" | \"default\" | \"loose\";\n  bordered?: boolean | Borders | Borders[];\n  raised?: boolean;\n  well?: boolean;\n  className?: string;\n}\n\nexport const Panel: FC<PanelProps & HTMLProps<HTMLDivElement>> =\n  React.forwardRef<HTMLDivElement, PanelProps>(\n    (\n      {\n        color = \"plain\",\n        padding = \"default\",\n        bordered = false,\n        raised = false,\n        well = false,\n        className = null,\n        ...props\n      },\n      ref\n    ) => (\n      <div\n        className={`panel${ac(color !== \"plain\", `panel--${color}`)}${ac(\n          padding !== \"default\",\n          `panel--${padding}`\n        )}${ac(bordered, () => {\n          if (typeof bordered === \"string\")\n            return `panel--bordered-${bordered}`;\n          if (Array.isArray(bordered))\n            return bordered.map((b) => `panel--bordered-${b}`).join(\" \");\n          return \"panel--bordered\";\n        })}${ac(raised, \"panel--raised\")}${ac(well, \"panel--well\")}${ac(\n          className\n        )}`}\n        ref={ref}\n        {...props}\n      />\n    )\n  );\n","export const copyStringToClipboard = async (\n  str: string | number\n): Promise<void> => {\n  str = typeof str === \"string\" ? str : str.toString();\n  if (!navigator?.clipboard) {\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  } else {\n    await navigator.clipboard.writeText(str);\n  }\n};\n","import React, { type FC, type ReactNode } from \"react\";\nimport cx from \"classnames\";\nimport {\n  toast as _toast,\n  type ToastOptions,\n  type UpdateOptions,\n} from \"react-toastify\";\n\nimport { copyStringToClipboard } from \"src/utils/clipboard\";\n\ntype ToastType = \"success\" | \"error\" | \"warning\" | \"info\" | \"loading\" | \"none\";\n\nconst iconType = (type: ToastType): string => {\n  switch (type) {\n    case \"success\":\n      return \"text-success icon-check-outline\";\n    case \"error\":\n      return \"text-danger icon-error-outline\";\n    case \"warning\":\n      return \"text-warning icon-warning-outline\";\n    case \"info\":\n      return \"text-info icon-info-outline\";\n    case \"loading\":\n      return \"text-muted icon-spinner spin\";\n    case \"none\":\n      return null;\n    default:\n      return \"text-muted icon-alert\";\n  }\n};\n\nconst ToastIcon = ({ type }) => {\n  return type ? (\n    <div className=\"toast__icon\">\n      <span className={iconType(type)} />\n    </div>\n  ) : null;\n};\n\nexport type ToastProps = {\n  title: ReactNode;\n  message: ReactNode;\n  type: ToastType;\n  copyError?: boolean;\n  bordered?: boolean;\n};\n\nexport const Toast: FC<ToastProps> = ({\n  title,\n  message,\n  type,\n  copyError = false,\n  bordered = false,\n}) => (\n  <div className={cx(\"toast\", { \"toast--bordered\": bordered })}>\n    <ToastIcon type={type} />\n    <div className=\"toast__body\">\n      {title ? <div className=\"toast__title\">{title}</div> : null}\n      {message ? (\n        <div className=\"toast__message\">\n          {message}\n          {type === \"error\" && copyError ? (\n            <>\n              <br />\n              <br />\n              <a\n                onClick={() =>\n                  typeof message === \"string\" || typeof message === \"number\"\n                    ? void copyStringToClipboard(message)\n                    : void 0\n                }\n              >\n                Copy to clipboard\n              </a>\n            </>\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  </div>\n);\n\ntype ToastFunction = (\n  title: ReactNode,\n  message: ReactNode,\n  copyError?: boolean,\n  containerId?: string,\n  args?: Record<string, unknown>\n) => React.ReactText;\n\nexport interface IToast {\n  (\n    type: ToastType,\n    title: ReactNode,\n    message: ReactNode,\n    copyError?: boolean,\n    containerId?: string,\n    args?: Partial<ToastOptions>\n  ): React.ReactText;\n}\n\ntype Toasts = {\n  [x in ToastType]: ToastFunction;\n};\n\ninterface ToastMethods {\n  update: (\n    toastId: React.ReactText,\n    updates: ToastProps,\n    options?: UpdateOptions\n  ) => void;\n  dismiss: (id?: string | number | undefined) => false | void;\n}\n\nexport const toast: IToast & Toasts & ToastMethods = (\n  type,\n  title,\n  message,\n  copyError = true,\n  containerId = \"_GLOBAL_\",\n  args = {}\n): React.ReactText => {\n  if (type === \"loading\") {\n    args.autoClose ??= false;\n  }\n\n  return _toast(() => <Toast {...{ type, title, message, copyError }} />, {\n    containerId,\n    ...args,\n  });\n};\n\ntoast.success = (...args) => toast(\"success\", ...args);\ntoast.error = (...args) => toast(\"error\", ...args);\ntoast.warning = (...args) => toast(\"warning\", ...args);\ntoast.info = (...args) => toast(\"info\", ...args);\ntoast.loading = (...args) => toast(\"loading\", ...args);\ntoast.none = (...args) => toast(\"none\", ...args);\ntoast.update = (toastId, updates, options) => {\n  options.render = <Toast {...updates} />;\n  _toast.update(toastId, options);\n};\ntoast.dismiss = (...args) => _toast.dismiss(...args);\n","import React from \"react\";\nimport cx from \"classnames\";\nimport {\n  Slide,\n  ToastContainer as ToastifyContainer,\n  type ToastContainerProps,\n} from \"react-toastify\";\n\ntype ExtraProps = {\n  bordered?: boolean;\n  shadow?: \"sm\" | \"md\" | \"lg\";\n};\n\nexport const ToastContainer = ({\n  position = \"bottom-right\",\n  autoClose = 5000,\n  draggable = false,\n  hideProgressBar = true,\n  containerId = \"_GLOBAL_\",\n  transition = Slide,\n  bordered,\n  shadow = \"lg\",\n  bodyClassName,\n  toastClassName,\n  ...props\n}: ToastContainerProps & ExtraProps): JSX.Element => (\n  <ToastifyContainer\n    transition={transition}\n    position={position}\n    autoClose={autoClose}\n    draggable={draggable}\n    hideProgressBar={hideProgressBar}\n    containerId={containerId}\n    {...props}\n    closeButton={false}\n    bodyClassName={\n      typeof bodyClassName === \"function\"\n        ? bodyClassName\n        : cx({ [bodyClassName]: bodyClassName, \"toast--bordered\": bordered })\n    }\n    toastClassName={\n      typeof toastClassName === \"function\"\n        ? toastClassName\n        : cx({\n            [toastClassName]: toastClassName,\n            [`toast--shadow-${shadow}`]: shadow !== \"lg\",\n          })\n    }\n    style={{\n      width: \"unset\",\n    }}\n  />\n);\n","import React from \"react\";\n\nexport const Footer = (): JSX.Element => (\n  <footer className=\"footer\">\n    <div className=\"footer__links\">\n      <ul className=\"list list--inline\">\n        <li>\n          <a\n            href=\"http://www.cisco.com/cisco/web/siteassets/contacts/index.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Contacts\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://secure.opinionlab.com/ccc01/o.asp?id=jBjOhqOJ\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Feedback\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.cisco.com/c/en/us/about/help.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Help\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"http://www.cisco.com/c/en/us/about/sitemap.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Site Map\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.cisco.com/c/en/us/about/legal/terms-conditions.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Terms & Conditions\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.cisco.com/c/en/us/about/legal/privacy-full.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Privacy Statement\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.cisco.com/c/en/us/about/legal/privacy-full.html#cookies\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Cookie Policy\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.cisco.com/c/en/us/about/legal/trademarks.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Trademarks\n          </a>\n        </li>\n      </ul>\n    </div>\n  </footer>\n);\n","import React, { FC } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype HeaderProps = React.PropsWithChildren<{\n  fluid?: boolean;\n}> &\n  React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n\nexport const Header: FC<HeaderProps> = ({\n  children,\n  fluid = false,\n  ...props\n}) => (\n  <header className=\"header\" {...props}>\n    <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\n      <div className=\"header-panels\">{children}</div>\n    </div>\n  </header>\n);\n\ntype HeaderPanelProps = React.PropsWithChildren<{\n  center?: boolean;\n  right?: boolean;\n  className?: string;\n}> &\n  React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\nexport const HeaderPanel: FC<HeaderPanelProps> = ({\n  children,\n  center = false,\n  right = false,\n  className = null,\n  ...props\n}) => (\n  <div\n    className={`header-panel${ac(center, \"header-panel--center\")}${ac(\n      right,\n      \"header-panel--right\"\n    )}${ac(className)}`}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\ntype HeaderTitleProps = {\n  icon?: boolean | string;\n  link?: string;\n  title: string;\n} & HeaderPanelProps;\n\nexport const HeaderTitle: FC<HeaderTitleProps> = ({\n  icon = true,\n  link = null,\n  title,\n  ...props\n}) => (\n  <HeaderPanel {...props}>\n    {icon ? (\n      <a\n        className=\"header__logo\"\n        href={link || \"http://www.cisco.com\"}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <span\n          className={typeof icon === \"string\" ? `icon-${icon}` : \"icon-cisco\"}\n        />\n      </a>\n    ) : null}\n    <div className=\"header__title\">{title}</div>\n  </HeaderPanel>\n);\n","import React, { forwardRef, type FC, type HTMLProps } from \"react\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { appendClass as ac } from \"src/utils\";\n\nconst Wrapper = <div className=\"responsive-table\" />;\n\nexport type GenericTableProps = {\n  outerWrap?: boolean;\n  lined?: boolean;\n  bordered?: boolean;\n  striped?: boolean;\n  selectable?: boolean;\n  fixed?: boolean;\n  wrapped?: boolean;\n  compressed?: boolean;\n  loose?: boolean;\n} & Partial<HTMLProps<HTMLTableElement>>;\n\nexport const GenericTable: FC<GenericTableProps> = forwardRef<\n  HTMLTableElement,\n  GenericTableProps\n>(\n  (\n    {\n      outerWrap = true,\n      lined = false,\n      bordered = false,\n      striped = false,\n      selectable = false,\n      fixed = false,\n      wrapped = false,\n      compressed = false,\n      loose = false,\n      className = null,\n      ...props\n    },\n    forwardedRef\n  ) => (\n    <ConditionalWrapper condition={outerWrap} wrapper={Wrapper}>\n      <table\n        className={`table${ac(lined, \"table--lined\")}${ac(\n          bordered,\n          \"table--bordered\"\n        )}${ac(striped, \"table--striped\")}${ac(\n          selectable,\n          \"table--selectable\"\n        )}${ac(fixed, \"table--fixed\")}${ac(wrapped, \"table--wrapped\")}${ac(\n          compressed,\n          \"table--compressed\"\n        )}${ac(loose, \"table--loose\")}${ac(className)}`}\n        {...props}\n        ref={forwardedRef}\n      />\n    </ConditionalWrapper>\n  )\n);\n","import React, { ReactNode } from \"react\";\n\ntype IPaginationContext = {\n  active: number;\n  beginAt: number;\n  changePage: (e, position: number) => void;\n  firstAndLast: boolean;\n  icons: boolean;\n  next: ReactNode;\n  perPage: number;\n  position: number;\n  prev: ReactNode;\n  total: number;\n};\n\nexport const PaginationContext = React.createContext<IPaginationContext>(null);\n","import React, { FC, ReactNode } from \"react\";\n\nimport { PaginationContext } from \"./PaginationContext\";\n\ntype ButtonProps = {\n  active?: boolean;\n  content: ReactNode;\n  disabled?: boolean;\n  position: number;\n};\n\nconst Button: FC<ButtonProps> = ({\n  content,\n  position,\n  active = false,\n  disabled = false,\n}) => (\n  <PaginationContext.Consumer>\n    {({ changePage }) => (\n      <li className={active ? \"active\" : \"\"}>\n        <a\n          className={disabled ? \"disabled\" : \"\"}\n          onClick={(e) => changePage(e, position)}\n        >\n          {content}\n        </a>\n      </li>\n    )}\n  </PaginationContext.Consumer>\n);\n\nconst FirstPrev = (): JSX.Element => {\n  const { perPage, firstAndLast, position, icons, prev, beginAt } =\n    React.useContext(PaginationContext);\n  const disabled = position < perPage + beginAt;\n\n  const r: JSX.Element[] = [];\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-left-double\" />}\n        disabled={disabled}\n        key=\"first-page\"\n        position={beginAt}\n      />\n    );\n\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-left\" /> : prev}\n      disabled={disabled}\n      key=\"previous-page\"\n      position={position - perPage}\n    />\n  );\n\n  return <>{r}</>;\n};\n\nconst NextLast = (): JSX.Element => {\n  const { beginAt, perPage, total, firstAndLast, position, icons, next } =\n    React.useContext(PaginationContext);\n  const pages = Math.floor(total / perPage) + 1;\n  const disabled = position > total - perPage + beginAt;\n\n  const r: JSX.Element[] = [];\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-right\" /> : next}\n      disabled={disabled}\n      key=\"next-page\"\n      position={position + perPage}\n    />\n  );\n\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-right-double\" />}\n        disabled={disabled}\n        key=\"last-page\"\n        position={(pages - 1) * perPage + beginAt}\n      />\n    );\n\n  return <>{r}</>;\n};\n\ntype PagesProps = {\n  start: number;\n  finish: number;\n};\n\nconst Pages: FC<PagesProps> = ({ start, finish }) => (\n  <PaginationContext.Consumer>\n    {({ perPage, active, beginAt }) =>\n      [...Array(finish - start + 1)].map((v, i) => {\n        const current = start + i;\n        return (\n          <Button\n            active={active === current}\n            content={`${current}`}\n            key={`${current}-page`}\n            position={(current - 1) * perPage + beginAt}\n          />\n        );\n      })\n    }\n  </PaginationContext.Consumer>\n);\n\nexport type PaginationProps = {\n  size?: \"small\" | \"default\" | \"large\";\n  rounded?: boolean;\n  icons?: boolean;\n  next?: ReactNode;\n  prev?: ReactNode;\n  position: number;\n  perPage?: number;\n  total: number;\n  onPageChange: (e, position: number) => void;\n  firstAndLast?: boolean;\n  beginAt?: number;\n  className?: string;\n};\n\nexport const Pagination: FC<PaginationProps> = ({\n  beginAt = 1,\n  rounded = false,\n  firstAndLast = true,\n  icons = false,\n  next = \"Next\",\n  perPage = 1,\n  prev = \"Previous\",\n  size = \"default\",\n  className = null,\n  position,\n  total,\n  onPageChange,\n  ...rest\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const active = Math.floor(position / perPage) + 1;\n\n  const changePage = (e, newPosition) => {\n    if (typeof onPageChange === \"function\") onPageChange(e, newPosition);\n  };\n\n  return (\n    <PaginationContext.Provider\n      value={{\n        active,\n        beginAt,\n        changePage,\n        firstAndLast,\n        icons,\n        next,\n        perPage,\n        position,\n        prev,\n        total,\n      }}\n    >\n      <ul\n        className={`pagination${\n          size !== \"default\" ? ` pagination--${size}` : \"\"\n        }${rounded ? \" pagination--rounded\" : \"\"}${\n          className ? ` ${className}` : \"\"\n        }`}\n        {...rest}\n      >\n        <FirstPrev />\n        {active < 4 || pages === 4 ? (\n          <>\n            <Pages start={1} finish={Math.min(pages, 4)} />\n            {pages > 4 ? (\n              <>\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : null}\n          </>\n        ) : (\n          <>\n            <Button\n              active={active === beginAt}\n              content=\"1\"\n              key=\"1-page\"\n              position={beginAt}\n            />\n            <li>\n              <span className=\"icon-more\" />\n            </li>\n            {active < pages - 2 ? (\n              <>\n                <Pages start={active - 1} finish={active + 1} />\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  active={active === pages}\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : (\n              <Pages start={pages - 3} finish={pages} />\n            )}\n          </>\n        )}\n        <NextLast />\n      </ul>\n    </PaginationContext.Provider>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\n\nimport { Dropdown, MenuElement } from \"src/Dropdown\";\nimport { Pagination } from \"src/Pagination\";\n\ntype DefaultTablePaginationProps = {\n  total: number;\n  position: number;\n  onPageChange: (e, position: number) => void;\n  onPerPageChange: (value: number) => void;\n  perPageUp?: boolean;\n  paginationProps?: {\n    size?: \"small\" | \"default\" | \"large\";\n    rounded?: boolean;\n    icons?: boolean;\n    next?: ReactNode;\n    prev?: ReactNode;\n    firstAndLast?: boolean;\n  };\n};\n\nexport const DefaultTablePagination: FC<DefaultTablePaginationProps> = ({\n  perPageUp = false,\n  paginationProps = {},\n  total,\n  position,\n  onPageChange,\n  onPerPageChange,\n}) => {\n  const [perPage, setPerPage] = React.useState<number>(50);\n\n  React.useEffect(() => {\n    if (typeof onPerPageChange === \"function\") onPerPageChange(perPage);\n  }, [perPage, onPerPageChange]);\n\n  return (\n    <div className=\"flex-middle\">\n      <span className=\"qtr-margin-right\">Page:</span>\n      <Pagination\n        firstAndLast\n        icons\n        perPage={perPage}\n        total={total}\n        position={position}\n        onPageChange={onPageChange}\n        beginAt={0}\n        className=\"no-margin-top\"\n        {...paginationProps}\n      />\n      <span className=\"text-muted qtr-margin-left qtr-margin-right\">|</span>\n      <span className=\"qtr-margin-right\">Per page:</span>\n      <Dropdown\n        label={<a>{perPage}</a>}\n        alwaysClose\n        placement={perPageUp ? \"top\" : undefined}\n      >\n        {[10, 25, 50, 100, 250, 500].map((v) => (\n          <MenuElement\n            onClick={() => setPerPage(v)}\n            key={v}\n            selected={v === perPage}\n          >\n            {v}\n          </MenuElement>\n        ))}\n      </Dropdown>\n    </div>\n  );\n};\n","import React, { FC, ReactNode, forwardRef } from \"react\";\n\nimport { appendClass } from \"src/utils\";\n\nimport { DefaultTablePagination } from \"./DefaultTablePagination\";\nimport { GenericTable, GenericTableProps } from \"./GenericTable\";\n\nconst asArray = (v: unknown) => (Array.isArray(v) ? v : [v]);\n\ntype PaginationLocation =\n  | \"top-left\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n  | \"top-right\";\n\ntype TableProps = {\n  pagination?: FC<any> | React.ComponentClass<any> | string;\n  paginationLocation?: PaginationLocation;\n  paginationProps?: {\n    size?: \"small\" | \"default\" | \"large\";\n    rounded?: boolean;\n    icons?: boolean;\n    next?: ReactNode;\n    prev?: ReactNode;\n    firstAndLast?: boolean;\n  };\n  data?: any[][];\n  children?: ReactNode;\n  start?: number;\n} & GenericTableProps;\n\nexport const Table: FC<TableProps> = forwardRef<HTMLTableElement, TableProps>(\n  (\n    {\n      pagination = DefaultTablePagination,\n      paginationLocation = \"bottom-right\",\n      paginationProps = {\n        icons: true,\n        firstAndLast: true,\n      },\n      data = null,\n      children = null,\n      start = 1,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    const [position, setPosition] = React.useState(\n      typeof start === \"number\" ? start : 0\n    );\n    const [perPage, setPerPage] = React.useState(50);\n    const tbody = React.useMemo(\n      () =>\n        children\n          ? asArray(children).find((child) => child.type === \"tbody\")\n          : null,\n      [children]\n    );\n    const thead = React.useMemo(\n      () =>\n        children\n          ? asArray(children).find((child) => child.type === \"thead\")\n          : null,\n      [children]\n    );\n    const total = React.useMemo(\n      () => (data ? data.length : asArray(tbody.props.children).length) || 0,\n      [data, tbody]\n    );\n    React.useEffect(() => setPosition(0), [data, tbody]);\n\n    return (\n      <>\n        {Boolean(paginationLocation.includes(\"top-\")) && (\n          <div\n            className={`flex base-margin-bottom${appendClass(\n              paginationLocation === \"top-right\",\n              \"flex-right\"\n            )}`}\n          >\n            {React.createElement(pagination, {\n              total,\n              position,\n              onPageChange: (_, p) => setPosition(p),\n              onPerPageChange: (p) => setPerPage(p),\n              paginationProps,\n            })}\n          </div>\n        )}\n        <GenericTable {...props} ref={forwardedRef}>\n          {thead}\n          <tbody>\n            {data\n              ? data.slice(position, position + perPage).map((row, rid) => (\n                  <tr key={rid}>\n                    {row.map((col, cid) => (\n                      <td key={cid}>{col}</td>\n                    ))}\n                  </tr>\n                ))\n              : asArray(tbody.props.children).slice(\n                  position,\n                  position + perPage\n                )}\n          </tbody>\n        </GenericTable>\n        {Boolean(paginationLocation.includes(\"bottom-\")) && (\n          <div\n            className={`flex base-margin-top${appendClass(\n              paginationLocation === \"bottom-right\",\n              \"flex-right\"\n            )}`}\n          >\n            {React.createElement(pagination, {\n              total,\n              position,\n              onPageChange: (_, p) => setPosition(p),\n              onPerPageChange: (p) => setPerPage(p),\n              perPageUp: true,\n              paginationProps,\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n);\n","import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\n\nimport \"../../css/checkbox.css\";\n\ntype CheckboxProps = {\n  inline?: boolean;\n  asFormGroup?: boolean;\n  children?: ReactNode;\n  spacing?: \"compressed\" | \"default\" | \"loose\";\n};\n\nexport const Checkbox = forwardRef<\n  HTMLInputElement,\n  CheckboxProps & HTMLProps<HTMLInputElement>\n>(\n  (\n    {\n      inline = false,\n      asFormGroup = true,\n      children = null,\n      spacing = null,\n      ...input\n    },\n    ref\n  ) => (\n    <ConditionalWrapper\n      condition={asFormGroup}\n      wrapper={\n        <div\n          className={cx(\"form-group\", {\n            \"form-group--inline\": inline,\n            [`form-group--${spacing}`]: spacing && spacing !== \"default\",\n          })}\n        />\n      }\n    >\n      <label className=\"checkbox\">\n        <input type=\"checkbox\" {...input} ref={ref} />\n        <span className=\"checkbox__input\" />\n        {children ? <span className=\"checkbox__label\">{children}</span> : null}\n      </label>\n    </ConditionalWrapper>\n  )\n);\n","import React, {\n  forwardRef,\n  useEffect,\n  useRef,\n  type ComponentProps,\n} from \"react\";\nimport { useMergeRefs } from \"use-callback-ref\";\n\nimport { Checkbox } from \"./Checkbox\";\n\nexport const IndeterminateCheckbox = forwardRef<\n  HTMLInputElement,\n  { indeterminate?: boolean } & ComponentProps<typeof Checkbox>\n>(({ indeterminate, ...rest }, fwd) => {\n  const ref = useRef<HTMLInputElement>(null!);\n\n  const refs = useMergeRefs([ref, fwd]);\n\n  useEffect(() => {\n    if (typeof indeterminate === \"boolean\") {\n      ref.current.indeterminate = !rest.checked && indeterminate;\n    }\n  }, [ref, indeterminate]);\n\n  return <Checkbox ref={refs} {...rest} />;\n});\n","import React, {\n  forwardRef,\n  type FC,\n  type HTMLProps,\n  type ReactNode,\n} from \"react\";\nimport cx from \"classnames\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\n\ninterface SwitchProps {\n  left?: ReactNode;\n  right?: ReactNode;\n  disabled?: boolean;\n  inline?: boolean;\n  spacing?: \"compressed\" | \"loose\";\n  asFormGroup?: boolean;\n  className?: string;\n  id?: string;\n  style?: React.CSSProperties;\n}\n\nexport const Switch: FC<SwitchProps & HTMLProps<HTMLInputElement>> = forwardRef(\n  (\n    {\n      left = null,\n      right = null,\n      disabled = false,\n      inline = false,\n      spacing = null,\n      asFormGroup = true,\n      className = null,\n      id = null,\n      style = null,\n      ...input\n    },\n    forwardedRef\n  ) => (\n    <ConditionalWrapper\n      condition={asFormGroup}\n      wrapper={\n        <div\n          className={cx(\"form-group\", {\n            \"form-group--inline\": inline,\n            [`form-group--${spacing}`]: spacing,\n            [className]: className,\n          })}\n          style={style}\n        />\n      }\n    >\n      <label\n        className={`switch${disabled ? \" disabled\" : \"\"}`}\n        htmlFor={id || input.name}\n      >\n        <input\n          type=\"checkbox\"\n          {...input}\n          id={id || input.name}\n          checked={input.checked}\n          ref={forwardedRef}\n        />\n        {left ? <span className=\"switch__label\">{left}</span> : null}\n        <span className=\"switch__input\" />\n        {right ? <span className=\"switch__label\">{right}</span> : null}\n      </label>\n    </ConditionalWrapper>\n  )\n);\n","import React, { FC } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype IconProps = {\n  icon: string;\n  size?: 10 | 12 | 14 | 16 | 18 | 20 | 24 | 28 | 32 | 36 | 48 | 64 | 96 | 128;\n  className?: string;\n} & React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLSpanElement>,\n  HTMLSpanElement\n>;\n\nexport const Icon: FC<IconProps> = ({\n  icon,\n  size = null,\n  className = null,\n  ...props\n}) => (\n  <span\n    className={`icon-${icon}${ac(className)}${ac(size, `icon-size-${size}`)}`}\n    {...props}\n  />\n);\n","import { useEffect, useLayoutEffect } from \"react\";\n\n// useLayoutEffect will show warning if used during ssr, e.g. with Next.js\n// useIsomorphicEffect removes it by replacing useLayoutEffect with useEffect during ssr\nexport const useIsomorphicEffect =\n  typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { useRef, useState } from \"react\";\n\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\n\nexport function usePortal(target?: HTMLElement | string): HTMLElement | null {\n  const [mounted, setMounted] = useState(false);\n  const ref = useRef<HTMLElement>();\n\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    ref.current = !target\n      ? document.createElement(\"div\")\n      : typeof target === \"string\"\n      ? document.querySelector(target)\n      : target;\n\n    if (!target) {\n      document.body.appendChild(ref.current);\n    }\n\n    return () => {\n      !target && document.body.removeChild(ref.current);\n    };\n  }, [target]);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return ref.current;\n}\n","import React, { ReactPortal } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { usePortal } from \"src/hooks/usePortal\";\n\nexport interface PortalProps {\n  /** Portal children, for example, modal or popover */\n  children: React.ReactNode;\n\n  /** Root element z-index property */\n  zIndex?: number;\n\n  /** Root element position property */\n  position?: string;\n\n  /** Element where portal should be rendered, by default new div element is created and appended to document.body */\n  target?: HTMLElement | string;\n\n  /** Root element className */\n  className?: string;\n}\n\nconst defaultProps: Partial<PortalProps> = {\n  zIndex: 1,\n  position: \"relative\",\n};\n\nexport function Portal(props: PortalProps): ReactPortal {\n  const { children, zIndex, target, className, position } = {\n    ...defaultProps,\n    ...props,\n  };\n\n  const portal = usePortal(target);\n\n  if (!portal) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={className} style={{ position: position as any, zIndex }}>\n      {children}\n    </div>,\n    portal\n  );\n}\n","import React, { type FC, type ReactNode } from \"react\";\n\ntype AccordionProps = {\n  children: ReactNode;\n  toggles?: boolean;\n  bordered?: boolean;\n};\n\nexport const Accordion: FC<AccordionProps> = ({\n  children,\n  toggles = false,\n  bordered = false,\n}): JSX.Element => {\n  return (\n    <ul className={`accordion${bordered ? \" accordion--bordered\" : \"\"}`}>\n      {React.Children.map(children, (child) =>\n        React.isValidElement(child)\n          ? React.cloneElement<any>(child, {\n              toggles,\n            })\n          : null\n      )}\n    </ul>\n  );\n};\n","import React, { type FC, type ReactNode } from \"react\";\n\nexport type AccordionElementProps = {\n  children: ReactNode;\n  defaultOpen?: boolean;\n  toggles?: boolean;\n  title: ReactNode;\n};\n\nexport const AccordionElement: FC<AccordionElementProps> = ({\n  children,\n  defaultOpen = false,\n  toggles = false,\n  title,\n}): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n\n  return (\n    <li className={isOpen ? \"active\" : \"\"}>\n      <a\n        className=\"accordion__title\"\n        onClick={() => setIsOpen((prev) => !prev)}\n      >\n        <span>{title}</span>\n        {toggles ? (\n          <span className=\"accordion__toggle icon-chevron-down\" />\n        ) : null}\n      </a>\n      <div className=\"accordion__content\">{children}</div>\n    </li>\n  );\n};\n","import React, { type FC, type PropsWithChildren, type ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype WrapperProps = {\n  children: ReactNode;\n  className?: string;\n};\n\nconst Wrapper: FC<WrapperProps> = ({ children, className = null }) => (\n  <span className={`badge-wrapper${ac(className)}`}>{children}</span>\n);\n\nexport type BadgeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype BadgeProps = PropsWithChildren<{\n  color?: BadgeColor;\n  size?: \"dot\" | \"tiny\" | \"small\" | \"default\" | \"large\";\n  className?: string;\n}>;\n\ninterface BadgeSizes {\n  Dot: FC<Omit<BadgeProps, \"size\">>;\n  Tiny: FC<Omit<BadgeProps, \"size\">>;\n  Small: FC<Omit<BadgeProps, \"size\">>;\n  Default: FC<Omit<BadgeProps, \"size\">>;\n  Large: FC<Omit<BadgeProps, \"size\">>;\n  Wrapper: FC<WrapperProps>;\n}\n\nexport const Badge: BadgeSizes & FC<BadgeProps> = ({\n  color = \"primary\",\n  size = \"default\",\n  children,\n  className = null,\n  ...props\n}) => (\n  <span\n    className={`${`badge badge--${color}`}${ac(\n      size !== \"default\",\n      `badge--${size}`\n    )}${ac(className)}`}\n    {...props}\n  >\n    {children}\n  </span>\n);\n\nBadge.Dot = (props) => <Badge {...props} size=\"dot\" />;\nBadge.Tiny = (props) => <Badge {...props} size=\"tiny\" />;\nBadge.Small = (props) => <Badge {...props} size=\"small\" />;\nBadge.Default = (props) => <Badge {...props} size=\"default\" />;\nBadge.Large = (props) => <Badge {...props} size=\"large\" />;\nBadge.Wrapper = Wrapper;\n\ntype WithBadgeProps = {\n  children: ReactNode;\n  badge: ReactNode;\n  wrapperClass?: string;\n};\n\nexport const WithBadge: FC<BadgeProps & WithBadgeProps> = ({\n  children,\n  badge,\n  wrapperClass = null,\n  ...props\n}) => (\n  <Badge.Wrapper className={wrapperClass}>\n    {children}\n    <Badge {...props}>{badge}</Badge>\n  </Badge.Wrapper>\n);\n","import { useEffect, useRef, type MutableRefObject } from \"react\";\n\n/**\n * a type-safe version of the `usePrevious` hook described here:\n * @see {@link https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state}\n */\nexport function usePrevious<T>(\n  value: T\n): MutableRefObject<T | undefined>[\"current\"] {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import React, {\n  forwardRef,\n  type FC,\n  type HTMLProps,\n  type MutableRefObject,\n  type ReactNode,\n} from \"react\";\nimport cx from \"classnames\";\n\nimport { ConditionalWrapper, DisplayIf } from \"src/Conditional\";\nimport { usePrevious } from \"src/hooks/usePrevious\";\n\ntype TabId = number | string;\n\nconst firstDefined = (...args) =>\n  args.find((el) => typeof el !== \"undefined\" && el !== null);\n\ninterface TabProps {\n  id: TabId;\n  active?: boolean;\n  title: ReactNode;\n  children: ReactNode;\n  className?: string;\n  activeClassName?: string;\n  unmountInactive?: boolean;\n}\n\nexport const Tab: FC<TabProps> = ({\n  active = false,\n  className = null,\n  activeClassName = null,\n  unmountInactive = false,\n  children,\n}) => {\n  if (!active && unmountInactive) return null;\n  return (\n    <div\n      className={cx(\n        \"tab-pane\",\n        {\n          active,\n          [activeClassName]: activeClassName && active,\n        },\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst isActive = (openTab, id: TabId, idx: number) =>\n  openTab === null ? idx === 0 : openTab === firstDefined(id, idx);\n\ninterface TabsHeaderProps {\n  tabsClassName?: string;\n  center?: boolean;\n  right?: boolean;\n  justified?: boolean;\n  embossed?: boolean;\n  bordered?: boolean;\n  vertical?: boolean;\n  sticky?: boolean;\n  inline?: boolean;\n  openTab?: TabId;\n  onTabChange: (tab: TabId) => void;\n  children: ReactNode;\n}\n\nexport const TabsHeader = forwardRef<HTMLUListElement, TabsHeaderProps>(\n  (\n    {\n      tabsClassName = null,\n      center = false,\n      right = false,\n      justified = false,\n      embossed = false,\n      bordered = false,\n      vertical = false,\n      inline = false,\n      openTab = null,\n      sticky = false,\n      onTabChange,\n      children,\n    },\n    ref\n  ) => (\n    <ul\n      ref={ref}\n      className={cx(\"tabs\", tabsClassName, {\n        \"tabs--centered\": center,\n        \"tabs--right\": right,\n        \"tabs--embossed\": embossed,\n        \"tabs--justified\": justified,\n        \"tabs--bordered\": bordered,\n        \"tabs--vertical\": vertical,\n        \"tabs--inline\": inline,\n      })}\n      style={sticky ? { position: \"sticky\", top: \"0\" } : {}}\n    >\n      {React.Children.map(children, (child, idx) => {\n        if (!React.isValidElement<TabProps>(child)) return child;\n\n        const {\n          props: { id, title },\n        } = child;\n        return (\n          <li\n            className={cx(\"tab\", {\n              active: isActive(openTab, id, idx),\n            })}\n            key={firstDefined(id, idx)}\n          >\n            <a onClick={() => onTabChange(firstDefined(id, idx))}>{title}</a>\n          </li>\n        );\n      })}\n    </ul>\n  )\n);\n\nTabsHeader.displayName = \"TabsHeader\";\n\ninterface ColumnSizes {\n  sm?: number;\n  md?: number;\n  lg?: number;\n  xl?: number;\n}\n\ntype ColumnSize = number | string | ColumnSizes;\n\ntype Column = {\n  columnWidth?: ColumnSize;\n} & React.HTMLProps<HTMLDivElement>;\n\ninterface TabsProps {\n  children: ReactNode;\n  defaultTab?: TabId;\n  tabsClassName?: string;\n  contentClassName?: string;\n  center?: boolean;\n  right?: boolean;\n  justified?: boolean;\n  embossed?: boolean;\n  bordered?: boolean;\n  vertical?: boolean;\n  leftColumn?: Column;\n  rightColumn?: Column;\n  rowProps?: HTMLProps<HTMLDivElement>;\n  sticky?: boolean;\n  inline?: boolean;\n  renderHeader?: (header: JSX.Element) => JSX.Element;\n  renderBody?: (body: JSX.Element, tab: TabId) => JSX.Element;\n  onTabChange?: (tab: TabId) => void;\n  beforeTabChange?: (\n    oldTab: TabId,\n    newTab: TabId\n  ) => boolean | Promise<boolean>;\n  bodyRef?: MutableRefObject<HTMLDivElement>;\n  headerRef?: MutableRefObject<HTMLUListElement>;\n}\n\nconst composeColumnSize = (columnWidth: ColumnSize): string => {\n  if (typeof columnWidth === \"string\" || typeof columnWidth === \"number\")\n    return `col-${columnWidth}`;\n\n  return Object.keys(columnWidth)\n    .map((k) => `col-${k}-${columnWidth[k]}`)\n    .join(\" \");\n};\n\nconst ColumnWrap: FC<Column> = ({ columnWidth, className, ...props }) => (\n  <div className={cx(composeColumnSize(columnWidth), className)} {...props} />\n);\n\nexport const Tabs: FC<TabsProps> = ({\n  defaultTab = null,\n  tabsClassName = null,\n  contentClassName = null,\n  center = false,\n  right = false,\n  justified = false,\n  embossed = false,\n  bordered = false,\n  vertical = false,\n  sticky = false,\n  inline = false,\n  renderHeader = (header) => header,\n  renderBody = (body) => body,\n  onTabChange = null,\n  leftColumn = { columnWidth: 3 },\n  rightColumn = { columnWidth: 9 },\n  rowProps: { className: rowClassName, ...rowProps } = {},\n  beforeTabChange = null,\n  children,\n  bodyRef,\n  headerRef,\n}) => {\n  const [openTab, setOpenTab] = React.useState(defaultTab || null);\n  const prevTab = usePrevious(openTab);\n\n  React.useEffect(() => {\n    setOpenTab(defaultTab);\n  }, [defaultTab]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (openTab === prevTab) return;\n      if (\n        typeof beforeTabChange === \"function\" &&\n        !(await beforeTabChange(prevTab, openTab))\n      )\n        setOpenTab(prevTab);\n      if (typeof onTabChange === \"function\") onTabChange(openTab);\n    })();\n  }, [openTab, prevTab]);\n\n  const header = (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={<ColumnWrap {...leftColumn} />}\n    >\n      {renderHeader(\n        <TabsHeader\n          tabsClassName={tabsClassName}\n          center={center}\n          right={right}\n          justified={justified}\n          embossed={embossed}\n          bordered={bordered}\n          vertical={vertical}\n          sticky={sticky}\n          inline={inline}\n          openTab={openTab}\n          onTabChange={setOpenTab}\n          ref={headerRef}\n        >\n          {children}\n        </TabsHeader>\n      )}\n    </ConditionalWrapper>\n  );\n\n  const body = (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={<ColumnWrap {...rightColumn} />}\n    >\n      {renderBody(\n        <div\n          className={`tab-content${\n            contentClassName ? ` ${contentClassName}` : \"\"\n          }`}\n          ref={bodyRef}\n        >\n          {React.Children.map(children, (child, idx) =>\n            React.isValidElement(child)\n              ? React.cloneElement<any>(child, {\n                  active: isActive(openTab, child.props.id, idx),\n                })\n              : child\n          )}\n        </div>,\n        openTab\n      )}\n    </ConditionalWrapper>\n  );\n\n  return (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={\n        <div\n          className={cx(\"row\", rowClassName)}\n          style={sticky ? { position: \"relative\" } : {}}\n          {...rowProps}\n        />\n      }\n    >\n      <DisplayIf condition={(vertical && !right) || !vertical}>\n        {header}\n      </DisplayIf>\n      {body}\n      <DisplayIf condition={vertical && right}>{header}</DisplayIf>\n    </ConditionalWrapper>\n  );\n};\n","import React, {\n  forwardRef,\n  type HTMLProps,\n  type PropsWithChildren,\n} from \"react\";\nimport cx from \"classnames\";\n\nexport const Section = forwardRef<\n  HTMLDivElement,\n  PropsWithChildren<HTMLProps<HTMLDivElement>>\n>(({ children, className = null, ...props }, ref) => (\n  <div className={cx(\"section\", className)} {...props} ref={ref}>\n    {children}\n  </div>\n));\n","import React, { type FC, type PropsWithChildren } from \"react\";\nimport cx from \"classnames\";\n\ninterface DisplayNoSizeProps {\n  as?: React.FunctionComponent<any> | React.ComponentClass<any> | string;\n  className?: string;\n}\n\ninterface DisplaySizeProps {\n  size: 0 | 1 | 2 | 3 | 4;\n}\n\nexport const Display: FC<\n  PropsWithChildren<DisplayNoSizeProps & DisplaySizeProps>\n> = ({ as = \"h1\", className = null, size, ...props }) =>\n  React.createElement(as, {\n    ...props,\n    className: cx(`display-${size}`, className),\n  });\n\nexport const Display0: FC<PropsWithChildren<DisplayNoSizeProps>> = (props) => (\n  <Display {...props} size={0} />\n);\nexport const Display1: FC<PropsWithChildren<DisplayNoSizeProps>> = (props) => (\n  <Display {...props} size={1} />\n);\nexport const Display2: FC<PropsWithChildren<DisplayNoSizeProps>> = (props) => (\n  <Display {...props} size={2} />\n);\nexport const Display3: FC<PropsWithChildren<DisplayNoSizeProps>> = (props) => (\n  <Display {...props} size={3} />\n);\nexport const Display4: FC<PropsWithChildren<DisplayNoSizeProps>> = (props) => (\n  <Display {...props} size={4} />\n);\n","import React, {\n  cloneElement,\n  isValidElement,\n  type FC,\n  type ReactNode,\n} from \"react\";\nimport cx from \"classnames\";\n\nimport { Icon } from \"src/Icon\";\n\nimport \"../../css/timeline.css\";\n\nexport type TimelineItemProps = {\n  icon?: ReactNode;\n  time?: string;\n  children: ReactNode;\n  className?: string;\n  contentClassName?: string;\n  simplified?: boolean;\n  header?: ReactNode;\n};\n\nexport const TimelineItem: FC<TimelineItemProps> = ({\n  icon = <Icon icon=\"circle\" />,\n  time = null,\n  className = null,\n  contentClassName = null,\n  simplified = false,\n  header = null,\n  children,\n}) => (\n  <div className={cx(\"timeline__item\", className)}>\n    <div className=\"timeline__icon\">{icon}</div>\n    {time && !simplified ? <div className=\"timeline__time\">{time}</div> : null}\n    <div className={cx(\"timeline__content\", contentClassName)}>\n      {header ? (\n        isValidElement(header) ? (\n          header\n        ) : (\n          <div className=\"timeline__header\">{header}</div>\n        )\n      ) : null}\n      {time && simplified ? <div className=\"timeline__time\">{time}</div> : null}\n      {children}\n    </div>\n  </div>\n);\n\nexport type TimelineProps = {\n  center?: boolean;\n  right?: boolean;\n  className?: string;\n  children: ReactNode;\n  simplified?: boolean;\n};\n\nexport const Timeline: FC<TimelineProps> = ({\n  center = false,\n  right = false,\n  className = null,\n  simplified = false,\n  children,\n}) => (\n  <div\n    className={cx(\"timeline\", {\n      \"timeline--centered\": center,\n      \"timeline--right\": right,\n      simplified,\n      [className]: className,\n    })}\n  >\n    {React.Children.map(children, (child) =>\n      isValidElement(child) ? cloneElement<any>(child, { simplified }) : child\n    )}\n  </div>\n);\n","import React, { forwardRef, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\ntype StepProps = {\n  icon?: ReactNode;\n  children: ReactNode;\n  visited?: boolean;\n  active?: boolean;\n  className?: string;\n  consequativeIdx?: number;\n};\n\nexport const Step = forwardRef<HTMLDivElement, StepProps>(\n  (\n    {\n      visited = false,\n      active = false,\n      className = null,\n      icon,\n      children,\n      consequativeIdx,\n    },\n    ref\n  ) => (\n    <div\n      className={cx(\"step\", {\n        visited,\n        active,\n        [className]: className,\n      })}\n      ref={ref}\n    >\n      <div className=\"step__icon\">{icon ?? consequativeIdx}</div>\n      <div className=\"step__label\">{children}</div>\n    </div>\n  )\n);\n","import React, { forwardRef, isValidElement, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\ntype StepsProps = {\n  size?: \"dot\" | \"small\" | \"default\" | \"large\";\n  color?: \"primary\" | \"secondary\" | \"success\" | \"dark\";\n  vertical?: boolean;\n  className?: string;\n  children: ReactNode;\n};\n\nexport const Steps = forwardRef<HTMLDivElement, StepsProps>(\n  (\n    {\n      size = \"default\",\n      color = \"primary\",\n      vertical = false,\n      className = null,\n      children,\n    },\n    ref\n  ) => (\n    <div\n      className={cx(\"steps\", `steps--${color}`, {\n        [`steps--${size}`]: size !== \"default\",\n        \"steps--vertical\": vertical,\n        [className]: className,\n      })}\n      ref={ref}\n    >\n      {React.Children.toArray(children)\n        .filter(Boolean)\n        .map((child, idx) =>\n          isValidElement(child)\n            ? React.cloneElement<any>(child, { consequativeIdx: idx + 1 })\n            : child\n        )}\n    </div>\n  )\n);\n","import React, { type FC, type PropsWithChildren } from \"react\";\n\nexport const VerticalCenter: FC<PropsWithChildren> = ({ children }) => (\n  <div\n    className=\"content-fluid\"\n    style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n  >\n    <main style={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}>\n      {children}\n    </main>\n  </div>\n);\n","import React, { type FC, type HTMLProps, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\nimport { InputHelpBlock } from \"src/InputHelp\";\n\ninterface TextareaProps extends React.HTMLAttributes<HTMLTextAreaElement> {\n  label?: ReactNode;\n  textareaClass?: string;\n  innerDivClass?: string;\n  inputRef?: React.Ref<HTMLTextAreaElement>;\n  className?: string;\n  inline?: boolean;\n  error?: ReactNode;\n}\n\nexport const Textarea: FC<TextareaProps & HTMLProps<HTMLTextAreaElement>> = ({\n  label = null,\n  textareaClass = null,\n  innerDivClass = null,\n  className = null,\n  id = null,\n  inputRef = null,\n  inline = false,\n  error = null,\n  ...textarea\n}) => {\n  return (\n    <div\n      className={cx(\"form-group\", {\n        \"form-group--inline\": inline,\n        \"form-group--error\": error,\n        [className]: className,\n      })}\n    >\n      <div className={cx(\"form-group__text\", innerDivClass)}>\n        <textarea className={textareaClass} ref={inputRef} {...textarea}>\n          {textarea.value}\n        </textarea>\n        {label ? <label htmlFor={id}>{label}</label> : null}\n      </div>\n      {error ? <InputHelpBlock text={error} /> : null}\n    </div>\n  );\n};\n","import React, {\n  forwardRef,\n  type ChangeEvent,\n  type FC,\n  type HTMLProps,\n  type ReactNode,\n} from \"react\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ninterface RadioProps extends Omit<HTMLProps<HTMLInputElement>, \"label\"> {\n  spacing?: \"compressed\" | \"regular\" | \"loose\" | \"nospacing\";\n  inline?: boolean;\n  label?: ReactNode;\n  className?: string;\n  id?: string;\n  divProps?: HTMLProps<HTMLDivElement>;\n}\n\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>(\n  (\n    {\n      spacing = null,\n      inline = false,\n      label = null,\n      className = null,\n      id,\n      divProps = {},\n      ...input\n    },\n    forwardedRef\n  ) => (\n    <div\n      className={`form-group${ac(inline, \"form-group--inline\")}${ac(\n        spacing,\n        `form-group--${spacing}`\n      )}${ac(className)}`}\n      {...divProps}\n    >\n      <label className=\"radio\" htmlFor={id || input.name}>\n        <input type=\"radio\" id={id} {...input} ref={forwardedRef} />\n        <span className=\"radio__input\" />\n        {label ? <span className=\"radio__label\">{label}</span> : null}\n      </label>\n    </div>\n  )\n);\n\ninterface RadioValue {\n  value: string;\n  label: ReactNode;\n}\n\ninterface RadiosProps {\n  values: RadioValue[];\n  value: string;\n  onChange: (value: string) => void;\n  name: string;\n}\n\nexport const Radios: FC<RadiosProps> = ({ values, value, onChange, name }) => {\n  const onRadioChange = useEvent((e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    if (e.target.checked) {\n      onChange(e.target.value);\n    }\n  });\n\n  return (\n    <>\n      {values.map((v, idx) => (\n        <Radio\n          id={v.value}\n          label={v.label}\n          key={v.value}\n          name={`${name}.${idx}`}\n          onChange={onRadioChange}\n          checked={value === v.value}\n          value={v.value}\n        />\n      ))}\n    </>\n  );\n};\n","import React, { HTMLProps, ReactNode, useEffect, useState } from \"react\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { InputHelpBaloon, InputHelpBlock } from \"src/InputHelp\";\nimport { Label, LabelColor } from \"src/Label\";\nimport { appendClass as ac } from \"src/utils\";\n\nimport \"../../css/chips.css\";\n\nexport type InputChipsProps = {\n  label?: ReactNode;\n  chipsColor?: LabelColor;\n  addOnBlur?: boolean;\n  allowRepeat?: boolean;\n  allowRegex?: string;\n  delimiters?: string | number[];\n  valueValidator?: (value: any) => boolean;\n  maxChips?: number;\n  baloon?: string;\n  className?: string;\n  id?: string;\n  error?: ReactNode;\n  value?: string[];\n  outerWrap?: boolean;\n  onChange?: (newValue: string[]) => void;\n  onChipRemove?: (idx: number) => void;\n  chipsOutside?: boolean;\n  noInput?: boolean;\n  renderChip?: (params: {\n    onDelete: () => unknown;\n    value: string;\n    idx: number;\n  }) => JSX.Element;\n};\n\nexport type FullInputChipsProps = InputChipsProps &\n  Omit<HTMLProps<HTMLInputElement>, \"id\" | \"value\" | \"onChange\" | \"label\">;\n\nconst emptyList: string[] = [];\n\nexport const InputChips = React.forwardRef<HTMLDivElement, FullInputChipsProps>(\n  (\n    {\n      chipsColor = \"light\",\n      addOnBlur = true,\n      delimiters = [13],\n      label = null,\n      allowRepeat = false,\n      allowRegex = null,\n      valueValidator = null,\n      maxChips = null,\n      baloon = null,\n      className = null,\n      id = null,\n      error = null,\n      value: initialValue = null,\n      onChange,\n      outerWrap = true,\n      chipsOutside = false,\n      renderChip = null,\n      onBlur = null,\n      onChipRemove = null,\n      onClick,\n      noInput,\n      ...input\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState<string[]>(emptyList);\n\n    useEffect(() => {\n      setValue((curr) => initialValue || curr || emptyList);\n    }, [initialValue]);\n\n    const addValue = useEvent((v) => {\n      if (typeof valueValidator === \"function\") {\n        if (!valueValidator(v)) return;\n      }\n      setValue((curr) => {\n        if (allowRepeat || !(curr || []).includes(v)) {\n          const n = (curr || []).concat(v);\n          if (typeof onChange === \"function\") onChange(n);\n          return n;\n        } else return curr;\n      });\n    });\n\n    const handleKeyDown = useEvent((event) => {\n      let d = delimiters;\n      if (typeof d === \"string\") {\n        const { map } = Array.prototype;\n        d = map.call(d, (ch) => ch.charCodeAt(0));\n      }\n\n      if (Array.isArray(d) && d.includes(event.keyCode)) {\n        addValue(event.target.value);\n        event.target.value = \"\";\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    });\n\n    const handleBlur = useEvent((event) => {\n      if (addOnBlur && event.target?.value) {\n        const { value } = event.target;\n        if (allowRegex && RegExp(allowRegex).test(value)) {\n          addValue(value);\n        } else if (!allowRegex) {\n          addValue(value);\n        }\n      }\n      event.target.value = \"\";\n      if (typeof onBlur === \"function\") onBlur(event);\n    });\n\n    const handleDelete = useEvent((idx) => {\n      setValue((curr) => {\n        curr.splice(idx, 1);\n        if (typeof onChange === \"function\") onChange(curr.slice());\n        return curr.slice();\n      });\n      if (typeof onChipRemove === \"function\") onChipRemove(idx);\n    });\n\n    const showInput =\n      (!maxChips ||\n        (maxChips && Array.isArray(value) && value.length < maxChips)) &&\n      !noInput;\n\n    return (\n      <ConditionalWrapper\n        wrapper={\n          <div\n            className={`form-group${ac(className)}${ac(\n              error,\n              \"form-group--error\"\n            )}`}\n            ref={ref}\n          ></div>\n        }\n        condition={outerWrap}\n      >\n        <div\n          className={`form-group__text chips${ac(\n            !outerWrap && className,\n            className\n          )}`}\n        >\n          {label ? (\n            <label htmlFor={id || input.name}>\n              {label}\n              {baloon ? <InputHelpBaloon baloon={baloon} /> : null}\n            </label>\n          ) : null}\n          {chipsOutside && Array.isArray(value) && value.length ? (\n            <span className=\"chips-outer qtr-margin-bottom\">\n              <span className=\"chips-inner\">\n                {value.map((v, i) =>\n                  renderChip ? (\n                    renderChip({\n                      value: v,\n                      idx: i,\n                      onDelete: () => handleDelete(i),\n                    })\n                  ) : (\n                    <Label\n                      removable\n                      onRemove={() => handleDelete(i)}\n                      color={chipsColor}\n                      size=\"small\"\n                      key={`${v}-${i}`}\n                      className=\"no-margin-bottom\"\n                    >\n                      {v}\n                    </Label>\n                  )\n                )}\n              </span>\n            </span>\n          ) : null}\n          <div\n            className={`input ${ac(!showInput, \"dbl-padding-right\")}`}\n            onClick={onClick}\n          >\n            {!chipsOutside && Array.isArray(value) && value.length ? (\n              <span className=\"chips-outer\">\n                <span className=\"chips-inner\">\n                  {value.map((v, i) =>\n                    renderChip ? (\n                      renderChip({\n                        value: v,\n                        idx: i,\n                        onDelete: () => handleDelete(i),\n                      })\n                    ) : (\n                      <Label\n                        removable\n                        onRemove={(e: MouseEvent) => {\n                          e.stopPropagation();\n                          e.preventDefault();\n                          handleDelete(i);\n                        }}\n                        color={chipsColor}\n                        size=\"small\"\n                        key={`${v}-${i}`}\n                        className=\"no-margin-bottom\"\n                      >\n                        {v}\n                      </Label>\n                    )\n                  )}\n                </span>\n              </span>\n            ) : null}\n            {showInput ? (\n              <input\n                type=\"text\"\n                onKeyDown={handleKeyDown}\n                onBlur={handleBlur}\n                id={id || input.name}\n                {...input}\n              />\n            ) : null}\n          </div>\n        </div>\n        {error ? <InputHelpBlock text={error} /> : null}\n      </ConditionalWrapper>\n    );\n  }\n);\n","import React, {\n  forwardRef,\n  isValidElement,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ChangeEvent,\n  type FC,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactElement,\n  type ReactHTMLElement,\n  type ReactNode,\n} from \"react\";\nimport useEvent from \"react-use-event-hook\";\nimport { useMergeRefs } from \"use-callback-ref\";\n\nimport { InputChips } from \"src/InputChips\";\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport { appendClass as ac } from \"src/utils\";\n\nimport type { FullInputChipsProps } from \"../InputChips\";\n\nfunction isOption(\n  element: ReactElement<unknown>\n): element is ReactHTMLElement<HTMLOptionElement> {\n  return element.type === \"option\";\n}\n\nfunction isOptGroup(\n  element: ReactElement<unknown>\n): element is ReactHTMLElement<HTMLOptGroupElement> {\n  return element.type === \"optgroup\";\n}\n\nconst SelectChildren = ({ children, handleOptionClick, isSelected }) =>\n  React.Children.map(children, (child, idx) => {\n    if (!isValidElement(child)) return child;\n\n    if (isOption(child))\n      return (\n        <a\n          key={idx}\n          onClick={(e) => handleOptionClick(e, child.props.value)}\n          className={`${ac(isSelected(child.props.value), \"selected\")}${ac(\n            child.props.disabled,\n            \"disabled\"\n          )}`}\n        >\n          {child.props.children}\n        </a>\n      );\n\n    if (isOptGroup(child))\n      return (\n        <div key={idx} className=\"dropdown__group\">\n          <div className=\"dropdown__group-header\">{child.props.label}</div>\n          <SelectChildren\n            handleOptionClick={handleOptionClick}\n            isSelected={isSelected}\n          >\n            {child.props.children}\n          </SelectChildren>\n        </div>\n      );\n\n    return child;\n  });\n\ntype Option = {\n  label: string;\n  value: string;\n};\n\ntype EditableSelectProps = {\n  compressed?: boolean;\n  label?: ReactNode;\n  prompt?: string;\n  inline?: boolean;\n  editable?: boolean;\n  type?: \"number\" | \"text\";\n  error?: ReactNode;\n  multi?: boolean;\n  onChange?: (value) => void;\n  value?: any;\n  displayValues?: boolean;\n  disabled?: boolean;\n  divRef?: MutableRefObject<HTMLDivElement>;\n  options?: Option[];\n  onSelect?: (value: string) => void | (() => void);\n  onDeselect?: (value: string) => void | (() => void);\n};\n\ntype WantedChipsProps = Omit<\n  FullInputChipsProps,\n  \"type\" | \"label\" | \"onSelect\" | \"onDeselect\" | \"value\"\n>;\n\ntype FullEditableSelectProps = PropsWithChildren<\n  EditableSelectProps & Partial<WantedChipsProps>\n>;\n\ntype Display = {\n  display: ReactNode;\n  value: any;\n};\n\nconst collectDisplays = (children: ReactNode): Display[] => {\n  const t = [];\n  React.Children.forEach(children, (child) => {\n    if (!isValidElement(child)) return null;\n    if (isOption(child)) {\n      t.push({\n        display: child.props.children,\n        value: child.props.value,\n      });\n    }\n    if (isOptGroup(child)) t.push(collectDisplays(child.props.children));\n  });\n  return t.flat();\n};\n\nexport const EditableSelect: FC<FullEditableSelectProps> = forwardRef<\n  HTMLInputElement,\n  FullEditableSelectProps\n>(\n  (\n    {\n      compressed = false,\n      prompt = \"Select an option\",\n      inline = false,\n      type = \"text\",\n      children,\n      label = null,\n      error = null,\n      onChange = null,\n      value: initialValue = undefined,\n      editable = false,\n      multi = false,\n      displayValues = false,\n      disabled,\n      className,\n      divRef,\n      options,\n      onSelect = null,\n      onDeselect = null,\n      ...input\n    },\n    inputRef\n  ) => {\n    const [isOpen, setOpen] = useState<boolean>(false);\n    const [value, setValue] = useState(initialValue);\n    const ref = useRef<HTMLDivElement>(undefined);\n\n    const display = useMemo(() => collectDisplays(children), [children]);\n\n    const handleClick = useEvent((newState = true) => {\n      if (disabled) return;\n      setOpen(newState);\n    });\n\n    useEffect(() => {\n      if (isOpen) {\n        const onOutsideClick = (e: MouseEvent) => {\n          // ignore clicks on the component itself\n          if (!(e.target instanceof Node) || !ref?.current) return;\n          if (ref.current && ref.current.contains(e.target)) return;\n\n          if (ref.current && !ref.current.contains(e.target)) {\n            handleClick(false);\n          }\n        };\n\n        document.addEventListener(\"click\", onOutsideClick, true);\n        return () =>\n          document.removeEventListener(\"click\", onOutsideClick, true);\n      }\n    }, [isOpen, handleClick]);\n\n    const handleOptionClick = useEvent((_e, newValue) => {\n      if (multi) {\n        let added = true;\n        setValue((curr) => {\n          if (curr?.includes(newValue)) {\n            added = false;\n            return curr.filter((v) => v !== newValue);\n          } else return (curr || []).concat(newValue);\n        });\n        const r = (added ? onSelect : onDeselect)?.call(undefined, newValue);\n        if (typeof r === \"function\") r();\n      } else {\n        setValue(newValue);\n      }\n      if (!multi) handleClick(false);\n    });\n\n    const isSelected = (checkValue) =>\n      multi ? value?.includes(checkValue) : value === checkValue;\n\n    useEffect(() => {\n      setValue(initialValue);\n    }, [initialValue]);\n\n    useEffect(() => {\n      if (multi && initialValue && !Array.isArray(initialValue))\n        throw Error(\"Value must be an array if multi select is allowed.\");\n    }, [multi, initialValue]);\n\n    useEffect(() => {\n      if (typeof onChange === \"function\") onChange(value);\n    }, [value]);\n\n    return (\n      <div\n        className={`form-group dropdown${ac(\n          compressed,\n          \"input--compressed\"\n        )}${ac(isOpen, \"active\")}${ac(inline, \"form-group--inline\")}${ac(\n          error,\n          \"form-group--error\"\n        )}${ac(disabled, \"disabled\")}${ac(className)}`}\n        ref={useMergeRefs([ref, divRef])}\n      >\n        {multi ? (\n          <InputChips\n            className=\"select editable\"\n            label={label}\n            {...input}\n            placeholder={\n              !Array.isArray(value) || !value.length\n                ? input.placeholder || prompt\n                : \"\"\n            }\n            readOnly={!editable}\n            onClick={() => handleClick(true)}\n            onChange={() => void 0}\n            onChipRemove={(idx) => {\n              let val: any;\n              setValue((curr: any[]) => {\n                val = curr[idx];\n                return curr.filter((_v, i) => i !== idx);\n              });\n              if (typeof onDeselect === \"function\") onDeselect(val);\n            }}\n            value={\n              displayValues\n                ? value\n                : display\n                    .filter((d) => value?.includes(d.value))\n                    .map((d) => d.display)\n            }\n            noInput={\n              inline && !editable && Array.isArray(value) && value.length > 0\n            }\n            outerWrap={false}\n            ref={inputRef}\n          />\n        ) : (\n          <div\n            className=\"form-group__text select editable\"\n            onClick={() => handleClick(true)}\n          >\n            <input\n              type={type}\n              placeholder={input.placeholder || prompt}\n              autoComplete=\"off\"\n              readOnly={!editable}\n              {...input}\n              onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                if (!editable) return;\n                e.persist();\n                setValue(e.target.value);\n              }}\n              value={\n                editable\n                  ? value || \"\"\n                  : !displayValues\n                  ? display?.find((el) => el.value === value)?.display || \"\"\n                  : value\n              }\n              ref={inputRef}\n            />\n            {label ? <label htmlFor={input.id}>{label}</label> : null}\n          </div>\n        )}\n        <div className=\"dropdown__menu\">\n          <SelectChildren\n            handleOptionClick={handleOptionClick}\n            isSelected={isSelected}\n          >\n            {options\n              ? options.map((opt, idx) => (\n                  <option key={idx} value={opt.value}>\n                    {opt.value}\n                  </option>\n                ))\n              : children}\n          </SelectChildren>\n        </div>\n        {error ? <InputHelpBlock text={error} /> : null}\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport cx from \"classnames\";\nimport type {\n  GroupHeadingProps,\n  GroupProps,\n  MultiValueGenericProps,\n  MultiValueRemoveProps,\n} from \"react-select\";\n\nimport type { LabelColor } from \"src/Label\";\n\nexport const MultiValueContainer = (\n  props: MultiValueGenericProps<any>\n): JSX.Element => {\n  const color: LabelColor =\n    (props.selectProps as any).multiValueColor || \"primary\";\n  return (\n    <div\n      className={cx(\n        `label label--${color} label--small`,\n        props.innerProps?.className\n      )}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport const MultiValueLabel = (props: MultiValueGenericProps): JSX.Element => {\n  return <span>{props.children}</span>;\n};\n\nexport const MultiValueRemove = ({\n  innerProps: props,\n}: MultiValueRemoveProps): JSX.Element => {\n  return <span {...props} className=\"icon-close\" />;\n};\n\nexport function Group<Option = unknown, IsMulti extends boolean = boolean>({\n  className,\n  children,\n  Heading,\n  headingProps,\n  innerProps,\n  ...props\n}: GroupProps<Option, IsMulti>) {\n  return (\n    <div className={cx(\"dropdown__group\", className)} {...innerProps}>\n      <Heading {...props} id={headingProps.id}>\n        {headingProps.data.label}\n      </Heading>\n      {children}\n    </div>\n  );\n}\n\nexport function GroupHeading<\n  Option = unknown,\n  IsMulti extends boolean = boolean\n>({ className, children }: GroupHeadingProps<Option, IsMulti>) {\n  return (\n    <div className={cx(\"dropdown__group-header\", className)}>{children}</div>\n  );\n}\n","import React, { forwardRef, type ReactNode, type Ref } from \"react\";\nimport cx from \"classnames\";\nimport Select, {\n  type GroupBase,\n  type Props as SelectProps,\n} from \"react-select\";\nimport type SelectGeneric from \"react-select/dist/declarations/src/Select\";\n\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport type { LabelColor } from \"src/Label\";\n\nimport \"../../css/react-select.css\";\nimport sts from \"./Select.module.scss\";\nimport {\n  Group as GroupComponent,\n  GroupHeading,\n  MultiValueContainer,\n  MultiValueLabel,\n  MultiValueRemove,\n} from \"./components\";\n\ntype CUISelectProps = {\n  label?: ReactNode;\n  multiValueColor?: LabelColor;\n  error?: ReactNode | boolean;\n  inline?: boolean;\n};\n\nexport type ReactSelectProps<\n  Option,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> = CUISelectProps & SelectProps<Option, IsMulti, Group>;\n\nfunction UnrefedSelect<\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  {\n    label = null,\n    className,\n    error,\n    inline,\n    ...props\n  }: ReactSelectProps<Option, IsMulti, Group>,\n  ref: Ref<SelectGeneric<Option, IsMulti, Group>>\n): JSX.Element {\n  return (\n    <div\n      className={cx(\"form-group\", className, {\n        \"form-group--error\": error,\n        \"form-group--inline\": inline,\n        [sts.multi_select]: props.isMulti,\n      })}\n    >\n      <div className=\"form-group__text\">\n        {label && <label>{label}</label>}\n        <Select\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          components={{\n            MultiValueContainer,\n            MultiValueLabel,\n            MultiValueRemove,\n            Group: GroupComponent,\n            GroupHeading,\n          }}\n          {...props}\n          ref={ref}\n        />\n      </div>\n      {Boolean(error) && typeof error !== \"boolean\" ? (\n        <InputHelpBlock text={error} />\n      ) : null}\n    </div>\n  );\n}\n\nexport const ReactSelect = forwardRef(UnrefedSelect) as <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: ReactSelectProps<Option, IsMulti, Group> & {\n    ref?: React.ForwardedRef<SelectGeneric<Option, IsMulti, Group>>;\n  }\n) => ReturnType<typeof UnrefedSelect>;\n","import React, { forwardRef, type ReactNode, type Ref } from \"react\";\nimport cx from \"classnames\";\nimport CreatableSelect, { type CreatableProps } from \"react-select/creatable\";\nimport type SelectGeneric from \"react-select/dist/declarations/src/Select\";\nimport type { GroupBase } from \"react-select/dist/declarations/src/types\";\n\nimport { InputHelpBlock } from \"src/InputHelp\";\nimport type { LabelColor } from \"src/Label\";\n\nimport \"../../css/react-select.css\";\nimport sts from \"./Select.module.scss\";\nimport {\n  Group as GroupComponent,\n  GroupHeading,\n  MultiValueContainer,\n  MultiValueLabel,\n  MultiValueRemove,\n} from \"./components\";\n\ntype CUISelectProps = {\n  label?: ReactNode;\n  multiValueColor?: LabelColor;\n  error?: ReactNode | boolean;\n  inline?: boolean;\n};\n\nexport type CreatableReactSelectProps<\n  Option = unknown,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = CreatableProps<Option, IsMulti, Group> & CUISelectProps;\n\nfunction UnrefedSelect<\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  {\n    label = null,\n    className,\n    error,\n    inline,\n    ...props\n  }: CreatableReactSelectProps<Option, IsMulti, Group>,\n  ref: Ref<SelectGeneric<Option, IsMulti, Group>>\n): JSX.Element {\n  return (\n    <div\n      className={cx(\"form-group\", className, {\n        \"form-group--error\": error,\n        \"form-group--inline\": inline,\n        [sts.multi_select]: props.isMulti,\n      })}\n    >\n      <div className=\"form-group__text\">\n        {label && <label>{label}</label>}\n        <CreatableSelect\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          components={{\n            MultiValueContainer,\n            MultiValueLabel,\n            MultiValueRemove,\n            Group: GroupComponent,\n            GroupHeading,\n          }}\n          formatCreateLabel={(inputValue: string) => (\n            <>\n              {props.isMulti ? \"Add \" : \"Use \"}\n              <span className=\"text-bold\">{inputValue}</span>\n            </>\n          )}\n          {...props}\n          ref={ref}\n        />\n      </div>\n      {Boolean(error) && typeof error !== \"boolean\" ? (\n        <InputHelpBlock text={error} />\n      ) : null}\n    </div>\n  );\n}\n\nexport const CreatableReactSelect = forwardRef(UnrefedSelect) as <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: CreatableReactSelectProps<Option, IsMulti, Group> & {\n    ref?: React.ForwardedRef<SelectGeneric<Option, IsMulti, Group>>;\n  }\n) => ReturnType<typeof UnrefedSelect>;\n","import type { ReactNode } from \"react\";\nimport type { GroupBase, OptionsOrGroups } from \"react-select\";\n\nexport type Option<V = string> = { label?: ReactNode; value: V };\nexport type OptionGroup<O> = GroupBase<O>;\n\nexport function isGrouped<O extends { value: any }>(\n  v: O | OptionGroup<O>\n): v is OptionGroup<O> {\n  return \"options\" in v;\n}\n\nexport function findOption<V, O extends { value: V } = Option<V>>(\n  value: V,\n  options: readonly (O | OptionGroup<O>)[]\n): O {\n  let found: O;\n  for (const it of options) {\n    if (isGrouped<O>(it)) found = findOption<V, O>(value, it.options);\n    else found = it.value === value ? it : null;\n\n    if (found) return found;\n  }\n}\n\nexport function findOptions<V, O extends { value: V } = Option<V>>(\n  values: V[],\n  options: OptionsOrGroups<O, GroupBase<O>>\n): O[] {\n  const found: O[] = [];\n\n  if (!Array.isArray(values) || values.length <= 0) return found;\n\n  for (const v of values) {\n    const fv = findOption(v, options);\n    if (fv) found.push(fv);\n    else found.push({ value: v, label: v } as any);\n  }\n  return found;\n}\n","import React, { forwardRef, type FC, type HTMLProps } from \"react\";\nimport cx from \"classnames\";\n\nimport \"../../css/v-separator.css\";\n\ntype VSeparatorProps = {\n  size?: \"small\" | \"large\" | \"huge\" | \"default\";\n  compressed?: boolean;\n} & Omit<HTMLProps<HTMLDivElement>, \"size\">;\n\nexport const VSeparator: FC<VSeparatorProps> = forwardRef(\n  ({ size = \"default\", compressed = false, className = \"\", ...props }, ref) => (\n    <div\n      className={cx(\"v-separator\", {\n        [`v-separator--${size}`]: size !== \"default\",\n        [\"v-separator--compressed\"]: compressed,\n        [className]: className,\n      })}\n      {...props}\n      ref={ref}\n    />\n  )\n);\n","import React, { forwardRef, type ReactNode } from \"react\";\nimport cx from \"classnames\";\nimport RCSlider, { type SliderProps as RCSliderProps } from \"rc-slider\";\nimport type { SliderRef } from \"rc-slider/lib/Slider\";\n\nimport \"../../css/rc-slider.css\";\n\nexport type SliderProps = RCSliderProps & { label?: ReactNode };\n\nexport const Slider = forwardRef<SliderRef, SliderProps>(\n  ({ dots = true, label, className, ...props }, ref) => (\n    <div className={cx(\"form-group\", className)}>\n      <div className=\"form-group__text\">\n        {label && <label>{label}</label>}\n        <div className=\"half-padding-left half-padding-right base-padding-bottom\">\n          <RCSlider dots={dots} {...props} ref={ref} />\n        </div>\n      </div>\n    </div>\n  )\n);\n","export const base16Theme = {\n  scheme: \"monokai\",\n  author: \"Vitaly Kumov based on Cisco UI kit\",\n  base00: \"var(--cui-background-inactive)\",\n  base01: \"#f2f2f2\",\n  base02: \"#64bbe3\",\n  base03: \"#b6b9bb\",\n  base04: \"#39393b\",\n  base05: \"#58585b\",\n  base06: \"#626469\",\n  base07: \"#ffffff\",\n  base08: \"#14a792\",\n  base09: \"#14a792\",\n  base0A: \"#017cad\",\n  base0B: \"#6cc04a\",\n  base0C: \"#ffcc00\",\n  base0D: \"#7f7f86\",\n  base0E: \"#626469\",\n  base0F: \"#626469\",\n};\n","import React, { FC, HTMLProps, forwardRef } from \"react\";\n\nimport { appendClass } from \"src/utils\";\n\nimport \"../../css/kbd.css\";\n\nexport const Kbd: FC<HTMLProps<HTMLSpanElement>> = forwardRef<\n  HTMLSpanElement,\n  HTMLProps<HTMLSpanElement>\n>(({ children, className, ...props }, ref) => (\n  <span className={`kbd${appendClass(className)}`} ref={ref} {...props}>\n    {children}\n  </span>\n));\n","import React, { forwardRef, type HTMLProps } from \"react\";\nimport cx from \"classnames\";\n\ntype BlockquoteProps = {\n  cite?: string;\n  color?:\n    | \"primary\"\n    | \"secondary\"\n    | \"tertiary\"\n    | \"success\"\n    | \"info\"\n    | \"warning\"\n    | \"danger\"\n    | \"dark\"\n    | \"light\"\n    | \"warning-alt\";\n  align?: \"left\" | \"center\" | \"right\";\n  padding?: \"compressed\" | \"default\" | \"loose\";\n} & HTMLProps<HTMLQuoteElement>;\n\nexport const Blockquote = forwardRef<HTMLQuoteElement, BlockquoteProps>(\n  ({ className, cite, color, align, children, padding, ...props }, ref) => (\n    <blockquote\n      className={cx(\n        {\n          [`blockquote--${color}`]: color,\n          [`blockquote--${align}`]: align,\n          [`blockquote--${padding}`]: padding && padding !== \"default\",\n        },\n        className\n      )}\n      {...props}\n      ref={ref}\n    >\n      <p>{children}</p>\n      {cite ? <cite>{cite}</cite> : null}\n    </blockquote>\n  )\n);\n","import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\n\nimport { appendClass } from \"src/utils\";\n\nexport type GaugeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype GaugeProps = {\n  color?: GaugeColor;\n  size?: \"small\" | \"default\" | \"large\";\n  className?: string;\n  label?: ReactNode;\n  percentage: number;\n};\n\nexport const Gauge = forwardRef<\n  HTMLDivElement,\n  GaugeProps & Omit<HTMLProps<HTMLDivElement>, \"size\">\n>(\n  (\n    {\n      color = \"primary\",\n      size = \"default\",\n      className = null,\n      label,\n      percentage,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        className={`gauge-container${appendClass(className)}`}\n        {...props}\n        ref={ref}\n      >\n        <div\n          className={`gauge${appendClass(\n            size && size !== \"default\",\n            `gauge--${size}`\n          )}${appendClass(color, `gauge--${color}`)}`}\n          data-percentage={`${percentage}`}\n        >\n          <div className=\"gauge__circle\">\n            <div className=\"mask full\">\n              <div className=\"fill\"></div>\n            </div>\n            <div className=\"mask half\">\n              <div className=\"fill\"></div>\n              <div className=\"fill fix\"></div>\n            </div>\n          </div>\n          <div className=\"gauge__inset\">\n            <div className=\"gauge__percentage\">{percentage}</div>\n          </div>\n        </div>\n        {label ? <div className=\"gauge__label\">{label}</div> : null}\n      </div>\n    );\n  }\n);\n","import React, {\n  cloneElement,\n  forwardRef,\n  useMemo,\n  useRef,\n  useState,\n  type ComponentProps,\n  type FC,\n  type HTMLProps,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingPortal,\n  arrow,\n  flip,\n  offset,\n  shift,\n  useFloating,\n  useHover,\n  useInteractions,\n  useMergeRefs,\n  useRole,\n  type Placement,\n  type Side,\n} from \"@floating-ui/react\";\nimport { Transition } from \"react-transition-group\";\n\nimport { useFloatingContext } from \"src/FloatingProvider\";\n\nconst TooltipContent = forwardRef<HTMLDivElement, HTMLProps<HTMLDivElement>>(\n  function TooltipRefed({ className, children, ...props }, ref) {\n    return (\n      <div ref={ref} className=\"tooltip__wrapper\" {...props}>\n        <div className={className}>{children}</div>\n      </div>\n    );\n  }\n);\n\ntype UseTooltipReturn = ReturnType<typeof useFloating> & {\n  getFloatingProps: ReturnType<typeof useInteractions>[\"getFloatingProps\"];\n  show: boolean;\n  getReferenceProps: ReturnType<typeof useInteractions>[\"getReferenceProps\"];\n  arrowRef: MutableRefObject<any>;\n};\n\nexport function useTooltip(placement?: Placement): UseTooltipReturn {\n  const [show, setShow] = useState(false);\n  const arrowRef = useRef(null);\n  const fl = useFloating({\n    middleware: [\n      offset(6),\n      flip(),\n      shift({ padding: { left: 8, right: 8 } }),\n      arrow({ element: arrowRef }),\n    ],\n    open: show,\n    onOpenChange: setShow,\n    placement,\n  });\n\n  const role = useRole(fl.context, { role: \"tooltip\" });\n  const hover = useHover(fl.context, {\n    delay: {\n      open: 500,\n      close: 0,\n    },\n    move: false,\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    role,\n    hover,\n  ]);\n\n  return useMemo(\n    () => ({\n      ...fl,\n      getFloatingProps,\n      show,\n      getReferenceProps,\n      arrowRef,\n    }),\n    [getFloatingProps, show, getReferenceProps, arrowRef, fl]\n  );\n}\n\nexport const TooltipWrapper: FC<\n  PropsWithChildren<\n    Omit<ReturnType<typeof useTooltip>, \"getReferenceProps\" | \"reference\">\n  > & {\n    root?: ComponentProps<typeof FloatingPortal>[\"root\"];\n    portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  }\n> = ({\n  children,\n  x,\n  y,\n  show,\n  strategy,\n  getFloatingProps,\n  middlewareData,\n  arrowRef,\n  placement,\n  root: rootProvided,\n  portalId,\n  refs,\n}) => {\n  const { x: arrowX, y: arrowY } = middlewareData.arrow || { x: 0, y: 0 };\n  const floatingRef = useRef<any>(null);\n\n  const staticSide = {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\",\n  }[placement.split(\"-\")[0]] as Side;\n\n  const { root, id } = useFloatingContext({\n    root: rootProvided,\n    portalId,\n    fallbackPortalId: \"--cui-tooltip-portal\",\n  });\n  const ref = useMergeRefs([refs.setFloating, floatingRef]);\n\n  return (\n    <FloatingPortal root={root} id={id}>\n      <Transition\n        in={show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        nodeRef={floatingRef}\n      >\n        {(state) => (\n          <TooltipContent\n            ref={ref}\n            style={{\n              position: strategy,\n              top: y ?? 0,\n              left: x ?? 0,\n            }}\n            {...getFloatingProps({\n              className: `tooltip__body ${\n                state === \"exiting\" || state === \"exited\"\n                  ? \"tooltip--disappear\"\n                  : \"tooltip--appear\"\n              }`,\n            })}\n          >\n            {children}\n            <div\n              ref={arrowRef}\n              className=\"tooltip__arrow\"\n              style={{\n                left: arrowX != null ? `${arrowX}px` : \"\",\n                top: arrowY != null ? `${arrowY}px` : \"\",\n                right: \"\",\n                bottom: \"\",\n                [staticSide]: \"-4px\",\n              }}\n            />\n          </TooltipContent>\n        )}\n      </Transition>\n    </FloatingPortal>\n  );\n};\n\n// export { TooltipWrapper as Tooltip };\n\nexport type WithTooltipProps = {\n  children: JSX.Element;\n  tooltip: ReactNode;\n  placement?: Placement;\n};\n\nexport const WithTooltip: FC<WithTooltipProps> = forwardRef(\n  ({ children, tooltip, placement = \"top\", ...props }, forwardedRef) => {\n    const { getReferenceProps, refs, ...tt } = useTooltip(placement);\n\n    const ref = useMergeRefs([\n      refs.setReference,\n      forwardedRef,\n      (children as any).ref,\n    ]);\n\n    return (\n      <>\n        {cloneElement(\n          children,\n          getReferenceProps({ ref, ...children.props, ...props })\n        )}\n        <TooltipWrapper refs={refs} {...tt}>\n          {tooltip}\n        </TooltipWrapper>\n      </>\n    );\n  }\n);\n\nWithTooltip.displayName = \"WithTooltip\";\n","import React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useState,\n  type FC,\n  type HTMLProps,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactNode,\n  type Ref,\n  type RefCallback,\n} from \"react\";\nimport cx from \"classnames\";\n\nimport styles from \"./Segmented.module.scss\";\n\nexport type SegmentedOption<V> = {\n  label: ReactNode;\n  value: V;\n  disabled?: boolean;\n};\n\ntype ActiveProps = {\n  activeElement: HTMLDivElement | null;\n  value: any;\n  fullWidth?: boolean;\n  small: boolean;\n};\n\nconst Active: FC<ActiveProps> = ({\n  activeElement,\n  value,\n  fullWidth,\n  small,\n}) => {\n  const [coord, setCoord] = useState({ x: 0, y: 0, w: 0, h: 0 });\n\n  useEffect(() => {\n    if (!activeElement) return;\n\n    setCoord({\n      x: activeElement.offsetLeft - (small ? 2 : 4),\n      y: activeElement.offsetTop - (small ? 2 : 4),\n      w: activeElement.offsetWidth,\n      h: activeElement.offsetHeight,\n    });\n  }, [activeElement, value, fullWidth, small]);\n\n  if (!activeElement) return null;\n\n  return (\n    <span\n      className={styles.segmented_active}\n      style={{\n        width: `${coord.w}px`,\n        height: `${coord.h}px`,\n        transform:\n          coord.x > 0 || coord.y > 0\n            ? `translateX(${coord.x}px) translateY(${coord.y}px) translateZ(0px)`\n            : \"none\",\n      }}\n    />\n  );\n};\n\ntype OptionDisplayProps = {\n  value: any;\n  active: boolean;\n  disabled?: boolean;\n  activeRef: MutableRefObject<HTMLDivElement> | RefCallback<HTMLDivElement>;\n} & HTMLProps<HTMLInputElement>;\n\nconst OptionDisplay: FC<PropsWithChildren<OptionDisplayProps>> = ({\n  children,\n  value,\n  activeRef,\n  active,\n  className,\n  disabled,\n  id,\n  ...props\n}) => {\n  return (\n    <div\n      className={cx(styles.segmented_option_control, className, {\n        [styles.segmented_option_control_active]: active,\n        disabled,\n      })}\n      ref={active ? activeRef : null}\n    >\n      <input\n        type=\"radio\"\n        className={styles.segmented_option_control_input}\n        value={value}\n        id={`${id || props.name}-${value}`}\n        {...props}\n      />\n      <label\n        className={styles.segmented_option_control_label}\n        htmlFor={`${id || props.name}-${value}`}\n      >\n        {children}\n      </label>\n    </div>\n  );\n};\n\ntype Props<V> = {\n  options: SegmentedOption<V>[] | readonly SegmentedOption<V>[];\n  value: V;\n  label?: ReactNode;\n  inline?: boolean;\n  fullWidth?: boolean;\n  small?: boolean;\n} & HTMLProps<HTMLInputElement> &\n  Required<Pick<HTMLProps<HTMLInputElement>, \"name\">>;\n\nfunction UrefedSegmented<V extends string | number = string>(\n  {\n    options,\n    value,\n    label,\n    inline,\n    className,\n    fullWidth,\n    small,\n    ...props\n  }: Props<V>,\n  ref: Ref<HTMLDivElement>\n): JSX.Element {\n  const [el, setEl] = useState<HTMLDivElement | null>(null);\n  const activeRefCb: RefCallback<HTMLDivElement> = useCallback((node) => {\n    if (node !== null) {\n      setEl(node);\n    } else setEl(null);\n  }, []);\n\n  return (\n    <div\n      className={cx(\"form-group\", className, { \"form-group--inline\": inline })}\n    >\n      <div\n        className={cx(styles.form_group, {\n          [styles[\"form_group--full\"]]: fullWidth,\n          [styles.small]: small,\n        })}\n      >\n        {label ? <label>{label}</label> : null}\n        <div\n          className={cx(styles.segmented_root, {\n            [styles[\"segmented_root--full\"]]: fullWidth,\n          })}\n          ref={ref}\n        >\n          <Active\n            activeElement={el}\n            value={value}\n            fullWidth={fullWidth}\n            small={small}\n          />\n          {options.map((o) => (\n            <OptionDisplay\n              activeRef={activeRefCb}\n              active={value === o.value}\n              value={o.value}\n              key={o.value}\n              disabled={o.disabled}\n              {...props}\n            >\n              {o.label}\n            </OptionDisplay>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport type SegmentedControlProps<V> = Props<V> & {\n  ref?: React.ForwardedRef<HTMLDivElement>;\n};\n\nexport const SegmentedControl = forwardRef(UrefedSegmented) as <\n  V extends string | number = string\n>({\n  options,\n  value,\n  ...props\n}: SegmentedControlProps<V>) => ReturnType<typeof UrefedSegmented>;\n","import { useEffect, useState } from \"react\";\n\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\n\ntype UseLockedBodyOutput = [boolean, (locked: boolean) => void];\n\nexport function useLockedBody(\n  initialLocked = false,\n  rootId = \"___gatsby\" // Default to `___gatsby` to not introduce breaking change\n): UseLockedBodyOutput {\n  const [locked, setLocked] = useState(initialLocked);\n\n  // Do the side effect before render\n  useIsomorphicEffect(() => {\n    if (!locked) {\n      return;\n    }\n\n    // Save initial body style\n    const originalOverflow = document.body.style.overflow;\n    const originalPaddingRight = document.body.style.paddingRight;\n\n    // Lock body scroll\n    document.body.style.overflow = \"hidden\";\n\n    // Get the scrollBar width\n    const root = document.getElementById(rootId); // or root\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n\n    // Avoid width reflow\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow;\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight;\n      }\n    };\n  }, [locked]);\n\n  // Update state if initialValue changes\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialLocked]);\n\n  return [locked, setLocked];\n}\n","import React, { forwardRef, useEffect, useRef, type HTMLProps } from \"react\";\nimport { useMergeRefs, type offset } from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport type { TransitionStatus } from \"react-transition-group\";\n\nimport styles from \"./Popover.module.scss\";\n\nexport const GenericPopover = forwardRef<\n  HTMLDivElement,\n  HTMLProps<HTMLDivElement> & {\n    wrapperClassName?: string;\n    state: TransitionStatus;\n    offset?: Parameters<typeof offset>[0];\n  }\n>(function GenericPopoverRefed(\n  {\n    className,\n    children,\n    wrapperClassName,\n    state,\n    offset: offsetOptions,\n    ...props\n  },\n  ref\n) {\n  const ownRef = useRef<HTMLDivElement>(null);\n  const merged = useMergeRefs([ref, ownRef]);\n\n  useEffect(() => {\n    const r = ownRef.current;\n\n    if (r && offsetOptions && typeof offsetOptions !== \"function\")\n      r.style.setProperty(\n        \"--offset\",\n        `${\n          typeof offsetOptions === \"number\"\n            ? offsetOptions\n            : offsetOptions.mainAxis ?? 4\n        }px`\n      );\n\n    return () => {\n      if (r) r.style.setProperty(\"--offset\", \"4px\");\n    };\n  }, [offsetOptions]);\n\n  return (\n    <div\n      ref={merged}\n      className={cx(styles.wrapper, wrapperClassName, {\n        [styles.disappear]: state === \"exiting\" || state === \"exited\",\n      })}\n      {...props}\n    >\n      <div\n        className={cx(\n          \"panel panel--bordered panel--raised\",\n          styles.body,\n          className\n        )}\n        tabIndex={-1}\n      >\n        {children}\n      </div>\n    </div>\n  );\n});\n","import React, {\n  createContext,\n  useContext,\n  type FC,\n  type PropsWithChildren,\n  type ReactNode,\n} from \"react\";\n\ntype PopoverContextProps = {\n  setOverlayState: (show: boolean) => void;\n  setOverlay: (overlay: ReactNode) => void;\n};\n\nconst PopoverContext = createContext<PopoverContextProps>(null!);\n\nexport const PopoverProvider: FC<PropsWithChildren<PopoverContextProps>> = ({\n  children,\n  ...props\n}) => (\n  <PopoverContext.Provider value={props}>{children}</PopoverContext.Provider>\n);\n\nexport const usePopoverContext = () => useContext(PopoverContext);\n","import React, {\n  cloneElement,\n  createContext,\n  forwardRef,\n  useCallback,\n  useContext,\n  useImperativeHandle,\n  useRef,\n  useState,\n  type ComponentProps,\n  type FC,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactElement,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingOverlay,\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  size,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingTree,\n  useInteractions,\n  useMergeRefs,\n  type Placement,\n} from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport { Transition } from \"react-transition-group\";\n\nimport { FloatingTreeWrapper, useFloatingContext } from \"src/FloatingProvider\";\nimport { useCustomDismiss } from \"src/hooks/useCustomDismiss\";\nimport { useLockedBody } from \"src/hooks/useLockedBody\";\n\nimport { GenericPopover } from \"./GenericPopover\";\nimport styles from \"./Popover.module.scss\";\nimport { PopoverProvider, usePopoverContext } from \"./context\";\n\nexport { usePopoverContext };\n\nconst Overlay: FC<\n  PropsWithChildren<{ show: boolean; background?: string; className?: string }>\n> = ({\n  show,\n  children,\n  background = \"var(--cui-background-color)\",\n  className,\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  return (\n    <Transition\n      in={show}\n      mountOnEnter\n      unmountOnExit\n      timeout={250}\n      nodeRef={ref}\n    >\n      {(state) => (\n        <div\n          style={{\n            background,\n          }}\n          className={cx(styles.overlay, className, {\n            [styles.disappear]: state === \"exiting\" || state === \"exited\",\n          })}\n          ref={ref}\n        >\n          {children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n\ntype SizeLimiting = boolean | { height?: boolean; width?: boolean };\n\nconst calcSizeStyles = (\n  l: SizeLimiting,\n  availableWidth: number,\n  availableHeight: number\n): Partial<{ maxWidth: string; maxHeight: string }> | undefined => {\n  if (!l) return undefined;\n\n  if (typeof l === \"boolean\")\n    return {\n      maxWidth: `${availableWidth}px`,\n      maxHeight: `${availableHeight - 4}px`,\n    };\n\n  const r: ReturnType<typeof calcSizeStyles> = {};\n  if (l.height) r.maxHeight = `${availableHeight - 4}px`;\n  if (l.width) r.maxWidth = `${availableWidth}px`;\n  return r;\n};\n\nexport type PopoverProps = PropsWithChildren<\n  {\n    onOpen?: () => unknown;\n    onClose?: () => unknown;\n    showClassName?: string;\n    overlay?: ReactNode;\n    showOverlay?: boolean;\n    placement?: Placement;\n    offset?: Parameters<typeof offset>[0];\n    lockBody?: boolean;\n    lockRootId?: string;\n    element: ReactElement;\n    closeRef?: MutableRefObject<(() => unknown) | undefined | null>;\n    initialFocus?: ComponentProps<typeof FloatingFocusManager>[\"initialFocus\"];\n    guardsFocus?: ComponentProps<typeof FloatingFocusManager>[\"guards\"];\n    modalFocus?: ComponentProps<typeof FloatingFocusManager>[\"modal\"];\n    closeOnFocusOut?: ComponentProps<\n      typeof FloatingFocusManager\n    >[\"closeOnFocusOut\"];\n    portalRoot?: ComponentProps<typeof FloatingTreeWrapper>[\"portalRoot\"];\n    portalId?: ComponentProps<typeof FloatingTreeWrapper>[\"portalId\"];\n    explicitPortal?: boolean;\n    autoDismiss?: boolean;\n    overlayProps?: Omit<ComponentProps<typeof FloatingOverlay>, \"id\">;\n    limitSize?: SizeLimiting;\n  } & Pick<\n    ComponentProps<typeof GenericPopover>,\n    \"wrapperClassName\" | \"className\"\n  >\n>;\n\nexport interface PopoverHandlers {\n  close: () => void;\n  open: () => void;\n  setAutoDismiss: (enabled: boolean) => void;\n}\n\nconst popoverHandlersContext =\n  createContext<MutableRefObject<PopoverHandlers>>(null);\n\nexport const usePopoverHandlers = (): PopoverHandlers | undefined => {\n  const ref = useContext(popoverHandlersContext);\n  if (!ref) return undefined;\n\n  return ref.current;\n};\n\nexport const Popover = forwardRef<PopoverHandlers | null, PopoverProps>(\n  function (\n    {\n      children,\n      element,\n      onClose,\n      onOpen,\n      showClassName,\n      overlay: overlayProvided,\n      showOverlay: overlayShowProvided,\n      placement,\n      portalRoot,\n      offset: offsetOptions = 4,\n      closeRef,\n      initialFocus,\n      guardsFocus,\n      modalFocus,\n      closeOnFocusOut,\n      portalId,\n      wrapperClassName,\n      className,\n      explicitPortal,\n      autoDismiss: providedAutoDismiss = true,\n      overlayProps,\n      limitSize,\n    },\n    impRef\n  ) {\n    const [show, setShow] = useLockedBody(false, \"root\");\n    const [autoDismiss, setAutoDismiss] = useState(providedAutoDismiss);\n\n    const tree = useFloatingTree();\n    const nodeId = useFloatingNodeId();\n\n    const { x, y, reference, floating, strategy, context } = useFloating({\n      placement,\n      middleware: [\n        offset(offsetOptions),\n        flip(),\n        shift({ padding: { left: 8, right: 8 } }),\n        limitSize\n          ? size({\n              apply({ availableHeight, availableWidth, elements }) {\n                Object.assign(\n                  elements.floating.style,\n                  calcSizeStyles(limitSize, availableWidth, availableHeight)\n                );\n              },\n            })\n          : undefined,\n      ].filter(Boolean),\n      open: show,\n      onOpenChange: (newOpen) => {\n        if (newOpen && typeof onOpen === \"function\") onOpen();\n        if (!newOpen && typeof onClose === \"function\") onClose();\n        setShow(newOpen);\n      },\n      whileElementsMounted: autoUpdate,\n      nodeId,\n    });\n\n    const { getReferenceProps, getFloatingProps } = useInteractions([\n      useClick(context),\n      useDismiss(context, {\n        escapeKey: false,\n        bubbles: false,\n        enabled: autoDismiss,\n      }),\n      useCustomDismiss(context, { enabled: autoDismiss }),\n    ]);\n\n    const [overlayShow, setOverlayShow] = useState(overlayShowProvided);\n    const [overlay, setOverlay] = useState(overlayProvided);\n\n    const ref = useMergeRefs([reference, (element as any).ref]);\n\n    const transitionRef = useRef<HTMLDivElement>(null);\n    const floatingRef = useMergeRefs<HTMLDivElement>([transitionRef, floating]);\n\n    const { root, id } = useFloatingContext({\n      root: portalRoot,\n      portalId,\n      fallbackPortalId: \"--cui-popover-portal\",\n    });\n\n    const closeCb = useCallback(() => setShow(false), [setShow]);\n    if (closeRef) closeRef.current = closeCb;\n\n    const handlersRef = useRef<PopoverHandlers>(null);\n    useImperativeHandle(\n      useMergeRefs([impRef, handlersRef]),\n      () => ({\n        close: () => setShow(false),\n        open: () => setShow(true),\n        setAutoDismiss,\n      }),\n      [setShow]\n    );\n\n    return (\n      <popoverHandlersContext.Provider value={handlersRef}>\n        {cloneElement(\n          element,\n          getReferenceProps({\n            ref,\n            ...element.props,\n            className: cx(\n              element.props.className,\n              showClassName ? { [showClassName]: show } : undefined\n            ),\n          })\n        )}\n        <FloatingTreeWrapper\n          withPortal={explicitPortal || !tree}\n          portalId={id}\n          portalRoot={root}\n          force={explicitPortal ? true : undefined}\n        >\n          <FloatingNode id={nodeId}>\n            <Transition\n              in={show}\n              mountOnEnter\n              unmountOnExit\n              timeout={250}\n              nodeRef={transitionRef}\n            >\n              {(state) => (\n                <FloatingOverlay\n                  style={{ zIndex: \"calc(var(--cui-max-zindex, 1000) + 2)\" }}\n                  {...overlayProps}\n                  id={nodeId}\n                >\n                  <FloatingFocusManager\n                    context={context}\n                    initialFocus={initialFocus ?? (floatingRef as any)}\n                    guards={guardsFocus}\n                    modal={modalFocus}\n                    closeOnFocusOut={closeOnFocusOut}\n                  >\n                    <GenericPopover\n                      ref={floatingRef}\n                      style={{\n                        position: strategy,\n                        top: y ?? 0,\n                        left: x ?? 0,\n                      }}\n                      state={state}\n                      offset={offsetOptions}\n                      wrapperClassName={wrapperClassName}\n                      {...getFloatingProps({ className })}\n                    >\n                      <PopoverProvider\n                        setOverlayState={setOverlayShow}\n                        setOverlay={setOverlay}\n                      >\n                        <Overlay show={overlayShow || false}>{overlay}</Overlay>\n                        {children}\n                      </PopoverProvider>\n                    </GenericPopover>\n                  </FloatingFocusManager>\n                </FloatingOverlay>\n              )}\n            </Transition>\n          </FloatingNode>\n        </FloatingTreeWrapper>\n      </popoverHandlersContext.Provider>\n    );\n  }\n);\n","import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\ntype PopoverTitleProps = {\n  children: ReactNode;\n  noLine?: boolean;\n} & HTMLProps<HTMLHeadingElement>;\n\nexport const PopoverTitle = forwardRef<HTMLHeadingElement, PopoverTitleProps>(\n  ({ className, noLine, ...props }, ref) => {\n    return (\n      <>\n        <h5\n          ref={ref}\n          className={cx(\"no-margin-bottom\", className)}\n          {...props}\n        />\n        {!noLine && <hr className=\"half-margin-top\" />}\n      </>\n    );\n  }\n);\n\nPopoverTitle.displayName = \"PopoverTitle\";\n","import React, {\n  createElement,\n  useCallback,\n  useRef,\n  type ComponentProps,\n  type ComponentType,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingPortal,\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  useClick,\n  useDismiss,\n  useFloating,\n  useInteractions,\n  useMergeRefs,\n} from \"@floating-ui/react\";\nimport { Transition } from \"react-transition-group\";\n\nimport { useFloatingContext } from \"src/FloatingProvider\";\nimport { useCustomDismiss } from \"src/hooks/useCustomDismiss\";\nimport { useLockedBody } from \"src/hooks/useLockedBody\";\n\nimport { PopoverProps } from \".\";\nimport { GenericPopover } from \"./GenericPopover\";\n\ntype Options = {\n  onOpen?: () => unknown;\n  onClose?: () => unknown;\n  popoverComponent?: ComponentType<ComponentProps<typeof GenericPopover>>;\n} & Pick<\n  PopoverProps,\n  | \"initialFocus\"\n  | \"guardsFocus\"\n  | \"modalFocus\"\n  | \"closeOnFocusOut\"\n  | \"offset\"\n  | \"portalRoot\"\n  | \"placement\"\n  | \"portalId\"\n>;\n\nexport function usePopover({\n  onClose,\n  onOpen,\n  popoverComponent = GenericPopover,\n  placement,\n  initialFocus,\n  guardsFocus,\n  modalFocus,\n  closeOnFocusOut,\n  offset: offsetOptions = 4,\n  portalRoot,\n  portalId,\n}: Options) {\n  const [show, setShow] = useLockedBody(false, \"root\");\n\n  const { x, y, reference, floating, strategy, context, refs } = useFloating({\n    placement,\n    middleware: [\n      offset(offsetOptions),\n      flip(),\n      shift({ padding: { left: 8, right: 8 } }),\n    ],\n    open: show,\n    onOpenChange: (newOpen) => {\n      if (newOpen && typeof onOpen === \"function\") onOpen();\n      if (!newOpen && typeof onClose === \"function\") onClose();\n      setShow(newOpen);\n    },\n    whileElementsMounted: autoUpdate,\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useClick(context),\n    useDismiss(context, { bubbles: false, escapeKey: false }),\n    useCustomDismiss(context),\n  ]);\n\n  const closeCb = useCallback(() => setShow(false), [setShow]);\n  const openCb = useCallback(() => setShow(true), [setShow]);\n\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const floatingRef = useMergeRefs<HTMLDivElement>([transitionRef, floating]);\n\n  const { root, id } = useFloatingContext({\n    root: portalRoot,\n    portalId,\n    fallbackPortalId: \"--cui-popover-portal\",\n  });\n\n  const render = (body: ReactNode) => {\n    return (\n      <FloatingPortal root={root} id={id}>\n        <Transition\n          in={show}\n          mountOnEnter\n          unmountOnExit\n          timeout={250}\n          nodeRef={transitionRef}\n        >\n          {(state) => (\n            <FloatingFocusManager\n              context={context}\n              initialFocus={initialFocus ?? (floating as any)}\n              guards={guardsFocus}\n              modal={modalFocus}\n              closeOnFocusOut={closeOnFocusOut}\n            >\n              {createElement(\n                popoverComponent,\n                {\n                  ref: floatingRef,\n                  state,\n                  offset: offsetOptions,\n                  ...getFloatingProps({\n                    style: { position: strategy, top: y ?? 0, left: x ?? 0 },\n                  }),\n                },\n                body\n              )}\n            </FloatingFocusManager>\n          )}\n        </Transition>\n      </FloatingPortal>\n    );\n  };\n\n  return {\n    getReferenceProps,\n    reference,\n    render,\n    isShown: show,\n    refs,\n    close: closeCb,\n    open: openCb,\n  };\n}\n","import React, {\n  Children,\n  cloneElement,\n  isValidElement,\n  useEffect,\n  useRef,\n  useState,\n  type ComponentProps,\n  type FC,\n  type MutableRefObject,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingPortal,\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingParentNodeId,\n  useFloatingTree,\n  useInteractions,\n  useListNavigation,\n  useMergeRefs,\n  useRole,\n  useTypeahead,\n} from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport { Transition } from \"react-transition-group\";\nimport useEvent from \"react-use-event-hook\";\n\nimport { FloatingTreeWrapper, useFloatingContext } from \"src/FloatingProvider\";\n\nimport styles from \"../Dropdown/Dropdown.module.scss\";\n\ninterface ContextMenuProps {\n  contextMenuRef: MutableRefObject<HTMLElement | null>;\n  onContextMenu?: (e: globalThis.MouseEvent) => boolean | Promise<boolean>;\n  children: ReactNode;\n  portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n}\n\nconst ContextMenuInner: FC<ContextMenuProps> = ({\n  contextMenuRef,\n  onContextMenu,\n  children,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  const listItemsRef = useRef<Array<HTMLButtonElement | null>>([]);\n  const listContentRef = useRef(\n    Children.map(children, (child) =>\n      isValidElement(child) ? child.props.label : null\n    ) as Array<string | null>\n  );\n\n  const tree = useFloatingTree();\n  const nodeId = useFloatingNodeId();\n  const parentId = useFloatingParentNodeId();\n  // const nested ??= parentId != null;\n\n  const { x, y, refs, strategy, context } = useFloating({\n    open,\n    onOpenChange: setOpen,\n    middleware: [\n      offset({ mainAxis: 5, alignmentAxis: 4 }),\n      flip({ padding: { bottom: 50 } }),\n      shift(),\n    ],\n    placement: \"right-start\",\n    strategy: \"fixed\",\n    whileElementsMounted: autoUpdate,\n    nodeId,\n  });\n\n  const { getFloatingProps, getItemProps } = useInteractions([\n    useRole(context, { role: \"menu\" }),\n    useDismiss(context, { bubbles: false }),\n    useListNavigation(context, {\n      listRef: listItemsRef,\n      activeIndex,\n      nested: false,\n      onNavigate: setActiveIndex,\n    }),\n    useTypeahead(context, {\n      listRef: listContentRef,\n      onMatch: open ? setActiveIndex : undefined,\n      activeIndex,\n    }),\n  ]);\n\n  const onRightClick = useEvent((e: globalThis.MouseEvent) => {\n    e.preventDefault();\n    const pos = {\n      x: e.clientX,\n      y: e.clientY,\n      width: 0,\n      height: 0,\n      top: e.clientY,\n      right: e.clientX,\n      bottom: e.clientY,\n      left: e.clientX,\n    };\n    const makePop = () => {\n      refs.setPositionReference({\n        getBoundingClientRect() {\n          return pos;\n        },\n      });\n\n      setOpen(true);\n    };\n\n    if (onContextMenu) {\n      const awaitResult = async () => {\n        if (await onContextMenu(e)) makePop();\n      };\n\n      awaitResult();\n    } else makePop();\n  });\n\n  useEffect(() => {\n    function onTreeClick() {\n      setOpen(false);\n    }\n\n    tree?.events.on(\"click\", onTreeClick);\n    return () => {\n      tree?.events.off(\"click\", onTreeClick);\n    };\n  }, [parentId, tree, refs]);\n\n  useEffect(() => {\n    if (!contextMenuRef.current) return;\n\n    const el = contextMenuRef.current;\n\n    el.addEventListener(\"contextmenu\", onRightClick);\n    return () => {\n      el.removeEventListener(\"contextmenu\", onRightClick);\n    };\n  }, [contextMenuRef, onRightClick]);\n\n  const floatingNodeRef = useRef<HTMLElement>(null);\n  const mergedFloatingRef = useMergeRefs([floatingNodeRef, refs.setFloating]);\n\n  return (\n    <Transition\n      in={open}\n      mountOnEnter\n      unmountOnExit\n      appear\n      timeout={{ enter: 100, exit: 250 }}\n      nodeRef={floatingNodeRef}\n    >\n      {(state) => (\n        <FloatingFocusManager context={context} initialFocus={refs.floating}>\n          <FloatingNode id={nodeId}>\n            <div\n              {...getFloatingProps({\n                className: cx(\"dropdown\", styles.dropdown, {\n                  [styles.disappear]: state === \"exiting\" || state === \"exited\",\n                  [styles.appear]: state === \"entering\",\n                  [styles.active]: state === \"entered\",\n                }),\n                ref: mergedFloatingRef,\n                style: {\n                  position: strategy,\n                  top: y ?? 0,\n                  left: x ?? 0,\n                },\n              })}\n            >\n              <div className=\"dropdown__menu\" style={{ position: \"unset\" }}>\n                {Children.map(\n                  children,\n                  (child, index) =>\n                    isValidElement(child) &&\n                    cloneElement(\n                      child,\n                      getItemProps({\n                        tabIndex: -1,\n                        role: \"menuitem\",\n                        className: \"menu_item\",\n                        ref(node: HTMLButtonElement) {\n                          listItemsRef.current[index] = node;\n                        },\n                        onClick(e) {\n                          if (child.props.onClick) child.props.onClick(e);\n                          else tree?.events.emit(\"click\");\n                        },\n                        // onPointerEnter() {\n                        //   if (allowHover) {\n                        //     setActiveIndex(index);\n                        //   }\n                        // },\n                      })\n                    )\n                )}\n              </div>\n            </div>\n          </FloatingNode>\n        </FloatingFocusManager>\n      )}\n    </Transition>\n  );\n};\n\nexport const ContextMenu: FC<ContextMenuProps> = ({\n  children,\n  contextMenuRef,\n  onContextMenu,\n  portalId,\n}) => {\n  const { root, id } = useFloatingContext({\n    portalId,\n    fallbackPortalId: \"--cui-context-menu-portal\",\n  });\n\n  const tree = useFloatingTree();\n\n  return (\n    <FloatingTreeWrapper withPortal={!tree} portalRoot={root} portalId={id}>\n      <ContextMenuInner\n        contextMenuRef={contextMenuRef}\n        onContextMenu={onContextMenu}\n      >\n        {children}\n      </ContextMenuInner>\n    </FloatingTreeWrapper>\n  );\n};\n"],"names":["classes","type","icon","Alert","children","title","dismissable","className","onDismiss","withIcon","dismissed","setDismissed","React","handleDismiss","e","alertClass","iconClass","_jsxs","_jsx","props","FloatingContext","createContext","useFloatingContext","root","portalId","fallbackPortalId","ctx","useContext","_a","useMemo","FloatingProvider","rootRef","FloatingTreeWrapper","withPortal","portalRoot","force","useFloatingTree","FloatingPortal","FloatingTree","_Fragment","appendClass","c","what","ModalHeader","ac","ModalFooter","forwardRef","ref","ModalBody","ConditionalWrapper","condition","wrapper","DisplayIf","Button","size","color","wide","justified","circle","asLink","style","selected","createElement","cx","fullGhost","ButtonGroup","square","withDivider","eventManager","EventEmitter","ConfirmationModal","isOpen","confirmType","autoClose","confirmText","confirmHandle","closeHandle","prompt","dontAskAgain","doing","setDoing","dontAsk","setDontAsk","Modal","InputHelpBaloon","baloon","InputHelpBlock","text","Input","inline","helpBlock","label","iconClick","plain","horizontal","horizontalLabelClassName","error","prefix","input","PromptModal","question","cb","onClose","initial","hint","validate","val","setVal","onSave","useEvent","inpRef","If","assertUnreachable","x","CustomWrapper","fullBody","body","buttons","modalProps","id","shown","close","isLast","_createElement","cloneElement","button","idx","NotificationWrapper","buttonColor","PromptWrapper","options","ConfirmationWrapper","onConfirm","DynamicModal","closeTimeout","modals","setModals","useFloatingPortalNode","addModal","modal","curr","nanoid","hideModal","m","deleteModal","closeModal","_b","ModalContext","useModalProvider","ModalProvider","rendered","useRef","addRendered","useCallback","removeRendered","n","lastRendered","animationDuration","closeIcon","left","dialogProps","contentProps","maximize","refElement","rootProvided","lockScroll","ancestorScroll","maximized","setMaximized","nodeId","useFloatingNodeId","modalCtx","notifyCtx","o","realSize","reference","floating","context","useFloating","state","floatingTree","outsidePress","getFloatingProps","useInteractions","useClick","useRole","useDismiss","useCustomDismiss","overlayRef","contentRef","Transition","FloatingNode","FloatingOverlay","FloatingFocusManager","sts","confirmation","resolve","notificationModal","dynamicModal","getDocument","node","getChildren","nodes","allChildren","currentChildren","open","onOpenChange","events","enabled","tree","closeOnEscapeKeyDown","event","useEffect","doc","MenuElement","submenu","styles","isValidElement","TreeClickHandleWrapper","onClick","t","Menu","noChevron","placement","providedStrategy","alwaysClose","onOpen","nested","withSizeLimit","explicitPortal","setOpen","useState","activeIndex","setActiveIndex","allowHover","setAllowHover","listItemsRef","listContentRef","Children","child","parentId","useFloatingParentNodeId","y","strategy","refs","st","offset","flip","shift","availableHeight","availableWidth","elements","autoUpdate","getReferenceProps","getItemProps","useHover","safePolygon","useListNavigation","useTypeahead","onTreeClick","onPointerMove","onKeyDown","floatingNodeRef","mergedFloatingRef","useMergeRefs","mergedReferenceRef","index","Dropdown","MenuDivider","MenuGroup","header","FileCard","file","i","removeFile","bytes","DropzoneMessage","accept","maxFileSize","DropzoneFiles","files","showTotalSelected","Dropzone","loose","compressed","name","value","customMaxFileSize","maxFiles","onChange","padding","tmp","handleDrop","filesToUpload","toRemove","_","ReactDropzone","getRootProps","getInputProps","Dots","Spinner","Progressbar","withLabel","percentage","Label","bordered","removable","onRemove","raised","Panel","well","b","copyStringToClipboard","str","el","iconType","ToastIcon","Toast","message","copyError","toast","containerId","args","_toast","toastId","updates","ToastContainer","position","draggable","hideProgressBar","transition","Slide","shadow","bodyClassName","toastClassName","ToastifyContainer","Footer","Header","fluid","HeaderPanel","center","right","HeaderTitle","link","Wrapper","GenericTable","outerWrap","lined","striped","selectable","fixed","wrapped","forwardedRef","PaginationContext","content","active","disabled","changePage","FirstPrev","perPage","firstAndLast","icons","prev","beginAt","r","NextLast","total","next","pages","Pages","start","finish","v","current","Pagination","rounded","onPageChange","rest","newPosition","DefaultTablePagination","perPageUp","paginationProps","onPerPageChange","setPerPage","asArray","Table","pagination","paginationLocation","data","setPosition","tbody","thead","p","row","rid","col","cid","Checkbox","asFormGroup","spacing","IndeterminateCheckbox","indeterminate","fwd","Switch","Icon","useIsomorphicEffect","useLayoutEffect","usePortal","target","mounted","setMounted","defaultProps","Portal","zIndex","portal","createPortal","Accordion","toggles","AccordionElement","defaultOpen","setIsOpen","Badge","WithBadge","badge","wrapperClass","usePrevious","firstDefined","Tab","activeClassName","unmountInactive","isActive","openTab","TabsHeader","tabsClassName","embossed","vertical","sticky","onTabChange","composeColumnSize","columnWidth","k","ColumnWrap","Tabs","defaultTab","contentClassName","renderHeader","renderBody","leftColumn","rightColumn","rowClassName","rowProps","beforeTabChange","bodyRef","headerRef","setOpenTab","prevTab","Section","Display","as","Display0","Display1","Display2","Display3","Display4","TimelineItem","time","simplified","Timeline","Step","visited","consequativeIdx","Steps","VerticalCenter","Textarea","textareaClass","innerDivClass","inputRef","textarea","Radio","divProps","Radios","values","onRadioChange","emptyList","InputChips","chipsColor","addOnBlur","delimiters","allowRepeat","allowRegex","valueValidator","maxChips","initialValue","chipsOutside","renderChip","onBlur","onChipRemove","noInput","setValue","addValue","handleKeyDown","d","map","ch","handleBlur","handleDelete","showInput","isOption","element","isOptGroup","SelectChildren","handleOptionClick","isSelected","collectDisplays","EditableSelect","editable","multi","displayValues","divRef","onSelect","onDeselect","display","handleClick","newState","onOutsideClick","_e","newValue","added","checkValue","_v","opt","MultiValueContainer","MultiValueLabel","MultiValueRemove","Group","Heading","headingProps","innerProps","GroupHeading","UnrefedSelect","Select","GroupComponent","ReactSelect","CreatableSelect","inputValue","CreatableReactSelect","isGrouped","findOption","found","it","findOptions","fv","VSeparator","Slider","dots","RCSlider","base16Theme","Kbd","Blockquote","cite","align","Gauge","TooltipContent","useTooltip","show","setShow","arrowRef","fl","arrow","role","hover","TooltipWrapper","middlewareData","arrowX","arrowY","floatingRef","staticSide","WithTooltip","tooltip","tt","Active","activeElement","fullWidth","small","coord","setCoord","OptionDisplay","activeRef","UrefedSegmented","setEl","activeRefCb","SegmentedControl","useLockedBody","initialLocked","rootId","locked","setLocked","originalOverflow","originalPaddingRight","scrollBarWidth","GenericPopover","wrapperClassName","offsetOptions","ownRef","merged","PopoverContext","PopoverProvider","usePopoverContext","Overlay","background","calcSizeStyles","l","popoverHandlersContext","usePopoverHandlers","Popover","showClassName","overlayProvided","overlayShowProvided","closeRef","initialFocus","guardsFocus","modalFocus","closeOnFocusOut","providedAutoDismiss","overlayProps","limitSize","impRef","autoDismiss","setAutoDismiss","newOpen","overlayShow","setOverlayShow","overlay","setOverlay","transitionRef","closeCb","handlersRef","useImperativeHandle","PopoverTitle","noLine","usePopover","popoverComponent","openCb","ContextMenuInner","contextMenuRef","onContextMenu","onRightClick","pos","makePop","ContextMenu"],"mappings":"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"}