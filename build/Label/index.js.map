{"version":3,"file":"index.js","sources":["../../src/Label/Label.tsx"],"sourcesContent":["import React, { FC } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nexport type LabelColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning-alt\"\n  | \"warning\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype LabelProps = React.PropsWithChildren<{\n  size?: \"tiny\" | \"small\" | \"default\" | \"large\";\n  color?: LabelColor;\n  bordered?: boolean;\n  removable?: boolean;\n  onRemove?: (e) => void;\n  raised?: boolean;\n  className?: string;\n}> &\n  React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n  >;\n\ntype LabelTypes =\n  | \"Primary\"\n  | \"Secondary\"\n  | \"Tertiary\"\n  | \"Success\"\n  | \"Info\"\n  | \"WarningAlt\"\n  | \"Warning\"\n  | \"Danger\"\n  | \"Dark\"\n  | \"Light\";\ntype ILabel = {\n  [x in LabelTypes]: FC<LabelProps>;\n};\n\nexport const Label: ILabel & FC<LabelProps> = ({\n  size = \"default\",\n  color = \"primary\",\n  bordered = false,\n  removable = false,\n  onRemove = null,\n  raised = false,\n  className = null,\n  children,\n  ...props\n}) => (\n  <span\n    className={`label label--${color}${ac(\n      size !== \"default\",\n      `label--${size}`\n    )}${ac(bordered, \"label--bordered\")}${ac(raised, \"label--raised\")}${ac(\n      className\n    )}`}\n    {...props}\n  >\n    {children}\n    {removable ? <span className=\"icon-close\" onClick={onRemove} /> : null}\n  </span>\n);\n\nLabel.Primary = (props) => <Label color=\"primary\" {...props} />;\nLabel.Secondary = (props) => <Label color=\"secondary\" {...props} />;\nLabel.Tertiary = (props) => <Label color=\"tertiary\" {...props} />;\nLabel.Success = (props) => <Label color=\"success\" {...props} />;\nLabel.Info = (props) => <Label color=\"info\" {...props} />;\nLabel.WarningAlt = (props) => <Label color=\"warning-alt\" {...props} />;\nLabel.Warning = (props) => <Label color=\"warning\" {...props} />;\nLabel.Danger = (props) => <Label color=\"danger\" {...props} />;\nLabel.Dark = (props) => <Label color=\"dark\" {...props} />;\nLabel.Light = (props) => <Label color=\"light\" {...props} />;\n"],"names":["_extends","Label","React","size","color","bordered","removable","onRemove","raised","className","children","props","span","ac","onClick","Primary","Secondary","Tertiary","Success","Info","WarningAlt","Warning","Danger","Dark","Light"],"mappings":"wwBAAA,SAAAA,UAAA,iQA6CaC,IAAAA,MAAiC,gBAW5CC,kBAVAC,KAAAA,oBAAO,8BACPC,MAAAA,sBAAQ,kCACRC,SAAAA,4BAAW,KAAK,6BAChBC,UAAAA,8BAAY,KAAK,6BACjBC,SAAAA,4BAAW,IAAI,0BACfC,OAAAA,wBAAS,KAAK,2BACdC,UAAAA,8BAAY,IAAI,YAChBC,gBAAAA,SACGC,uCARHR,OACAC,QACAC,WACAC,YACAC,WACAC,SACAC,YACAC,oBAGAR,MAACU,aAAAA,CAAAA,OAAAA,SAAAA,CACCH,UAAW,AAAC,gBAAuBI,OAART,OAGvBS,OAH+BA,YACjCV,OAAS,UACT,AAAC,UAAc,OAALA,QAC0BU,OAAlCA,YAAGR,SAAU,oBAAmDQ,OAA9BA,YAAGL,OAAQ,kBAE/C,OAFkEK,YAClEJ,aAEEE,OAEHD,SACAJ,UAAYJ,MAACU,aAAAA,CAAAA,OAAAA,CAAKH,UAAU,aAAaK,QAASP,QAAe,GAAA,IAAI,CAAA,CAI1EN,CAAAA,MAAMc,OAAO,CAAG,SAACJ,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,SAAcO,EAAAA,QACtDV,CAAAA,MAAMe,SAAS,CAAG,SAACL,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,WAAgBO,EAAAA,QAC1DV,CAAAA,MAAMgB,QAAQ,CAAG,SAACN,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,UAAeO,EAAAA,QACxDV,CAAAA,MAAMiB,OAAO,CAAG,SAACP,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,SAAcO,EAAAA,QACtDV,CAAAA,MAAMkB,IAAI,CAAG,SAACR,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,MAAWO,EAAAA,QAChDV,CAAAA,MAAMmB,UAAU,CAAG,SAACT,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,aAAkBO,EAAAA,QAC7DV,CAAAA,MAAMoB,OAAO,CAAG,SAACV,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,SAAcO,EAAAA,QACtDV,CAAAA,MAAMqB,MAAM,CAAG,SAACX,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,QAAaO,EAAAA,QACpDV,CAAAA,MAAMsB,IAAI,CAAG,SAACZ,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,MAAWO,EAAAA,QAChDV,CAAAA,MAAMuB,KAAK,CAAG,SAACb,cAAUT,MAACD,aAAAA,CAAAA,MAAAA,SAAAA,CAAMG,MAAM,OAAYO,EAAAA"}