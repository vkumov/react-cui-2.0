{"version":3,"file":"index.js","sources":["../../src/Label/Label.tsx"],"sourcesContent":["import React, { FC } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nexport type LabelColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning-alt\"\n  | \"warning\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype LabelProps = React.PropsWithChildren<{\n  size?: \"tiny\" | \"small\" | \"default\" | \"large\";\n  color?: LabelColor;\n  bordered?: boolean;\n  removable?: boolean;\n  onRemove?: (e) => void;\n  raised?: boolean;\n  className?: string;\n}> &\n  React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n  >;\n\ntype LabelTypes =\n  | \"Primary\"\n  | \"Secondary\"\n  | \"Tertiary\"\n  | \"Success\"\n  | \"Info\"\n  | \"WarningAlt\"\n  | \"Warning\"\n  | \"Danger\"\n  | \"Dark\"\n  | \"Light\";\ntype ILabel = {\n  [x in LabelTypes]: FC<LabelProps>;\n};\n\nexport const Label: ILabel & FC<LabelProps> = ({\n  size = \"default\",\n  color = \"primary\",\n  bordered = false,\n  removable = false,\n  onRemove = null,\n  raised = false,\n  className = null,\n  children,\n  ...props\n}) => (\n  <span\n    className={`label label--${color}${ac(\n      size !== \"default\",\n      `label--${size}`\n    )}${ac(bordered, \"label--bordered\")}${ac(raised, \"label--raised\")}${ac(\n      className\n    )}`}\n    {...props}\n  >\n    {children}\n    {removable ? <span className=\"icon-close\" onClick={onRemove} /> : null}\n  </span>\n);\n\nLabel.Primary = (props) => <Label color=\"primary\" {...props} />;\nLabel.Secondary = (props) => <Label color=\"secondary\" {...props} />;\nLabel.Tertiary = (props) => <Label color=\"tertiary\" {...props} />;\nLabel.Success = (props) => <Label color=\"success\" {...props} />;\nLabel.Info = (props) => <Label color=\"info\" {...props} />;\nLabel.WarningAlt = (props) => <Label color=\"warning-alt\" {...props} />;\nLabel.Warning = (props) => <Label color=\"warning\" {...props} />;\nLabel.Danger = (props) => <Label color=\"danger\" {...props} />;\nLabel.Dark = (props) => <Label color=\"dark\" {...props} />;\nLabel.Light = (props) => <Label color=\"light\" {...props} />;\n"],"names":["Label","size","color","bordered","removable","onRemove","raised","className","children","props","React","ac"],"mappings":"0HA6CaA,EAAiC,CAAC,CAC7C,KAAAC,EAAO,UACP,MAAAC,EAAQ,UACR,SAAAC,EAAW,GACX,UAAAC,EAAY,GACZ,SAAAC,EAAW,KACX,OAAAC,EAAS,GACT,UAAAC,EAAY,KACZ,SAAAC,EACA,GAAGC,CACL,IACEC,EAAA,cAAC,QACC,UAAW,gBAAgBR,IAAQS,EACjCV,IAAS,UACT,UAAUA,GACZ,IAAIU,EAAGR,EAAU,iBAAiB,IAAIQ,EAAGL,EAAQ,eAAe,IAAIK,EAClEJ,CACF,IACC,GAAGE,CAAAA,EAEHD,EACAJ,EAAYM,EAAA,cAAC,OAAK,CAAA,UAAU,aAAa,QAASL,EAAU,EAAK,IACpE,EAGFL,EAAM,QAAWS,GAAUC,EAAA,cAACV,GAAM,MAAM,UAAW,GAAGS,CAAO,CAAA,EAC7DT,EAAM,UAAaS,GAAUC,EAAA,cAACV,EAAA,CAAM,MAAM,YAAa,GAAGS,CAAO,CAAA,EACjET,EAAM,SAAYS,GAAUC,EAAA,cAACV,EAAA,CAAM,MAAM,WAAY,GAAGS,EAAO,EAC/DT,EAAM,QAAWS,GAAUC,EAAA,cAACV,EAAM,CAAA,MAAM,UAAW,GAAGS,EAAO,EAC7DT,EAAM,KAAQS,GAAUC,EAAA,cAACV,EAAM,CAAA,MAAM,OAAQ,GAAGS,CAAAA,CAAO,EACvDT,EAAM,WAAcS,GAAUC,EAAA,cAACV,GAAM,MAAM,cAAe,GAAGS,CAAAA,CAAO,EACpET,EAAM,QAAWS,GAAUC,EAAA,cAACV,GAAM,MAAM,UAAW,GAAGS,CAAO,CAAA,EAC7DT,EAAM,OAAUS,GAAUC,EAAA,cAACV,EAAA,CAAM,MAAM,SAAU,GAAGS,EAAO,EAC3DT,EAAM,KAAQS,GAAUC,EAAA,cAACV,EAAM,CAAA,MAAM,OAAQ,GAAGS,CAAAA,CAAO,EACvDT,EAAM,MAASS,GAAUC,EAAA,cAACV,GAAM,MAAM,QAAS,GAAGS,CAAO,CAAA"}