{"version":3,"file":"index.js","sources":["../../src/Popover/GenericPopover.tsx","../../src/Popover/context.tsx","../../src/Popover/Popover.tsx","../../src/Popover/PopoverTitle.tsx","../../src/Popover/usePopover.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useRef, type HTMLProps } from \"react\";\nimport { useMergeRefs, type offset } from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport type { TransitionStatus } from \"react-transition-group\";\n\nimport styles from \"./Popover.module.scss\";\n\nexport const GenericPopover = forwardRef<\n  HTMLDivElement,\n  HTMLProps<HTMLDivElement> & {\n    wrapperClassName?: string;\n    state: TransitionStatus;\n    offset?: Parameters<typeof offset>[0];\n  }\n>(function GenericPopoverRefed(\n  {\n    className,\n    children,\n    wrapperClassName,\n    state,\n    offset: offsetOptions,\n    ...props\n  },\n  ref\n) {\n  const ownRef = useRef<HTMLDivElement>(null);\n  const merged = useMergeRefs([ref, ownRef]);\n\n  useEffect(() => {\n    const r = ownRef.current;\n\n    if (r && offsetOptions && typeof offsetOptions !== \"function\")\n      r.style.setProperty(\n        \"--offset\",\n        `${\n          typeof offsetOptions === \"number\"\n            ? offsetOptions\n            : offsetOptions.mainAxis ?? 4\n        }px`\n      );\n\n    return () => {\n      if (r) r.style.setProperty(\"--offset\", \"4px\");\n    };\n  }, [offsetOptions]);\n\n  return (\n    <div\n      ref={merged}\n      className={cx(styles.wrapper, wrapperClassName, {\n        [styles.disappear]: state === \"exiting\" || state === \"exited\",\n      })}\n      {...props}\n    >\n      <div\n        className={cx(\n          \"panel panel--bordered panel--raised\",\n          styles.body,\n          className\n        )}\n        tabIndex={-1}\n      >\n        {children}\n      </div>\n    </div>\n  );\n});\n","import React, {\n  createContext,\n  useContext,\n  type FC,\n  type PropsWithChildren,\n  type ReactNode,\n} from \"react\";\n\ntype PopoverContextProps = {\n  setOverlayState: (show: boolean) => void;\n  setOverlay: (overlay: ReactNode) => void;\n};\n\nconst PopoverContext = createContext<PopoverContextProps>(null!);\n\nexport const PopoverProvider: FC<PropsWithChildren<PopoverContextProps>> = ({\n  children,\n  ...props\n}) => (\n  <PopoverContext.Provider value={props}>{children}</PopoverContext.Provider>\n);\n\nexport const usePopoverContext = () => useContext(PopoverContext);\n","import React, {\n  cloneElement,\n  useCallback,\n  useRef,\n  useState,\n  type ComponentProps,\n  type FC,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactElement,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingOverlay,\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingTree,\n  useInteractions,\n  useMergeRefs,\n  type Placement,\n} from \"@floating-ui/react\";\nimport cx from \"classnames\";\nimport { Transition } from \"react-transition-group\";\n\nimport { FloatingTreeWrapper, useFloatingContext } from \"src/FloatingProvider\";\nimport { useCustomDismiss } from \"src/hooks/useCustomDismiss\";\nimport { useLockedBody } from \"src/hooks/useLockedBody\";\n\nimport { GenericPopover } from \"./GenericPopover\";\nimport styles from \"./Popover.module.scss\";\nimport { PopoverProvider, usePopoverContext } from \"./context\";\n\nexport { usePopoverContext };\n\nconst Overlay: FC<\n  PropsWithChildren<{ show: boolean; background?: string; className?: string }>\n> = ({\n  show,\n  children,\n  background = \"var(--cui-background-color)\",\n  className,\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  return (\n    <Transition\n      in={show}\n      mountOnEnter\n      unmountOnExit\n      timeout={250}\n      nodeRef={ref}\n    >\n      {(state) => (\n        <div\n          style={{\n            background,\n          }}\n          className={cx(styles.overlay, className, {\n            [styles.disappear]: state === \"exiting\" || state === \"exited\",\n          })}\n          ref={ref}\n        >\n          {children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n\nexport type PopoverProps = PropsWithChildren<{\n  onOpen?: () => unknown;\n  onClose?: () => unknown;\n  showClassName?: string;\n  overlay?: ReactNode;\n  showOverlay?: boolean;\n  placement?: Placement;\n  offset?: Parameters<typeof offset>[0];\n  lockBody?: boolean;\n  lockRootId?: string;\n  element: ReactElement;\n  closeRef?: MutableRefObject<(() => unknown) | undefined | null>;\n  initialFocus?: ComponentProps<typeof FloatingFocusManager>[\"initialFocus\"];\n  guardsFocus?: ComponentProps<typeof FloatingFocusManager>[\"guards\"];\n  modalFocus?: ComponentProps<typeof FloatingFocusManager>[\"modal\"];\n  closeOnFocusOut?: ComponentProps<\n    typeof FloatingFocusManager\n  >[\"closeOnFocusOut\"];\n  portalRoot?: ComponentProps<typeof FloatingTreeWrapper>[\"portalRoot\"];\n  portalId?: ComponentProps<typeof FloatingTreeWrapper>[\"portalId\"];\n}>;\n\nexport const Popover: FC<PopoverProps> = ({\n  children,\n  element,\n  onClose,\n  onOpen,\n  showClassName,\n  overlay: overlayProvided,\n  showOverlay: overlayShowProvided,\n  placement,\n  portalRoot,\n  offset: offsetOptions = 4,\n  closeRef,\n  initialFocus,\n  guardsFocus,\n  modalFocus,\n  closeOnFocusOut,\n  portalId,\n}) => {\n  const [show, setShow] = useLockedBody(false, \"root\");\n\n  const tree = useFloatingTree();\n  const nodeId = useFloatingNodeId();\n  // const parentId = useFloatingParentNodeId();\n\n  const { x, y, reference, floating, strategy, context } = useFloating({\n    placement,\n    middleware: [\n      offset(offsetOptions),\n      flip(),\n      shift({ padding: { left: 8, right: 8 } }),\n    ],\n    open: show,\n    onOpenChange: (newOpen) => {\n      if (newOpen && typeof onOpen === \"function\") onOpen();\n      if (!newOpen && typeof onClose === \"function\") onClose();\n      setShow(newOpen);\n    },\n    whileElementsMounted: autoUpdate,\n    nodeId,\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useClick(context),\n    useDismiss(context, { escapeKey: false, bubbles: false }),\n    useCustomDismiss(context),\n  ]);\n\n  const [overlayShow, setOverlayShow] = useState(overlayShowProvided);\n  const [overlay, setOverlay] = useState(overlayProvided);\n\n  const ref = useMergeRefs([reference, (element as any).ref]);\n\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const floatingRef = useMergeRefs<HTMLDivElement>([transitionRef, floating]);\n\n  const { root, id } = useFloatingContext({\n    root: portalRoot,\n    portalId,\n    fallbackPortalId: \"--cui-popover-portal\",\n  });\n\n  const closeCb = useCallback(() => setShow(false), [setShow]);\n  if (closeRef) closeRef.current = closeCb;\n\n  return (\n    <>\n      {cloneElement(\n        element,\n        getReferenceProps({\n          ref,\n          ...element.props,\n          className: cx(\n            element.props.className,\n            showClassName ? { [showClassName]: show } : undefined\n          ),\n        })\n      )}\n      <FloatingTreeWrapper withPortal={!tree} portalId={id} portalRoot={root}>\n        <FloatingNode id={nodeId}>\n          <Transition\n            in={show}\n            mountOnEnter\n            unmountOnExit\n            timeout={250}\n            nodeRef={transitionRef}\n          >\n            {(state) => (\n              <FloatingOverlay\n                style={{ zIndex: \"calc(var(--cui-max-zindex, 1000) + 2)\" }}\n                id={nodeId}\n              >\n                <FloatingFocusManager\n                  context={context}\n                  initialFocus={initialFocus ?? (floatingRef as any)}\n                  guards={guardsFocus}\n                  modal={modalFocus}\n                  closeOnFocusOut={closeOnFocusOut}\n                >\n                  <GenericPopover\n                    ref={floatingRef}\n                    style={{\n                      position: strategy,\n                      top: y ?? 0,\n                      left: x ?? 0,\n                    }}\n                    state={state}\n                    offset={offsetOptions}\n                    {...getFloatingProps()}\n                  >\n                    <PopoverProvider\n                      setOverlayState={setOverlayShow}\n                      setOverlay={setOverlay}\n                    >\n                      <Overlay show={overlayShow || false}>{overlay}</Overlay>\n                      {children}\n                    </PopoverProvider>\n                  </GenericPopover>\n                </FloatingFocusManager>\n              </FloatingOverlay>\n            )}\n          </Transition>\n        </FloatingNode>\n      </FloatingTreeWrapper>\n    </>\n  );\n};\n","import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\ntype PopoverTitleProps = {\n  children: ReactNode;\n  noLine?: boolean;\n} & HTMLProps<HTMLHeadingElement>;\n\nexport const PopoverTitle = forwardRef<HTMLHeadingElement, PopoverTitleProps>(\n  ({ className, noLine, ...props }, ref) => {\n    return (\n      <>\n        <h5\n          ref={ref}\n          className={cx(\"no-margin-bottom\", className)}\n          {...props}\n        />\n        {!noLine && <hr className=\"half-margin-top\" />}\n      </>\n    );\n  }\n);\n\nPopoverTitle.displayName = \"PopoverTitle\";\n","import React, {\n  createElement,\n  useCallback,\n  useRef,\n  type ComponentProps,\n  type ComponentType,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingFocusManager,\n  FloatingPortal,\n  autoUpdate,\n  flip,\n  offset,\n  shift,\n  useClick,\n  useDismiss,\n  useFloating,\n  useInteractions,\n  useMergeRefs,\n} from \"@floating-ui/react\";\nimport { Transition } from \"react-transition-group\";\n\nimport { useFloatingContext } from \"src/FloatingProvider\";\nimport { useCustomDismiss } from \"src/hooks/useCustomDismiss\";\nimport { useLockedBody } from \"src/hooks/useLockedBody\";\n\nimport { PopoverProps } from \".\";\nimport { GenericPopover } from \"./GenericPopover\";\n\ntype Options = {\n  onOpen?: () => unknown;\n  onClose?: () => unknown;\n  popoverComponent?: ComponentType<ComponentProps<typeof GenericPopover>>;\n} & Pick<\n  PopoverProps,\n  | \"initialFocus\"\n  | \"guardsFocus\"\n  | \"modalFocus\"\n  | \"closeOnFocusOut\"\n  | \"offset\"\n  | \"portalRoot\"\n  | \"placement\"\n  | \"portalId\"\n>;\n\nexport function usePopover({\n  onClose,\n  onOpen,\n  popoverComponent = GenericPopover,\n  placement,\n  initialFocus,\n  guardsFocus,\n  modalFocus,\n  closeOnFocusOut,\n  offset: offsetOptions = 4,\n  portalRoot,\n  portalId,\n}: Options) {\n  const [show, setShow] = useLockedBody(false, \"root\");\n\n  const { x, y, reference, floating, strategy, context, refs } = useFloating({\n    placement,\n    middleware: [\n      offset(offsetOptions),\n      flip(),\n      shift({ padding: { left: 8, right: 8 } }),\n    ],\n    open: show,\n    onOpenChange: (newOpen) => {\n      if (newOpen && typeof onOpen === \"function\") onOpen();\n      if (!newOpen && typeof onClose === \"function\") onClose();\n      setShow(newOpen);\n    },\n    whileElementsMounted: autoUpdate,\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useClick(context),\n    useDismiss(context, { bubbles: false, escapeKey: false }),\n    useCustomDismiss(context),\n  ]);\n\n  const closeCb = useCallback(() => setShow(false), [setShow]);\n  const openCb = useCallback(() => setShow(true), [setShow]);\n\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const floatingRef = useMergeRefs<HTMLDivElement>([transitionRef, floating]);\n\n  const { root, id } = useFloatingContext({\n    root: portalRoot,\n    portalId,\n    fallbackPortalId: \"--cui-popover-portal\",\n  });\n\n  const render = (body: ReactNode) => {\n    return (\n      <FloatingPortal root={root} id={id}>\n        <Transition\n          in={show}\n          mountOnEnter\n          unmountOnExit\n          timeout={250}\n          nodeRef={transitionRef}\n        >\n          {(state) => (\n            <FloatingFocusManager\n              context={context}\n              initialFocus={initialFocus ?? (floating as any)}\n              guards={guardsFocus}\n              modal={modalFocus}\n              closeOnFocusOut={closeOnFocusOut}\n            >\n              {createElement(\n                popoverComponent,\n                {\n                  ref: floatingRef,\n                  state,\n                  offset: offsetOptions,\n                  ...getFloatingProps({\n                    style: { position: strategy, top: y ?? 0, left: x ?? 0 },\n                  }),\n                },\n                body\n              )}\n            </FloatingFocusManager>\n          )}\n        </Transition>\n      </FloatingPortal>\n    );\n  };\n\n  return {\n    getReferenceProps,\n    reference,\n    render,\n    isShown: show,\n    refs,\n    close: closeCb,\n    open: openCb,\n  };\n}\n"],"names":["GenericPopover","forwardRef","className","children","wrapperClassName","state","offsetOptions","props","ref","ownRef","useRef","merged","useMergeRefs","useEffect","_a","r","jsx","cx","styles","PopoverContext","createContext","PopoverProvider","usePopoverContext","useContext","Overlay","show","background","Transition","Popover","element","onClose","onOpen","showClassName","overlayProvided","overlayShowProvided","placement","portalRoot","closeRef","initialFocus","guardsFocus","modalFocus","closeOnFocusOut","portalId","setShow","useLockedBody","tree","useFloatingTree","nodeId","useFloatingNodeId","x","y","reference","floating","strategy","context","useFloating","offset","flip","shift","newOpen","autoUpdate","getReferenceProps","getFloatingProps","useInteractions","useClick","useDismiss","useCustomDismiss","overlayShow","setOverlayShow","useState","overlay","setOverlay","transitionRef","floatingRef","root","id","useFloatingContext","closeCb","useCallback","jsxs","Fragment","cloneElement","FloatingTreeWrapper","FloatingNode","FloatingOverlay","FloatingFocusManager","PopoverTitle","noLine","usePopover","popoverComponent","refs","openCb","body","FloatingPortal","createElement"],"mappings":"q1CAOO,MAAMA,EAAiBC,EAO5B,SACA,CACE,UAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,MAAAC,EACA,OAAQC,EACR,GAAGC,CACL,EACAC,EACA,CACA,MAAMC,EAASC,EAAuB,IAAI,EACpCC,EAASC,EAAa,CAACJ,EAAKC,CAAM,CAAC,EAEzC,OAAAI,GAAU,IAAM,CA5BlB,IAAAC,EA6BI,MAAMC,EAAIN,EAAO,QAEjB,OAAIM,GAAKT,GAAiB,OAAOA,GAAkB,YACjDS,EAAE,MAAM,YACN,WACA,GACE,OAAOT,GAAkB,SACrBA,GACAQ,EAAAR,EAAc,WAAd,KAAAQ,EAA0B,KAElC,EAEK,IAAM,CACPC,GAAGA,EAAE,MAAM,YAAY,WAAY,KAAK,CAC9C,CACF,EAAG,CAACT,CAAa,CAAC,EAGhBU,EAAC,OACC,IAAKL,EACL,UAAWM,EAAGC,EAAO,QAASd,EAAkB,CAC9C,CAACc,EAAO,SAAS,EAAGb,IAAU,WAAaA,IAAU,QACvD,CAAC,EACA,GAAGE,EAEJ,SAAAS,EAAC,MACC,CAAA,UAAWC,EACT,sCACAC,EAAO,KACPhB,CACF,EACA,SAAU,GAET,SAAAC,CACH,CAAA,CAAA,CACF,CAEJ,CAAC,ECrDKgB,GAAiBC,GAAmC,IAAK,EAElDC,GAA8D,CAAC,CAC1E,SAAAlB,EACA,GAAGI,CACL,IACES,EAACG,GAAe,SAAf,CAAwB,MAAOZ,EAAQ,SAAAJ,CAAS,CAAA,EAGtCmB,GAAoB,IAAMC,GAAWJ,EAAc,ECoB1DK,GAEF,CAAC,CACH,KAAAC,EACA,SAAAtB,EACA,WAAAuB,EAAa,8BACb,UAAAxB,CACF,IAAM,CACJ,MAAMM,EAAME,EAAuB,IAAI,EACvC,OACEM,EAACW,EAAA,CACC,GAAIF,EACJ,aAAY,GACZ,cAAa,GACb,QAAS,IACT,QAASjB,EAER,SAACH,GACAW,EAAC,MAAA,CACC,MAAO,CACL,WAAAU,CACF,EACA,UAAWT,EAAGC,EAAO,QAAShB,EAAW,CACvC,CAACgB,EAAO,SAAS,EAAGb,IAAU,WAAaA,IAAU,QACvD,CAAC,EACD,IAAKG,EAEJ,SAAAL,CAAAA,CACH,CAEJ,CAAA,CAEJ,EAwBayB,GAA4B,CAAC,CACxC,SAAAzB,EACA,QAAA0B,EACA,QAAAC,EACA,OAAAC,EACA,cAAAC,EACA,QAASC,EACT,YAAaC,EACb,UAAAC,EACA,WAAAC,EACA,OAAQ9B,EAAgB,EACxB,SAAA+B,EACA,aAAAC,EACA,YAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,SAAAC,CACF,IAAM,CACJ,KAAM,CAACjB,EAAMkB,CAAO,EAAIC,GAAc,GAAO,MAAM,EAE7CC,EAAOC,GAAAA,EACPC,EAASC,GAAkB,EAG3B,CAAE,EAAAC,EAAG,EAAAC,EAAG,UAAAC,EAAW,SAAAC,EAAU,SAAAC,EAAU,QAAAC,CAAQ,EAAIC,EAAY,CACnE,UAAApB,EACA,WAAY,CACVqB,EAAOlD,CAAa,EACpBmD,EAAAA,EACAC,EAAM,CAAE,QAAS,CAAE,KAAM,EAAG,MAAO,CAAE,CAAE,CAAC,CAC1C,EACA,KAAMjC,EACN,aAAekC,GAAY,CACrBA,GAAW,OAAO5B,GAAW,YAAYA,EACzC,EAAA,CAAC4B,GAAW,OAAO7B,GAAY,YAAYA,EAAQ,EACvDa,EAAQgB,CAAO,CACjB,EACA,qBAAsBC,EACtB,OAAAb,CACF,CAAC,EAEK,CAAE,kBAAAc,EAAmB,iBAAAC,CAAiB,EAAIC,EAAgB,CAC9DC,EAASV,CAAO,EAChBW,EAAWX,EAAS,CAAE,UAAW,GAAO,QAAS,EAAM,CAAC,EACxDY,GAAiBZ,CAAO,CAC1B,CAAC,EAEK,CAACa,EAAaC,CAAc,EAAIC,EAASnC,CAAmB,EAC5D,CAACoC,GAASC,EAAU,EAAIF,EAASpC,CAAe,EAEhDzB,GAAMI,EAAa,CAACuC,EAAYtB,EAAgB,GAAG,CAAC,EAEpD2C,EAAgB9D,EAAuB,IAAI,EAC3C+D,EAAc7D,EAA6B,CAAC4D,EAAepB,CAAQ,CAAC,EAEpE,CAAE,KAAAsB,GAAM,GAAAC,EAAG,EAAIC,GAAmB,CACtC,KAAMxC,EACN,SAAAM,EACA,iBAAkB,sBACpB,CAAC,EAEKmC,GAAUC,EAAY,IAAMnC,EAAQ,EAAK,EAAG,CAACA,CAAO,CAAC,EAC3D,OAAIN,IAAUA,EAAS,QAAUwC,IAG/BE,EAAAC,EAAA,CACG,SAAA,CAAAC,GACCpD,EACAgC,EAAkB,CAChB,IAAArD,GACA,GAAGqB,EAAQ,MACX,UAAWZ,EACTY,EAAQ,MAAM,UACdG,EAAgB,CAAE,CAACA,CAAa,EAAGP,CAAK,EAAI,MAC9C,CACF,CAAC,CACH,EACAT,EAACkE,GAAA,CAAoB,WAAY,CAACrC,EAAM,SAAU8B,GAAI,WAAYD,GAChE,SAAA1D,EAACmE,GAAA,CAAa,GAAIpC,EAChB,SAAA/B,EAACW,EAAA,CACC,GAAIF,EACJ,aAAY,GACZ,cAAa,GACb,QAAS,IACT,QAAS+C,EAER,SAACnE,GACAW,EAACoE,GAAA,CACC,MAAO,CAAE,OAAQ,uCAAwC,EACzD,GAAIrC,EAEJ,SAAA/B,EAACqE,EAAA,CACC,QAAS/B,EACT,aAAchB,GAAiBmC,EAC/B,OAAQlC,EACR,MAAOC,EACP,gBAAiBC,EAEjB,SAAAzB,EAAChB,EAAA,CACC,IAAKyE,EACL,MAAO,CACL,SAAUpB,EACV,IAAKH,GAAK,EACV,KAAMD,GAAK,CACb,EACA,MAAO5C,EACP,OAAQC,EACP,GAAGwD,EAAiB,EAErB,SAAAiB,EAAC1D,GAAA,CACC,gBAAiB+C,EACjB,WAAYG,GAEZ,SAAAvD,CAAAA,EAACQ,GAAA,CAAQ,KAAM2C,GAAe,GAAQ,SAAAG,EAAQ,CAAA,EAC7CnE,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,ECvNamF,GAAerF,EAC1B,CAAC,CAAE,UAAAC,EAAW,OAAAqF,EAAQ,GAAGhF,CAAM,EAAGC,IAE9BuE,EAAAC,EAAA,CACE,SAAAhE,CAAAA,EAAC,KACC,CAAA,IAAKR,EACL,UAAWS,EAAG,mBAAoBf,CAAS,EAC1C,GAAGK,EACN,EACC,CAACgF,GAAUvE,EAAC,KAAG,CAAA,UAAU,kBAAkB,CAC9C,CAAA,CAAA,CAGN,EAEAsE,GAAa,YAAc,eCuBpB,SAASE,GAAW,CACzB,QAAA1D,EACA,OAAAC,EACA,iBAAA0D,EAAmBzF,EACnB,UAAAmC,EACA,aAAAG,EACA,YAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,OAAQnC,EAAgB,EACxB,WAAA8B,EACA,SAAAM,CACF,EAAY,CACV,KAAM,CAACjB,EAAMkB,CAAO,EAAIC,GAAc,GAAO,MAAM,EAE7C,CAAE,EAAAK,EAAG,EAAAC,EAAG,UAAAC,EAAW,SAAAC,EAAU,SAAAC,EAAU,QAAAC,EAAS,KAAAoC,CAAK,EAAInC,EAAY,CACzE,UAAApB,EACA,WAAY,CACVqB,EAAOlD,CAAa,EACpBmD,EAAK,EACLC,EAAM,CAAE,QAAS,CAAE,KAAM,EAAG,MAAO,CAAE,CAAE,CAAC,CAC1C,EACA,KAAMjC,EACN,aAAekC,GAAY,CACrBA,GAAW,OAAO5B,GAAW,YAAYA,IACzC,CAAC4B,GAAW,OAAO7B,GAAY,YAAYA,EAAQ,EACvDa,EAAQgB,CAAO,CACjB,EACA,qBAAsBC,CACxB,CAAC,EAEK,CAAE,kBAAAC,EAAmB,iBAAAC,CAAiB,EAAIC,EAAgB,CAC9DC,EAASV,CAAO,EAChBW,EAAWX,EAAS,CAAE,QAAS,GAAO,UAAW,EAAM,CAAC,EACxDY,GAAiBZ,CAAO,CAC1B,CAAC,EAEKuB,EAAUC,EAAY,IAAMnC,EAAQ,EAAK,EAAG,CAACA,CAAO,CAAC,EACrDgD,EAASb,EAAY,IAAMnC,EAAQ,EAAI,EAAG,CAACA,CAAO,CAAC,EAEnD6B,EAAgB9D,EAAuB,IAAI,EAC3C+D,EAAc7D,EAA6B,CAAC4D,EAAepB,CAAQ,CAAC,EAEpE,CAAE,KAAAsB,EAAM,GAAAC,CAAG,EAAIC,GAAmB,CACtC,KAAMxC,EACN,SAAAM,EACA,iBAAkB,sBACpB,CAAC,EAuCD,MAAO,CACL,kBAAAmB,EACA,UAAAV,EACA,OAxCcyC,GAEZ5E,EAAC6E,GAAA,CAAe,KAAMnB,EAAM,GAAIC,EAC9B,SAAA3D,EAACW,EAAA,CACC,GAAIF,EACJ,aAAY,GACZ,cAAa,GACb,QAAS,IACT,QAAS+C,EAER,SAACnE,GACAW,EAACqE,EAAA,CACC,QAAS/B,EACT,aAAchB,GAAiBc,EAC/B,OAAQb,EACR,MAAOC,EACP,gBAAiBC,EAEhB,SAAAqD,GACCL,EACA,CACE,IAAKhB,EACL,MAAApE,EACA,OAAQC,EACR,GAAGwD,EAAiB,CAClB,MAAO,CAAE,SAAUT,EAAU,IAAKH,GAAK,EAAG,KAAMD,GAAK,CAAE,CACzD,CAAC,CACH,EACA2C,CACF,EACF,CAEJ,CAAA,CAAA,CACF,EAQF,QAASnE,EACT,KAAAiE,EACA,MAAOb,EACP,KAAMc,CACR,CACF"}