{"version":3,"file":"index.js","sources":["../../src/InputChips/InputChips.tsx"],"sourcesContent":["import React, {\n  HTMLProps,\n  ReactNode,\n  useState,\n  useCallback,\n  useEffect,\n} from \"react\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\nimport { Label, LabelColor } from \"src/Label\";\nimport { InputHelpBlock, InputHelpBaloon } from \"src/InputHelp\";\n\nimport { appendClass as ac } from \"src/utils\";\n\nimport \"../../css/chips.css\";\n\nexport type InputChipsProps = {\n  label?: ReactNode;\n  chipsColor?: LabelColor;\n  addOnBlur?: boolean;\n  allowRepeat?: boolean;\n  allowRegex?: string;\n  delimiters?: string | number[];\n  valueValidator?: (value: any) => boolean;\n  maxChips?: number;\n  baloon?: string;\n  className?: string;\n  id?: string;\n  error?: ReactNode;\n  value?: string[];\n  outerWrap?: boolean;\n  onChange?: (newValue: string[]) => void;\n  onChipRemove?: (idx: number) => void;\n  chipsOutside?: boolean;\n  noInput?: boolean;\n  renderChip?: (params: {\n    onDelete: () => unknown;\n    value: string;\n    idx: number;\n  }) => JSX.Element;\n};\n\nexport type FullInputChipsProps = InputChipsProps &\n  Omit<HTMLProps<HTMLInputElement>, \"id\" | \"value\" | \"onChange\" | \"label\">;\n\nconst emptyList: string[] = [];\n\nexport const InputChips = React.forwardRef<HTMLDivElement, FullInputChipsProps>(\n  (\n    {\n      chipsColor = \"light\",\n      addOnBlur = true,\n      delimiters = [13],\n      label = null,\n      allowRepeat = false,\n      allowRegex = null,\n      valueValidator = null,\n      maxChips = null,\n      baloon = null,\n      className = null,\n      id = null,\n      error = null,\n      value: initialValue = null,\n      onChange,\n      outerWrap = true,\n      chipsOutside = false,\n      renderChip = null,\n      onBlur = null,\n      onChipRemove = null,\n      onClick,\n      noInput,\n      ...input\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState<string[]>(emptyList);\n\n    useEffect(() => {\n      setValue((curr) => initialValue || curr || emptyList);\n    }, [initialValue]);\n\n    const addValue = useCallback(\n      (v) => {\n        if (typeof valueValidator === \"function\") {\n          if (!valueValidator(v)) return;\n        }\n        setValue((curr) => {\n          if (allowRepeat || !(curr || []).includes(v)) {\n            const n = (curr || []).concat(v);\n            if (typeof onChange === \"function\") onChange(n);\n            return n;\n          } else return curr;\n        });\n      },\n      [allowRepeat, valueValidator, onChange]\n    );\n\n    const handleKeyDown = useCallback(\n      (event) => {\n        let d = delimiters;\n        if (typeof d === \"string\") {\n          const { map } = Array.prototype;\n          d = map.call(d, (ch) => ch.charCodeAt(0));\n        }\n\n        if (Array.isArray(d) && d.includes(event.keyCode)) {\n          addValue(event.target.value);\n          event.target.value = \"\";\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      },\n      [delimiters, addValue]\n    );\n\n    const handleBlur = useCallback(\n      (event) => {\n        if (addOnBlur && event.target?.value) {\n          const { value } = event.target;\n          if (allowRegex && RegExp(allowRegex).test(value)) {\n            addValue(value);\n          } else if (!allowRegex) {\n            addValue(value);\n          }\n        }\n        event.target.value = \"\";\n        if (typeof onBlur === \"function\") onBlur(event);\n      },\n      [addOnBlur, allowRegex, addValue, onBlur]\n    );\n\n    const handleDelete = useCallback(\n      (idx) => {\n        setValue((curr) => {\n          curr.splice(idx, 1);\n          if (typeof onChange === \"function\") onChange(curr.slice());\n          return curr.slice();\n        });\n        if (typeof onChipRemove === \"function\") onChipRemove(idx);\n      },\n      [onChange, onChipRemove]\n    );\n\n    const showInput =\n      (!maxChips ||\n        (maxChips && Array.isArray(value) && value.length < maxChips)) &&\n      !noInput;\n\n    return (\n      <ConditionalWrapper\n        wrapper={\n          <div\n            className={`form-group${ac(className)}${ac(\n              error,\n              \"form-group--error\"\n            )}`}\n            ref={ref}\n          ></div>\n        }\n        condition={outerWrap}\n      >\n        <div\n          className={`form-group__text chips${ac(\n            !outerWrap && className,\n            className\n          )}`}\n        >\n          {label ? (\n            <label htmlFor={id || input.name}>\n              {label}\n              {baloon ? <InputHelpBaloon baloon={baloon} /> : null}\n            </label>\n          ) : null}\n          {chipsOutside && Array.isArray(value) && value.length ? (\n            <span className=\"chips-outer qtr-margin-bottom\">\n              <span className=\"chips-inner\">\n                {value.map((v, i) =>\n                  renderChip ? (\n                    renderChip({\n                      value: v,\n                      idx: i,\n                      onDelete: () => handleDelete(i),\n                    })\n                  ) : (\n                    <Label\n                      removable\n                      onRemove={() => handleDelete(i)}\n                      color={chipsColor}\n                      size=\"small\"\n                      key={`${v}-${i}`}\n                      className=\"no-margin-bottom\"\n                    >\n                      {v}\n                    </Label>\n                  )\n                )}\n              </span>\n            </span>\n          ) : null}\n          <div\n            className={`input ${ac(!showInput, \"dbl-padding-right\")}`}\n            onClick={onClick}\n          >\n            {!chipsOutside && Array.isArray(value) && value.length ? (\n              <span className=\"chips-outer\">\n                <span className=\"chips-inner\">\n                  {value.map((v, i) =>\n                    renderChip ? (\n                      renderChip({\n                        value: v,\n                        idx: i,\n                        onDelete: () => handleDelete(i),\n                      })\n                    ) : (\n                      <Label\n                        removable\n                        onRemove={(e: MouseEvent) => {\n                          e.stopPropagation();\n                          e.preventDefault();\n                          handleDelete(i);\n                        }}\n                        color={chipsColor}\n                        size=\"small\"\n                        key={`${v}-${i}`}\n                        className=\"no-margin-bottom\"\n                      >\n                        {v}\n                      </Label>\n                    )\n                  )}\n                </span>\n              </span>\n            ) : null}\n            {showInput ? (\n              <input\n                type=\"text\"\n                onKeyDown={handleKeyDown}\n                onBlur={handleBlur}\n                id={id || input.name}\n                {...input}\n              />\n            ) : null}\n          </div>\n        </div>\n        {error ? <InputHelpBlock text={error} /> : null}\n      </ConditionalWrapper>\n    );\n  }\n);\n"],"names":["emptyList","InputChips","React","forwardRef","ref","chipsColor","addOnBlur","delimiters","label","allowRepeat","allowRegex","valueValidator","maxChips","baloon","className","id","error","initialValue","value","onChange","outerWrap","chipsOutside","renderChip","onBlur","onChipRemove","onClick","noInput","input","useState","setValue","useEffect","curr","addValue","useCallback","v","includes","n","concat","handleKeyDown","event","d","map","Array","prototype","call","ch","charCodeAt","isArray","keyCode","target","stopPropagation","preventDefault","handleBlur","RegExp","test","handleDelete","idx","splice","slice","showInput","length","ConditionalWrapper","wrapper","div","ac","condition","htmlFor","name","InputHelpBaloon","span","i","onDelete","Label","removable","onRemove","color","size","key","e","type","onKeyDown","InputHelpBlock","text"],"mappings":"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"}