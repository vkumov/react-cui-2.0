{"version":3,"file":"index.js","sources":["../../src/Steps/Step.tsx","../../src/Steps/Steps.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype StepProps = {\n  icon?: ReactNode;\n  children: ReactNode;\n  visited?: boolean;\n  active?: boolean;\n  className?: string;\n  consequativeIdx?: number;\n};\n\nexport const Step = forwardRef<HTMLDivElement, StepProps>(\n  (\n    {\n      visited = false,\n      active = false,\n      className = null,\n      icon,\n      children,\n      consequativeIdx,\n    },\n    ref\n  ) => (\n    <div\n      className={`step${ac(visited, \"visited\")}${ac(active, \"active\")}${ac(\n        className\n      )}`}\n      ref={ref}\n    >\n      <div className=\"step__icon\">{icon ?? consequativeIdx}</div>\n      <div className=\"step__label\">{children}</div>\n    </div>\n  )\n);\n","import React, { forwardRef, isValidElement, ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype StepsProps = {\n  size?: \"dot\" | \"small\" | \"default\" | \"large\";\n  color?: \"primary\" | \"secondary\" | \"success\" | \"dark\";\n  vertical?: boolean;\n  className?: string;\n  children: ReactNode;\n};\n\nexport const Steps = forwardRef<HTMLDivElement, StepsProps>(\n  (\n    {\n      size = \"default\",\n      color = \"primary\",\n      vertical = false,\n      className = null,\n      children,\n    },\n    ref\n  ) => (\n    <div\n      className={`steps${ac(\n        size !== \"default\",\n        `steps--${size}`\n      )} steps--${color}${ac(vertical, \"steps--vertical\")}${ac(className)}`}\n      ref={ref}\n    >\n      {React.Children.toArray(children)\n        .filter(Boolean)\n        .map((child, idx) =>\n          isValidElement(child)\n            ? React.cloneElement(child, { consequativeIdx: idx + 1 })\n            : child\n        )}\n    </div>\n  )\n);\n"],"names":["Step","forwardRef","ref","visited","active","className","icon","children","consequativeIdx","div","ac","Steps","size","color","vertical","React","Children","toArray","filter","Boolean","map","child","idx","isValidElement","cloneElement"],"mappings":"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"}