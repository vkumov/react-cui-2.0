{"version":3,"file":"index.js","sources":["../../src/Steps/Step.tsx","../../src/Steps/Steps.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype StepProps = {\n  icon?: ReactNode;\n  children: ReactNode;\n  visited?: boolean;\n  active?: boolean;\n  className?: string;\n  consequativeIdx?: number;\n};\n\nexport const Step = forwardRef<HTMLDivElement, StepProps>(\n  (\n    {\n      visited = false,\n      active = false,\n      className = null,\n      icon,\n      children,\n      consequativeIdx,\n    },\n    ref\n  ) => (\n    <div\n      className={`step${ac(visited, \"visited\")}${ac(active, \"active\")}${ac(\n        className\n      )}`}\n      ref={ref}\n    >\n      <div className=\"step__icon\">{icon ?? consequativeIdx}</div>\n      <div className=\"step__label\">{children}</div>\n    </div>\n  )\n);\n","import React, { forwardRef, isValidElement, ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype StepsProps = {\n  size?: \"dot\" | \"small\" | \"default\" | \"large\";\n  color?: \"primary\" | \"secondary\" | \"success\" | \"dark\";\n  vertical?: boolean;\n  className?: string;\n  children: ReactNode;\n};\n\nexport const Steps = forwardRef<HTMLDivElement, StepsProps>(\n  (\n    {\n      size = \"default\",\n      color = \"primary\",\n      vertical = false,\n      className = null,\n      children,\n    },\n    ref\n  ) => (\n    <div\n      className={`steps${ac(\n        size !== \"default\",\n        `steps--${size}`\n      )} steps--${color}${ac(vertical, \"steps--vertical\")}${ac(className)}`}\n      ref={ref}\n    >\n      {React.Children.toArray(children)\n        .filter(Boolean)\n        .map((child, idx) =>\n          isValidElement(child)\n            ? React.cloneElement<any>(child, { consequativeIdx: idx + 1 })\n            : child\n        )}\n    </div>\n  )\n);\n"],"names":["Step","forwardRef","visited","active","className","icon","children","consequativeIdx","ref","div","ac","Steps","size","color","vertical","React","Children","toArray","filter","Boolean","map","child","idx","isValidElement","cloneElement"],"mappings":";;;AAaO,MAAMA,IAAOC,iBAAAA,UAAAA,CAClB,CACE,EACEC,SAAU,KAAK,GACfC,MAAAA,EAAS,KAAK,GACdC,SAAY,EAAA,IAAI,GAChBC,IAAI,GACJC,QAAQ,GACRC,eAAe,GAChB,EACDC,GAAAA,iBAEA,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AACCL,QAAAA,SAAAA,EAAW,CAAC,IAAI,EAAEM,WAAAA,CAAGR,OAAS,EAAA,SAAA,CAAA,CAAW,EAAEQ,WAAAA,CAAGP,MAAQ,EAAA,QAAA,CAAA,CAAU,EAAEO,WAAAA,CAChEN,WACA,CAAC;QACHI,GAAKA,EAAAA,GAAAA;qBAEL,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,YAAA;AAAcC,KAAAA,EAAAA,IAAAA,KAAAA,IAAAA,IAAAA,IAAAA,KAAAA,KAAAA,CAAAA,GAAAA,IAAAA,GAAQE,eAAe,CAAA,gBACpD,KAACE,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,aAAA;OAAeE,QAGlC,CAAA,CAAA;;ACvBK,MAAMK,sBAAQV,UACnB,CAAA,CACE,EACEW,IAAO,EAAA,SAAA,GACPC,KAAAA,EAAQ,SAAS,GACjBC,UAAW,KAAK,GAChBV,SAAAA,EAAY,IAAI,GAChBE,QAAQ,GACT,EACDE,GAAAA,iBAEA,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QACCL,SAAW,EAAA,CAAC,KAAK,EAAEM,WAAAA,CACjBE,SAAS,SACT,EAAA,CAAC,OAAO,EAAEA,IAAK,CAAA,CAAC,EAChB,QAAQ,EAAEC,MAAM,EAAEH,WAAAA,CAAGI,UAAU,iBAAmB,CAAA,CAAA,EAAEJ,WAAGN,CAAAA,SAAAA,CAAAA,CAAW,CAAC;QACrEI,GAAKA,EAAAA,GAAAA;AAEJO,KAAAA,EAAAA,KAAAA,CAAMC,QAAQ,CAACC,OAAO,CAACX,QACrBY,CAAAA,CAAAA,MAAM,CAACC,OACPC,CAAAA,CAAAA,GAAG,CAAC,CAACC,OAAOC,GACXC,iBAAAA,cAAAA,CAAeF,uBACXN,KAAMS,CAAAA,YAAY,CAAMH,KAAO,EAAA;AAAEd,YAAAA,eAAAA,EAAiBe,GAAM,GAAA,CAAA;AAAE,SAAA,CAAA,GAC1DD,KAAK,CAIjB,CAAA;;;;"}