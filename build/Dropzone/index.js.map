{"version":3,"file":"index.js","sources":["../../src/Dropzone/Dropzone.tsx"],"sourcesContent":["import React, { useMemo, type FC, type ReactNode } from \"react\";\nimport bytes from \"bytes\";\nimport cx from \"classnames\";\nimport ReactDropzone, {\n  type DropzoneProps as ReactDropzoneProps,\n} from \"react-dropzone\";\nimport useEvent from \"react-use-event-hook\";\n\nimport \"../../css/dropzone.css\";\n\ntype FileCardProps = {\n  file: any;\n  i: number;\n  removeFile: (i: number) => void;\n  inline: boolean;\n};\n\nconst FileCard: FC<FileCardProps> = ({ file, i, removeFile, inline }) => (\n  <div\n    className=\"file-drop__card col-lg-4 col-md-6 col-sm-6\"\n    key={`${i}-${file.name}`}\n  >\n    <div\n      className=\"panel panel--bordered hover-emboss--small\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      {inline ? (\n        <div className=\"panel__body flex flex-row\">\n          <div\n            className=\"text-left flex-fill\"\n            style={{ maxWidth: \"calc(100% - 20px)\" }}\n          >\n            <div className=\"text-ellipsis\">{file.name}</div>\n            <small style={{ whiteSpace: \"nowrap\" }}>\n              {bytes.format(file.size, { unitSeparator: \" \" })}\n            </small>\n          </div>\n          <a className=\"link pull-right\" onClick={() => removeFile(i)}>\n            <span className=\"icon-close\" title=\"Remove the file.\" />\n          </a>\n        </div>\n      ) : (\n        <div className=\"panel__body\">\n          <a\n            className=\"link pull-right\"\n            style={{ marginRight: \"5px\" }}\n            onClick={() => removeFile(i)}\n          >\n            <span className=\"icon-close\" title=\"Remove the file.\" />\n          </a>\n          <div className=\"text-ellipsis half-margin-bottom\">{file.name}</div>\n          <span className=\"file-icon text-muted icon-file-o qtr-margin-right\" />\n          <small>{bytes.format(file.size, { unitSeparator: \" \" })}</small>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport type DropzoneProps = {\n  name: string;\n  value?: any[];\n  maxFiles?: number;\n  inline?: boolean;\n  showTotalSelected?: boolean;\n  accept?: string;\n  loose?: boolean;\n  compressed?: boolean;\n  label: string;\n  multiple: boolean;\n  error?: ReactNode;\n  maxFileSize?: string | number;\n  onChange?: (value: File[]) => void;\n};\n\nconst DropzoneMessage: FC<\n  Pick<DropzoneProps, \"inline\" | \"accept\"> & { maxFileSize: number }\n> = ({ inline, accept, maxFileSize }) => {\n  if (inline) {\n    return (\n      <div className=\"dropzone-message flex flex-row flex-center-vertical\">\n        <h5 className=\"text-muted text-left flex-fill no-margin\">\n          Click Here or Drop Files to Upload\n        </h5>\n        {accept && (\n          <span className=\"text-muted text-small half-margin-right\">\n            {\"Allowed files: \"}\n            {typeof accept === \"string\" ? accept.split(\",\").join(\", \") : accept}\n          </span>\n        )}\n        <span className=\"file-drop__icon icon-upload\"></span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dropzone-message\">\n      <span className=\"file-drop__icon icon-upload\"></span>\n      <h4 className=\"text-muted\">Click Here or Drop Files to Upload</h4>\n      {accept && (\n        <div className=\"text-muted\">\n          Allowed files: {accept.split(\",\").join(\", \")}\n        </div>\n      )}\n      {maxFileSize && (\n        <div className=\"text-muted\">\n          Max file size: {bytes.format(maxFileSize, { unitSeparator: \" \" })}\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype DropzoneFilesProps = {\n  files?: File[];\n  removeFile: (toRemove: number) => void;\n};\n\nconst DropzoneFiles: FC<\n  DropzoneFilesProps &\n    Required<Pick<DropzoneProps, \"inline\" | \"showTotalSelected\">>\n> = ({ files, inline, showTotalSelected, removeFile }) => {\n  if (!Array.isArray(files) || !files.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"dropzone-previews\">\n      <div className=\"file-drop__container container--fluid\">\n        <div className=\"row\">\n          {files.map((file, i) => (\n            <FileCard\n              key={i}\n              file={file}\n              i={i}\n              inline={inline}\n              removeFile={removeFile}\n            />\n          ))}\n        </div>\n      </div>\n      {showTotalSelected ? (\n        <div className=\"file-drop__filecnt\">{files.length} selected</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport const Dropzone: FC<DropzoneProps & ReactDropzoneProps> = ({\n  error,\n  loose,\n  compressed,\n  inline,\n  label,\n  name,\n  value,\n  maxFileSize: customMaxFileSize,\n  maxFiles,\n  onChange,\n  showTotalSelected,\n  ...props\n}) => {\n  const maxFileSize = useMemo(() => {\n    if (customMaxFileSize) {\n      return bytes.parse(customMaxFileSize);\n    } else {\n      return null;\n    }\n  }, [customMaxFileSize]);\n\n  const padding = useMemo(() => {\n    let tmp = \"\";\n    if (loose) tmp = \"dropzone--loose\";\n    if (compressed) tmp = \"dropzone--compressed\";\n    if (inline && Array.isArray(value) && value.length) {\n      switch (tmp) {\n        case \"dropzone--loose\":\n          tmp = `${tmp} half-padding-bottom`;\n          break;\n        case \"dropzone--compressed\":\n          tmp = `${tmp} no-padding-bottom`;\n          break;\n        default:\n          tmp = `${tmp} qtr-padding-bottom`;\n          break;\n      }\n    }\n    return tmp;\n  }, [loose, compressed, value, inline]);\n\n  const handleDrop = useEvent((filesToUpload: File[]) => {\n    if (maxFileSize)\n      filesToUpload = filesToUpload.filter((file) => file.size <= maxFileSize);\n\n    if (maxFiles && filesToUpload.length > maxFiles)\n      filesToUpload = filesToUpload.slice(0, maxFiles);\n\n    onChange(filesToUpload);\n  });\n\n  const removeFile = (toRemove: number) => {\n    onChange(\n      Array.isArray(value) ? value.filter((_, idx) => toRemove !== idx) : value\n    );\n  };\n\n  return (\n    <div className={cx(\"form-group\", { \"form-group--error\": error })}>\n      <div className=\"form-group__text\">\n        {label ? <label htmlFor={name}>{label}</label> : null}\n        <ReactDropzone {...props} onDrop={handleDrop} maxSize={maxFileSize}>\n          {({ getRootProps, getInputProps }) => (\n            <div className={`dropzone ${padding}`} {...getRootProps()}>\n              <input {...getInputProps()} />\n              <DropzoneFiles\n                files={value}\n                showTotalSelected={showTotalSelected}\n                inline={inline}\n                removeFile={removeFile}\n              />\n              {Array.isArray(value) && value.length ? null : (\n                <DropzoneMessage\n                  maxFileSize={maxFileSize}\n                  inline={inline}\n                  accept={props.accept}\n                />\n              )}\n            </div>\n          )}\n        </ReactDropzone>\n      </div>\n      {error ? (\n        <div className=\"help-block text-danger\" role=\"alert\">\n          <span>{error}</span>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n"],"names":["FileCard","file","i","removeFile","inline","React","e","bytes","DropzoneMessage","accept","maxFileSize","DropzoneFiles","files","showTotalSelected","Dropzone","error","loose","compressed","label","name","value","customMaxFileSize","maxFiles","onChange","props","useMemo","padding","tmp","handleDrop","useEvent","filesToUpload","toRemove","_","idx","cx","ReactDropzone","getRootProps","getInputProps"],"mappings":"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"}