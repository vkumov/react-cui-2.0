{"version":3,"file":"index.js","sources":["../../src/Dropzone/Dropzone.tsx"],"sourcesContent":["import React, { FC, ReactNode, useCallback, useMemo } from \"react\";\nimport ReactDropzone, {\n  DropzoneProps as ReactDropzoneProps,\n} from \"react-dropzone\";\nimport bytes from \"bytes\";\n\nimport { appendClass as ac } from \"src/utils\";\nimport \"../../css/dropzone.css\";\n\ntype FileCardProps = {\n  file: any;\n  i: number;\n  removeFile: (i: number) => void;\n  inline: boolean;\n};\n\nconst FileCard: FC<FileCardProps> = ({ file, i, removeFile, inline }) => (\n  <div\n    className=\"file-drop__card col-lg-4 col-md-6 col-sm-6\"\n    key={`${i}-${file.name}`}\n  >\n    <div\n      className=\"panel panel--bordered hover-emboss--small\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      {inline ? (\n        <div className=\"panel__body flex flex-row\">\n          <div\n            className=\"text-left flex-fill\"\n            style={{ maxWidth: \"calc(100% - 20px)\" }}\n          >\n            <div className=\"text-ellipsis\">{file.name}</div>\n            <small style={{ whiteSpace: \"nowrap\" }}>\n              {bytes.format(file.size, { unitSeparator: \" \" })}\n            </small>\n          </div>\n          <a className=\"link pull-right\" onClick={() => removeFile(i)}>\n            <span className=\"icon-close\" title=\"Remove the file.\" />\n          </a>\n        </div>\n      ) : (\n        <div className=\"panel__body\">\n          <a\n            className=\"link pull-right\"\n            style={{ marginRight: \"5px\" }}\n            onClick={() => removeFile(i)}\n          >\n            <span className=\"icon-close\" title=\"Remove the file.\" />\n          </a>\n          <div className=\"text-ellipsis half-margin-bottom\">{file.name}</div>\n          <span className=\"file-icon text-muted icon-file-o qtr-margin-right\" />\n          <small>{bytes.format(file.size, { unitSeparator: \" \" })}</small>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport type DropzoneProps = {\n  name: string;\n  value?: any[];\n  maxFiles?: number;\n  inline?: boolean;\n  showTotalSelected?: boolean;\n  accept?: string;\n  loose?: boolean;\n  compressed?: boolean;\n  label: string;\n  multiple: boolean;\n  error?: ReactNode;\n  maxFileSize?: string | number;\n  onChange?: (value: File[]) => void;\n};\n\nconst DropzoneMessage: FC<\n  Pick<DropzoneProps, \"inline\" | \"accept\"> & { maxFileSize: number }\n> = ({ inline, accept, maxFileSize }) => {\n  if (inline) {\n    return (\n      <div className=\"dropzone-message flex flex-row flex-center-vertical\">\n        <h5 className=\"text-muted text-left flex-fill no-margin\">\n          Click Here or Drop Files to Upload\n        </h5>\n        {accept && (\n          <span className=\"text-muted text-small half-margin-right\">\n            {\"Allowed files: \"}\n            {typeof accept === \"string\" ? accept.split(\",\").join(\", \") : accept}\n          </span>\n        )}\n        <span className=\"file-drop__icon icon-upload\"></span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dropzone-message\">\n      <span className=\"file-drop__icon icon-upload\"></span>\n      <h4 className=\"text-muted\">Click Here or Drop Files to Upload</h4>\n      {accept && (\n        <div className=\"text-muted\">\n          Allowed files: {accept.split(\",\").join(\", \")}\n        </div>\n      )}\n      {maxFileSize && (\n        <div className=\"text-muted\">\n          Max file size: {bytes.format(maxFileSize, { unitSeparator: \" \" })}\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype DropzoneFilesProps = {\n  files?: File[];\n  removeFile: (toRemove: number) => void;\n};\n\nconst DropzoneFiles: FC<\n  DropzoneFilesProps &\n    Required<Pick<DropzoneProps, \"inline\" | \"showTotalSelected\">>\n> = ({ files, inline, showTotalSelected, removeFile }) => {\n  if (!Array.isArray(files) || !files.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"dropzone-previews\">\n      <div className=\"file-drop__container container--fluid\">\n        <div className=\"row\">\n          {files.map((file, i) => (\n            <FileCard\n              key={i}\n              file={file}\n              i={i}\n              inline={inline}\n              removeFile={removeFile}\n            />\n          ))}\n        </div>\n      </div>\n      {showTotalSelected ? (\n        <div className=\"file-drop__filecnt\">{files.length} selected</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport const Dropzone: FC<DropzoneProps & ReactDropzoneProps> = ({\n  error,\n  loose,\n  compressed,\n  inline,\n  label,\n  name,\n  value,\n  maxFileSize: customMaxFileSize,\n  maxFiles,\n  onChange,\n  showTotalSelected,\n  ...props\n}) => {\n  const maxFileSize = useMemo(() => {\n    if (customMaxFileSize) {\n      return bytes.parse(customMaxFileSize);\n    } else {\n      return null;\n    }\n  }, [customMaxFileSize]);\n\n  const padding = useMemo(() => {\n    let tmp = \"\";\n    if (loose) tmp = \"dropzone--loose\";\n    if (compressed) tmp = \"dropzone--compressed\";\n    if (inline && Array.isArray(value) && value.length) {\n      switch (tmp) {\n        case \"dropzone--loose\":\n          tmp = `${tmp} half-padding-bottom`;\n          break;\n        case \"dropzone--compressed\":\n          tmp = `${tmp} no-padding-bottom`;\n          break;\n        default:\n          tmp = `${tmp} qtr-padding-bottom`;\n          break;\n      }\n    }\n    return tmp;\n  }, [loose, compressed, value, inline]);\n\n  const handleDrop = useCallback(\n    (filesToUpload: File[]) => {\n      if (maxFileSize)\n        filesToUpload = filesToUpload.filter(\n          (file) => file.size <= maxFileSize\n        );\n\n      if (maxFiles && filesToUpload.length > maxFiles)\n        filesToUpload = filesToUpload.slice(0, maxFiles);\n\n      onChange(filesToUpload);\n    },\n    [maxFileSize, maxFiles, onChange]\n  );\n\n  const removeFile = (toRemove: number) => {\n    onChange(\n      Array.isArray(value) ? value.filter((_, idx) => toRemove !== idx) : value\n    );\n  };\n\n  return (\n    <div className={`form-group${ac(error, \"form-group--error\")}`}>\n      <div className=\"form-group__text\">\n        {label ? <label htmlFor={name}>{label}</label> : null}\n        <ReactDropzone {...props} onDrop={handleDrop} maxSize={maxFileSize}>\n          {({ getRootProps, getInputProps }) => (\n            <div className={`dropzone ${padding}`} {...getRootProps()}>\n              <input {...getInputProps()} />\n              <DropzoneFiles\n                files={value}\n                showTotalSelected={showTotalSelected}\n                inline={inline}\n                removeFile={removeFile}\n              />\n              {Array.isArray(value) && value.length ? null : (\n                <DropzoneMessage\n                  maxFileSize={maxFileSize}\n                  inline={inline}\n                  accept={props.accept}\n                />\n              )}\n            </div>\n          )}\n        </ReactDropzone>\n      </div>\n      {error ? (\n        <div className={`help-block text-danger`} role=\"alert\">\n          <span>{error}</span>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n"],"names":["FileCard","file","i","removeFile","inline","div","className","key","name","onClick","e","stopPropagation","style","maxWidth","small","whiteSpace","bytes","format","size","unitSeparator","a","span","title","marginRight","DropzoneMessage","accept","maxFileSize","h5","split","join","h4","DropzoneFiles","files","showTotalSelected","Array","isArray","length","map","Dropzone","error","loose","compressed","label","value","customMaxFileSize","maxFiles","onChange","props","useMemo","parse","padding","tmp","handleDrop","useCallback","filesToUpload","filter","slice","toRemove","_","idx","ac","htmlFor","ReactDropzone","onDrop","maxSize","getRootProps","getInputProps","input","role"],"mappings":"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"}