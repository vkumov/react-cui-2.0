{"version":3,"file":"index.js","sources":["../../src/Timeline/Timeline.tsx"],"sourcesContent":["import React, { cloneElement, FC, isValidElement, ReactNode } from \"react\";\n\nimport { Icon } from \"src/Icon\";\nimport { appendClass as ac } from \"src/utils\";\n\nimport \"../../css/timeline.css\";\n\nexport type TimelineItemProps = {\n  icon?: ReactNode;\n  time?: string;\n  children: ReactNode;\n  className?: string;\n  contentClassName?: string;\n  simplified?: boolean;\n  header?: ReactNode;\n};\n\nexport const TimelineItem: FC<TimelineItemProps> = ({\n  icon = <Icon icon=\"circle\" />,\n  time = null,\n  className = null,\n  contentClassName = null,\n  simplified = false,\n  header = null,\n  children,\n}) => (\n  <div className={`timeline__item${ac(className)}`}>\n    <div className=\"timeline__icon\">{icon}</div>\n    {time && !simplified ? <div className=\"timeline__time\">{time}</div> : null}\n    <div className={`timeline__content${ac(contentClassName)}`}>\n      {header ? (\n        isValidElement(header) ? (\n          header\n        ) : (\n          <div className=\"timeline__header\">{header}</div>\n        )\n      ) : null}\n      {time && simplified ? <div className=\"timeline__time\">{time}</div> : null}\n      {children}\n    </div>\n  </div>\n);\n\nexport type TimelineProps = {\n  center?: boolean;\n  right?: boolean;\n  className?: string;\n  children: ReactNode;\n  simplified?: boolean;\n};\n\nexport const Timeline: FC<TimelineProps> = ({\n  center = false,\n  right = false,\n  className = null,\n  simplified = false,\n  children,\n}) => (\n  <div\n    className={`timeline${ac(center, \"timeline--centered\")}${ac(\n      right,\n      \"timeline--right\"\n    )}${ac(simplified, \"simplified\")}${ac(className)}`}\n  >\n    {React.Children.map(children, (child) =>\n      isValidElement(child) ? cloneElement<any>(child, { simplified }) : child\n    )}\n  </div>\n);\n"],"names":["TimelineItem","icon","Icon","time","className","contentClassName","simplified","header","children","div","ac","isValidElement","Timeline","center","right","React","Children","map","child","cloneElement"],"mappings":";;;;AAiBaA,MAAAA,YAAAA,GAAsC,CAAC,EAClDC,oBAAO,KAACC,CAAAA,aAAAA,CAAAA,IAAAA,EAAAA;IAAKD,IAAK,EAAA,QAAA;KAClBE,IAAAA,EAAO,IAAI,GACXC,WAAY,IAAI,GAChBC,gBAAAA,EAAmB,IAAI,GACvBC,UAAa,EAAA,KAAK,GAClBC,MAAS,EAAA,IAAI,GACbC,QAAAA,GACD,iBACC,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AAAIL,QAAAA,SAAAA,EAAW,CAAC,cAAc,EAAEM,WAAAA,CAAGN,WAAW,CAAC;qBAC9C,KAACK,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,gBAAA;OAAkBH,IAChCE,CAAAA,EAAAA,IAAAA,IAAQ,CAACG,UAAAA,iBAAa,KAACG,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,gBAAA;OAAkBD,IAAc,CAAA,GAAA,IAAI,gBAC1E,KAACM,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AAAIL,QAAAA,SAAAA,EAAW,CAAC,iBAAiB,EAAEM,WAAAA,CAAGL,kBAAkB,CAAC;OACvDE,MACCI,iBAAAA,cAAAA,CAAeJ,MACbA,CAAAA,GAAAA,MAAAA,iBAEA,KAACE,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,kBAAA;AAAoBG,KAAAA,EAAAA,MAAAA,CACpC,GACC,IAAI,EACPJ,IAAAA,IAAQG,2BAAa,KAACG,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;QAAIL,SAAU,EAAA,gBAAA;OAAkBD,IAAc,CAAA,GAAA,IAAI,EACxEK,QAGL,CAAA,EAAA;AAUK,MAAMI,WAA8B,CAAC,EAC1CC,QAAS,KAAK,GACdC,KAAAA,EAAQ,KAAK,GACbV,SAAY,EAAA,IAAI,GAChBE,UAAa,EAAA,KAAK,GAClBE,QAAAA,GACD,iBACC,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AACCL,QAAAA,SAAAA,EAAW,CAAC,QAAQ,EAAEM,WAAGG,CAAAA,MAAAA,EAAQ,sBAAsB,EAAEH,WAAAA,CACvDI,KACA,EAAA,iBAAA,CAAA,CACA,EAAEJ,WAAGJ,CAAAA,UAAAA,EAAY,cAAc,EAAEI,WAAAA,CAAGN,WAAW,CAAC;OAEjDW,KAAMC,CAAAA,QAAQ,CAACC,GAAG,CAACT,QAAAA,EAAU,CAACU,KAC7BP,iBAAAA,cAAAA,CAAeO,KAASC,CAAAA,iBAAAA,YAAAA,CAAkBD,KAAO,EAAA;AAAEZ,YAAAA,UAAAA;AAAW,SAAA,CAAA,GAAKY,KAAK,CAG5E;;;;"}