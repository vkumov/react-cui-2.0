{"version":3,"file":"index.js","sources":["../../src/Tabs/Tabs.tsx"],"sourcesContent":["import React, { FC, HTMLProps, ReactNode } from \"react\";\n\nimport { ConditionalWrapper, DisplayIf } from \"src/Conditional\";\nimport { appendClass as ac } from \"src/utils\";\nimport { usePrevious } from \"src/hooks/usePrevious\";\n\ntype TabId = number | string;\n\nconst firstDefined = (...args) =>\n  args.find((el) => typeof el !== \"undefined\" && el !== null);\n\ninterface TabProps {\n  id: TabId;\n  active?: boolean;\n  title: ReactNode;\n  children: ReactNode;\n  className?: string;\n  activeClassName?: string;\n  unmountInactive?: boolean;\n}\n\nexport const Tab: FC<TabProps> = ({\n  active = false,\n  className = null,\n  activeClassName = null,\n  unmountInactive = false,\n  children,\n}) => {\n  if (!active && unmountInactive) return null;\n  return (\n    <div\n      className={`tab-pane${ac(active, \"active\")}${ac(\n        active && activeClassName,\n        activeClassName\n      )}${ac(className)}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst isActive = (openTab, id: TabId, idx: number) =>\n  openTab === null ? idx === 0 : openTab === firstDefined(id, idx);\n\ninterface TabsHeaderProps {\n  tabsClassName?: string;\n  center?: boolean;\n  right?: boolean;\n  justified?: boolean;\n  embossed?: boolean;\n  bordered?: boolean;\n  vertical?: boolean;\n  sticky?: boolean;\n  inline?: boolean;\n  openTab?: TabId;\n  onTabChange: (tab: TabId) => void;\n  children: ReactNode;\n}\n\nexport const TabsHeader: FC<TabsHeaderProps> = ({\n  tabsClassName = null,\n  center = false,\n  right = false,\n  justified = false,\n  embossed = false,\n  bordered = false,\n  vertical = false,\n  inline = false,\n  openTab = null,\n  sticky = false,\n  onTabChange,\n  children,\n}) => (\n  <ul\n    className={`tabs${ac(tabsClassName)}${ac(center, \"tabs--centered\")}${ac(\n      right,\n      \"tabs--right\"\n    )}${ac(justified, \"tabs--justified\")}${ac(embossed, \"tabs--embossed\")}${ac(\n      bordered,\n      \"tabs--bordered\"\n    )}${ac(vertical, \"tabs--vertical\")}${ac(inline, \"tabs--inline\")}`}\n    style={sticky ? { position: \"sticky\", top: \"0\" } : {}}\n  >\n    {React.Children.map(children, (child, idx) => {\n      if (!React.isValidElement<TabProps>(child)) return child;\n\n      const {\n        props: { id, title },\n      } = child;\n      return (\n        <li\n          className={`tab${ac(isActive(openTab, id, idx), \"active\")}`}\n          key={firstDefined(id, idx)}\n        >\n          <a onClick={() => onTabChange(firstDefined(id, idx))}>{title}</a>\n        </li>\n      );\n    })}\n  </ul>\n);\n\ninterface ColumnSizes {\n  sm?: number;\n  md?: number;\n  lg?: number;\n  xl?: number;\n}\n\ntype ColumnSize = number | string | ColumnSizes;\n\ntype Column = {\n  columnWidth?: ColumnSize;\n} & React.HTMLProps<HTMLDivElement>;\n\ninterface TabsProps {\n  children: ReactNode;\n  defaultTab?: TabId;\n  tabsClassName?: string;\n  contentClassName?: string;\n  center?: boolean;\n  right?: boolean;\n  justified?: boolean;\n  embossed?: boolean;\n  bordered?: boolean;\n  vertical?: boolean;\n  leftColumn?: Column;\n  rightColumn?: Column;\n  rowProps?: HTMLProps<HTMLDivElement>;\n  sticky?: boolean;\n  inline?: boolean;\n  renderHeader?: (header: JSX.Element) => JSX.Element;\n  renderBody?: (body: JSX.Element) => JSX.Element;\n  onTabChange?: (tab: TabId) => void;\n  beforeTabChange?: (\n    oldTab: TabId,\n    newTab: TabId\n  ) => boolean | Promise<boolean>;\n}\n\nconst composeColumnSize = (columnWidth: ColumnSize): string => {\n  if (typeof columnWidth === \"string\" || typeof columnWidth === \"number\")\n    return `col-${columnWidth}`;\n\n  return Object.keys(columnWidth)\n    .map((k) => `col-${k}-${columnWidth[k]}`)\n    .join(\" \");\n};\n\nconst ColumnWrap: FC<Column> = ({ columnWidth, className, ...props }) => (\n  <div\n    className={`${composeColumnSize(columnWidth)}${ac(className)}`}\n    {...props}\n  />\n);\n\nexport const Tabs: FC<TabsProps> = ({\n  defaultTab = null,\n  tabsClassName = null,\n  contentClassName = null,\n  center = false,\n  right = false,\n  justified = false,\n  embossed = false,\n  bordered = false,\n  vertical = false,\n  sticky = false,\n  inline = false,\n  renderHeader = (header) => header,\n  renderBody = (body) => body,\n  onTabChange = null,\n  leftColumn = { columnWidth: 3 },\n  rightColumn = { columnWidth: 9 },\n  rowProps: { className: rowClassName, ...rowProps } = {},\n  beforeTabChange = null,\n  children,\n}) => {\n  const [openTab, setOpenTab] = React.useState(defaultTab || null);\n  const prevTab = usePrevious(openTab);\n\n  React.useEffect(() => {\n    setOpenTab(defaultTab);\n  }, [defaultTab]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (openTab === prevTab) return;\n      if (\n        typeof beforeTabChange === \"function\" &&\n        !(await beforeTabChange(prevTab, openTab))\n      )\n        setOpenTab(prevTab);\n      if (typeof onTabChange === \"function\") onTabChange(openTab);\n    })();\n  }, [openTab, prevTab]);\n\n  const header = (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={<ColumnWrap {...leftColumn} />}\n    >\n      {renderHeader(\n        <TabsHeader\n          tabsClassName={tabsClassName}\n          center={center}\n          right={right}\n          justified={justified}\n          embossed={embossed}\n          bordered={bordered}\n          vertical={vertical}\n          sticky={sticky}\n          inline={inline}\n          openTab={openTab}\n          onTabChange={setOpenTab}\n        >\n          {children}\n        </TabsHeader>\n      )}\n    </ConditionalWrapper>\n  );\n\n  const body = (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={<ColumnWrap {...rightColumn} />}\n    >\n      {renderBody(\n        <div\n          className={`tab-content${\n            contentClassName ? ` ${contentClassName}` : \"\"\n          }`}\n        >\n          {React.Children.map(children, (child, idx) =>\n            React.isValidElement(child)\n              ? React.cloneElement<any>(child, {\n                  active: isActive(openTab, child.props.id, idx),\n                })\n              : child\n          )}\n        </div>\n      )}\n    </ConditionalWrapper>\n  );\n\n  return (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={\n        <div\n          className={`row${ac(rowClassName)}`}\n          style={sticky ? { position: \"relative\" } : {}}\n          {...rowProps}\n        />\n      }\n    >\n      <DisplayIf condition={(vertical && !right) || !vertical}>\n        {header}\n      </DisplayIf>\n      {body}\n      <DisplayIf condition={vertical && right}>{header}</DisplayIf>\n    </ConditionalWrapper>\n  );\n};\n"],"names":["firstDefined","args","find","el","Tab","active","className","activeClassName","unmountInactive","children","div","ac","isActive","openTab","id","idx","TabsHeader","tabsClassName","center","right","justified","embossed","bordered","vertical","inline","sticky","onTabChange","ul","style","position","top","React","Children","map","child","isValidElement","props","title","li","key","a","onClick","composeColumnSize","columnWidth","Object","keys","k","join","ColumnWrap","Tabs","defaultTab","contentClassName","renderHeader","header","renderBody","body","leftColumn","rightColumn","rowProps","rowClassName","beforeTabChange","setOpenTab","useState","prevTab","usePrevious","useEffect","ConditionalWrapper","condition","wrapper","cloneElement","DisplayIf"],"mappings":"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"}