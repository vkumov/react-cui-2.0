{"version":3,"file":"index.js","sources":["../../src/Tabs/Tabs.tsx"],"sourcesContent":["import React, { FC, HTMLProps, ReactNode } from \"react\";\n\nimport { ConditionalWrapper, DisplayIf } from \"src/Conditional\";\nimport { usePrevious } from \"src/hooks/usePrevious\";\nimport { appendClass as ac } from \"src/utils\";\n\ntype TabId = number | string;\n\nconst firstDefined = (...args) =>\n  args.find((el) => typeof el !== \"undefined\" && el !== null);\n\ninterface TabProps {\n  id: TabId;\n  active?: boolean;\n  title: ReactNode;\n  children: ReactNode;\n  className?: string;\n  activeClassName?: string;\n  unmountInactive?: boolean;\n}\n\nexport const Tab: FC<TabProps> = ({\n  active = false,\n  className = null,\n  activeClassName = null,\n  unmountInactive = false,\n  children,\n}) => {\n  if (!active && unmountInactive) return null;\n  return (\n    <div\n      className={`tab-pane${ac(active, \"active\")}${ac(\n        active && activeClassName,\n        activeClassName\n      )}${ac(className)}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst isActive = (openTab, id: TabId, idx: number) =>\n  openTab === null ? idx === 0 : openTab === firstDefined(id, idx);\n\ninterface TabsHeaderProps {\n  tabsClassName?: string;\n  center?: boolean;\n  right?: boolean;\n  justified?: boolean;\n  embossed?: boolean;\n  bordered?: boolean;\n  vertical?: boolean;\n  sticky?: boolean;\n  inline?: boolean;\n  openTab?: TabId;\n  onTabChange: (tab: TabId) => void;\n  children: ReactNode;\n}\n\nexport const TabsHeader: FC<TabsHeaderProps> = ({\n  tabsClassName = null,\n  center = false,\n  right = false,\n  justified = false,\n  embossed = false,\n  bordered = false,\n  vertical = false,\n  inline = false,\n  openTab = null,\n  sticky = false,\n  onTabChange,\n  children,\n}) => (\n  <ul\n    className={`tabs${ac(tabsClassName)}${ac(center, \"tabs--centered\")}${ac(\n      right,\n      \"tabs--right\"\n    )}${ac(justified, \"tabs--justified\")}${ac(embossed, \"tabs--embossed\")}${ac(\n      bordered,\n      \"tabs--bordered\"\n    )}${ac(vertical, \"tabs--vertical\")}${ac(inline, \"tabs--inline\")}`}\n    style={sticky ? { position: \"sticky\", top: \"0\" } : {}}\n  >\n    {React.Children.map(children, (child, idx) => {\n      if (!React.isValidElement<TabProps>(child)) return child;\n\n      const {\n        props: { id, title },\n      } = child;\n      return (\n        <li\n          className={`tab${ac(isActive(openTab, id, idx), \"active\")}`}\n          key={firstDefined(id, idx)}\n        >\n          <a onClick={() => onTabChange(firstDefined(id, idx))}>{title}</a>\n        </li>\n      );\n    })}\n  </ul>\n);\n\ninterface ColumnSizes {\n  sm?: number;\n  md?: number;\n  lg?: number;\n  xl?: number;\n}\n\ntype ColumnSize = number | string | ColumnSizes;\n\ntype Column = {\n  columnWidth?: ColumnSize;\n} & React.HTMLProps<HTMLDivElement>;\n\ninterface TabsProps {\n  children: ReactNode;\n  defaultTab?: TabId;\n  tabsClassName?: string;\n  contentClassName?: string;\n  center?: boolean;\n  right?: boolean;\n  justified?: boolean;\n  embossed?: boolean;\n  bordered?: boolean;\n  vertical?: boolean;\n  leftColumn?: Column;\n  rightColumn?: Column;\n  rowProps?: HTMLProps<HTMLDivElement>;\n  sticky?: boolean;\n  inline?: boolean;\n  renderHeader?: (header: JSX.Element) => JSX.Element;\n  renderBody?: (body: JSX.Element) => JSX.Element;\n  onTabChange?: (tab: TabId) => void;\n  beforeTabChange?: (\n    oldTab: TabId,\n    newTab: TabId\n  ) => boolean | Promise<boolean>;\n}\n\nconst composeColumnSize = (columnWidth: ColumnSize): string => {\n  if (typeof columnWidth === \"string\" || typeof columnWidth === \"number\")\n    return `col-${columnWidth}`;\n\n  return Object.keys(columnWidth)\n    .map((k) => `col-${k}-${columnWidth[k]}`)\n    .join(\" \");\n};\n\nconst ColumnWrap: FC<Column> = ({ columnWidth, className, ...props }) => (\n  <div\n    className={`${composeColumnSize(columnWidth)}${ac(className)}`}\n    {...props}\n  />\n);\n\nexport const Tabs: FC<TabsProps> = ({\n  defaultTab = null,\n  tabsClassName = null,\n  contentClassName = null,\n  center = false,\n  right = false,\n  justified = false,\n  embossed = false,\n  bordered = false,\n  vertical = false,\n  sticky = false,\n  inline = false,\n  renderHeader = (header) => header,\n  renderBody = (body) => body,\n  onTabChange = null,\n  leftColumn = { columnWidth: 3 },\n  rightColumn = { columnWidth: 9 },\n  rowProps: { className: rowClassName, ...rowProps } = {},\n  beforeTabChange = null,\n  children,\n}) => {\n  const [openTab, setOpenTab] = React.useState(defaultTab || null);\n  const prevTab = usePrevious(openTab);\n\n  React.useEffect(() => {\n    setOpenTab(defaultTab);\n  }, [defaultTab]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (openTab === prevTab) return;\n      if (\n        typeof beforeTabChange === \"function\" &&\n        !(await beforeTabChange(prevTab, openTab))\n      )\n        setOpenTab(prevTab);\n      if (typeof onTabChange === \"function\") onTabChange(openTab);\n    })();\n  }, [openTab, prevTab]);\n\n  const header = (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={<ColumnWrap {...leftColumn} />}\n    >\n      {renderHeader(\n        <TabsHeader\n          tabsClassName={tabsClassName}\n          center={center}\n          right={right}\n          justified={justified}\n          embossed={embossed}\n          bordered={bordered}\n          vertical={vertical}\n          sticky={sticky}\n          inline={inline}\n          openTab={openTab}\n          onTabChange={setOpenTab}\n        >\n          {children}\n        </TabsHeader>\n      )}\n    </ConditionalWrapper>\n  );\n\n  const body = (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={<ColumnWrap {...rightColumn} />}\n    >\n      {renderBody(\n        <div\n          className={`tab-content${\n            contentClassName ? ` ${contentClassName}` : \"\"\n          }`}\n        >\n          {React.Children.map(children, (child, idx) =>\n            React.isValidElement(child)\n              ? React.cloneElement<any>(child, {\n                  active: isActive(openTab, child.props.id, idx),\n                })\n              : child\n          )}\n        </div>\n      )}\n    </ConditionalWrapper>\n  );\n\n  return (\n    <ConditionalWrapper\n      condition={vertical}\n      wrapper={\n        <div\n          className={`row${ac(rowClassName)}`}\n          style={sticky ? { position: \"relative\" } : {}}\n          {...rowProps}\n        />\n      }\n    >\n      <DisplayIf condition={(vertical && !right) || !vertical}>\n        {header}\n      </DisplayIf>\n      {body}\n      <DisplayIf condition={vertical && right}>{header}</DisplayIf>\n    </ConditionalWrapper>\n  );\n};\n"],"names":["_extends","firstDefined","args","find","el","Tab","active","className","activeClassName","unmountInactive","children","React","div","ac","isActive","openTab","id","idx","TabsHeader","tabsClassName","center","right","justified","embossed","bordered","vertical","inline","sticky","onTabChange","ul","style","position","top","Children","map","child","isValidElement","props","title","li","key","a","onClick","composeColumnSize","columnWidth","Object","keys","k","join","ColumnWrap","Tabs","defaultTab","contentClassName","renderHeader","header","renderBody","body","leftColumn","rightColumn","rowProps","rowClassName","beforeTabChange","useState","setOpenTab","prevTab","usePrevious","useEffect","ConditionalWrapper","condition","wrapper","cloneElement","DisplayIf"],"mappings":"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"}