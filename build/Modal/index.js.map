{"version":3,"file":"index.js","sources":["../../src/Modal/Header.tsx","../../src/Modal/Footer.tsx","../../src/Modal/Body.tsx","../../src/Modal/Modal.tsx","../../src/Modal/ConfirmationModal.tsx","../../src/Modal/PromptModal.tsx","../../src/Modal/ConfirmationListener.tsx","../../src/Modal/calls.tsx"],"sourcesContent":["import React, { FC, HTMLProps, PropsWithChildren } from \"react\";\nimport { appendClass as ac } from \"src/utils\";\n\n/**\n * Modal Header\n */\n\ntype ModalHeaderProps = PropsWithChildren<{\n  className?: string;\n}> &\n  HTMLProps<HTMLDivElement>;\n\nexport const ModalHeader: FC<ModalHeaderProps> = ({\n  className = null,\n  children,\n  ...props\n}) => (\n  <div className={`modal__header${ac(className)}`} {...props}>\n    {children}\n  </div>\n);\n","import React, { FC, HTMLProps, PropsWithChildren } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\n/**\n * Modal Footer\n */\n\ntype ModalFooterProps = PropsWithChildren<{\n  className?: string;\n}> &\n  HTMLProps<HTMLDivElement>;\n\nexport const ModalFooter: FC<ModalFooterProps> = ({\n  className = null,\n  children,\n  ...props\n}) => (\n  <div className={`modal__footer${ac(className)}`} {...props}>\n    {children}\n  </div>\n);\n","import React, { FC, HTMLProps, PropsWithChildren } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\n/**\n * Modal Body\n */\n\ntype ModalBodyProps = PropsWithChildren<{\n  className?: string;\n}> &\n  HTMLProps<HTMLDivElement>;\n\nexport const ModalBody: FC<ModalBodyProps> = ({\n  className = null,\n  children,\n  ...props\n}) => (\n  <div className={`modal__body${ac(className)}`} {...props}>\n    {children}\n  </div>\n);\n","import React, { FC, ReactNode, PropsWithChildren } from \"react\";\nimport Transition from \"react-transition-group/Transition\";\nimport ReactModal, { Props as ReactModalProps } from \"react-modal\";\n\nimport { ConditionalWrapper, DisplayIf as If } from \"src/Conditional\";\nimport { appendClass as ac } from \"src/utils\";\n\nimport { ModalHeader } from \"./Header\";\nimport { ModalBody } from \"./Body\";\nimport { ModalFooter } from \"./Footer\";\n\n/**\n * Modal\n */\n\nexport type ModalSize = \"small\" | \"default\" | \"large\" | \"full\" | \"fluid\";\n\nexport type ModalProps = PropsWithChildren<{\n  size?: ModalSize;\n  closeIcon?: boolean;\n  closeHandle?: (e) => void;\n  title?: ReactNode;\n  isOpen: boolean;\n  autoClose?: boolean;\n  left?: boolean;\n  animationDuration?:\n    | number\n    | { appear?: number; enter?: number; exit?: number };\n  transitionEvents?: Record<string, unknown>;\n  dialogProps?: React.ComponentProps<\"div\">;\n  contentProps?: React.ComponentProps<\"div\">;\n  maximize?: boolean;\n}> &\n  ReactModalProps;\n\ntype ModalSizes = {\n  Small: FC<ModalProps>;\n  Large: FC<ModalProps>;\n  Full: FC<ModalProps>;\n  Fluid: FC<ModalProps>;\n};\n\ntype ModalComponents = {\n  Header: typeof ModalHeader;\n  Body: typeof ModalBody;\n  Footer: typeof ModalFooter;\n};\n\nexport const Modal: ModalSizes & ModalComponents & FC<ModalProps> = ({\n  size = null,\n  autoClose = true,\n  animationDuration = 250,\n  closeIcon = false,\n  title = null,\n  closeHandle = null,\n  left = false,\n  transitionEvents = null,\n  dialogProps = null,\n  contentProps = null,\n  maximize = false,\n  children,\n  isOpen,\n  ...props\n}) => {\n  const [maximized, setMaximized] = React.useState(false);\n  React.useEffect(() => setMaximized(false), [isOpen]);\n  const realSize = React.useMemo(\n    () => (maximized ? \"full\" : size),\n    [maximized, size]\n  );\n\n  const maximizeCb = React.useCallback(() => {\n    setMaximized((curr) => !curr);\n  }, []);\n\n  return (\n    <Transition\n      in={isOpen}\n      mountOnEnter\n      unmountOnExit\n      timeout={animationDuration}\n      {...transitionEvents}\n    >\n      {(state) => (\n        <ReactModal\n          {...props}\n          onRequestClose={autoClose && closeHandle ? closeHandle : undefined}\n          overlayClassName=\"modal-backdrop\"\n          isOpen={[\"entering\", \"entered\"].includes(state)}\n          className={`modal${ac(realSize, `modal--${realSize}`)}${ac(\n            left,\n            \"modal--left\"\n          )}`}\n          closeTimeoutMS={\n            typeof animationDuration === \"object\"\n              ? animationDuration.exit\n              : animationDuration\n          }\n        >\n          <div\n            className=\"modal__dialog\"\n            {...dialogProps}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"modal__content\" {...contentProps}>\n              <If condition={!!(closeIcon && closeHandle) || maximize}>\n                <ConditionalWrapper\n                  condition={!!(closeIcon && closeHandle) && maximize}\n                  wrapper={<div className=\"modal__close\" />}\n                >\n                  {Boolean(maximize) && (\n                    <a\n                      className={`${ac(\n                        !(closeIcon && closeHandle),\n                        \"modal__close\"\n                      )}${ac(closeIcon && closeHandle, \"qtr-margin-right\")}`}\n                      onClick={maximizeCb}\n                    >\n                      <span\n                        className={\n                          maximized ? \"icon-minimize\" : \"icon-maximize\"\n                        }\n                      />\n                    </a>\n                  )}\n                  {Boolean(closeIcon && closeHandle) && (\n                    <a\n                      className={!maximize ? \"modal__close\" : \"\"}\n                      onClick={closeHandle}\n                    >\n                      <span className=\"icon-close\" />\n                    </a>\n                  )}\n                </ConditionalWrapper>\n              </If>\n              {Boolean(title) && (\n                <ModalHeader>\n                  <h1 className=\"modal__title\">{title}</h1>\n                </ModalHeader>\n              )}\n              {children}\n            </div>\n          </div>\n        </ReactModal>\n      )}\n    </Transition>\n  );\n};\n\nModal.Small = (props) => <Modal {...props} size=\"small\" />;\nModal.Large = (props) => <Modal {...props} size=\"large\" />;\nModal.Full = (props) => <Modal {...props} size=\"full\" />;\nModal.Fluid = (props) => <Modal {...props} size=\"fluid\" />;\n\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\n","import React, { ChangeEvent, FC, ReactNode } from \"react\";\n\nimport { Button, ButtonColor } from \"src/Button\";\n\nimport type { DontAskAgain } from \"./calls\";\nimport { ModalBody } from \"./Body\";\nimport { ModalFooter } from \"./Footer\";\nimport { Modal } from \"./Modal\";\n\n/**\n * Confirmation Modal\n */\n\ntype ConfirmationModalProps = {\n  isOpen?: boolean;\n  confirmHandle: (dontAskAgain?: boolean) => boolean | Promise<boolean>;\n  closeHandle: (e) => void;\n  prompt: ReactNode;\n  confirmType?: ButtonColor;\n  confirmText?: string;\n  autoClose?: boolean;\n  dontAskAgain?: DontAskAgain;\n};\n\nexport const ConfirmationModal: FC<ConfirmationModalProps> = ({\n  isOpen = false,\n  confirmType = \"primary\",\n  autoClose = true,\n  confirmText = \"Confirm\",\n  confirmHandle,\n  closeHandle,\n  prompt,\n  dontAskAgain = { show: false },\n}) => {\n  const [doing, setDoing] = React.useState(false);\n  const [dontAsk, setDontAsk] = React.useState(false);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      closeIcon\n      closeHandle={closeHandle}\n      autoClose={autoClose}\n      title=\"Confirmation\"\n    >\n      <ModalBody>\n        {prompt}\n        {dontAskAgain?.show ? (\n          <div className=\"form-group\">\n            <label className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                checked={dontAsk}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                  setDontAsk(e.target.checked);\n                }}\n              />\n              <span className=\"checkbox__input\"></span>\n              <span className=\"checkbox__label\">\n                {dontAskAgain.text || \"Don't ask again\"}\n              </span>\n            </label>\n          </div>\n        ) : null}\n      </ModalBody>\n      <ModalFooter>\n        <Button.Light onClick={closeHandle}>Close</Button.Light>\n        <Button\n          color={confirmType}\n          disabled={doing}\n          onClick={async () => {\n            setDoing(true);\n            if (await confirmHandle(dontAsk)) setDoing(false);\n          }}\n        >\n          {confirmText}\n          {doing ? (\n            <span className=\"icon-animation spin qtr-margin-left\" />\n          ) : null}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, {\n  ReactNode,\n  PropsWithChildren,\n  ChangeEvent,\n  KeyboardEvent,\n} from \"react\";\nimport { Input } from \"src/Input\";\nimport { DisplayIf as If } from \"src/Conditional\";\nimport { Button } from \"src/Button\";\n\nimport { ModalBody } from \"./Body\";\nimport { ModalFooter } from \"./Footer\";\nimport { Modal } from \"./Modal\";\n\n/**\n * Prompt Modal\n */\n\nexport interface PromptModalProps<T extends React.ReactText> {\n  title: ReactNode;\n  question: ReactNode;\n  onSave: (value: T) => void | Promise<void>;\n  onClose?: (e?) => void;\n  initial?: T;\n  type?: string;\n  isOpen: boolean;\n  hint?: ReactNode;\n  validate?: ((value: T) => Promise<boolean>) | ((value: T) => boolean);\n}\n\nexport function PromptModal<T extends React.ReactText>({\n  title,\n  question,\n  onSave: cb,\n  onClose,\n  initial,\n  type,\n  isOpen,\n  hint,\n  validate,\n}: PropsWithChildren<PromptModalProps<T>>): JSX.Element {\n  const [val, setVal] = React.useState<T>(initial);\n  const [doing, setDoing] = React.useState(false);\n  const onSave = React.useCallback(async () => {\n    if (typeof validate === \"function\" && !(await validate(val))) return;\n\n    setDoing(true);\n    await cb(val);\n    setDoing(false);\n    onClose();\n  }, [onClose, cb, val, validate]);\n\n  React.useEffect(() => setVal(initial), [initial]);\n\n  const inpRef = React.useRef<HTMLInputElement>(undefined);\n\n  React.useEffect(() => {\n    if (isOpen && inpRef.current) inpRef.current.focus();\n  }, [isOpen]);\n\n  return (\n    <Modal isOpen={isOpen} closeIcon closeHandle={onClose} title={title}>\n      <ModalBody>\n        <Input\n          type={type}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setVal(e.target.value as T)\n          }\n          onKeyUp={(e: KeyboardEvent<HTMLInputElement>) => {\n            if (e.key === \"Enter\") {\n              onSave();\n            }\n          }}\n          name=\"promptInput\"\n          value={val}\n          label={\n            <>\n              {question}\n              <If condition={!!hint && typeof hint === \"string\"}>\n                <span\n                  data-balloon={hint}\n                  data-balloon-length=\"large\"\n                  data-balloon-pos=\"up\"\n                >\n                  <span\n                    className=\"icon-question-circle qtr-margin-left\"\n                    style={{ cursor: \"help\" }}\n                  />\n                </span>\n              </If>\n            </>\n          }\n          ref={inpRef}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"light\" onClick={onClose} disabled={doing}>\n          Close\n        </Button>\n        <Button color=\"primary\" onClick={onSave} disabled={doing}>\n          OK\n          {doing ? (\n            <span className=\"icon-animation spin qtr-margin-left\" />\n          ) : null}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { cloneElement } from \"react\";\n\nimport { Button } from \"src/Button\";\n\nimport { eventManager } from \"src/utils/eventManager\";\n\nimport { ModalBody } from \"./Body\";\nimport { ModalFooter } from \"./Footer\";\nimport { Modal } from \"./Modal\";\nimport { ConfirmationModal } from \"./ConfirmationModal\";\nimport { PromptModal } from \"./PromptModal\";\n\nexport const ConfirmationListener = (): JSX.Element => {\n  const [modals, setModals] = React.useState([]);\n\n  const addModal = React.useCallback(\n    (modal) =>\n      setModals((curr) => [...curr, { id: Date.now(), shown: true, ...modal }]),\n    []\n  );\n\n  const hideModal = React.useCallback((id) => {\n    setModals((curr) =>\n      curr.map((m) => (m.id === id ? { ...m, shown: false } : m))\n    );\n  }, []);\n\n  const deleteModal = React.useCallback((id) => {\n    setModals((curr) =>\n      curr.filter((m) => {\n        if (m.id === id && typeof m.onClosed === \"function\") m.onClosed();\n        return m.id !== id;\n      })\n    );\n  }, []);\n\n  const closeModal = React.useCallback(\n    (id, cb?: () => unknown) => {\n      hideModal(id);\n      setTimeout(() => deleteModal(id), 500);\n      if (cb) cb();\n    },\n    [hideModal, deleteModal]\n  );\n\n  React.useEffect(() => {\n    const cb = (m) => addModal(m);\n    eventManager.on(\"showModal\", cb);\n    return () => {\n      eventManager.off(\"showModal\", cb);\n    };\n  }, [addModal]);\n\n  if (!modals.length) return null;\n\n  return (\n    <>\n      {modals.map((modal) => {\n        if (modal.modalType === \"dynamic\")\n          return (\n            <Modal\n              {...modal.modalProps}\n              key={modal.id}\n              isOpen={modal.shown}\n              closeHandle={() => closeModal(modal.id, modal.onModalClose)}\n              title={modal.title}\n            >\n              {modal.fullBody ? (\n                typeof modal.fullBody === \"function\" ? (\n                  modal.fullBody({\n                    close: () => closeModal(modal.id, modal.onModalClose),\n                  })\n                ) : (\n                  cloneElement(modal.fullBody, {\n                    close: () => closeModal(modal.id, modal.onModalClose),\n                  })\n                )\n              ) : (\n                <>\n                  <ModalBody>{modal.body}</ModalBody>\n                  <ModalFooter>\n                    {modal.buttons.map((button, idx) => (\n                      <Button\n                        key={idx}\n                        color={button.color || \"light\"}\n                        onClick={(e) => {\n                          if (typeof button.onClick === \"function\")\n                            button.onClick(e, () =>\n                              closeModal(modal.id, modal.onModalClose)\n                            );\n                          else closeModal(modal.id, modal.onModalClose);\n                        }}\n                      >\n                        {button.text}\n                      </Button>\n                    ))}\n                  </ModalFooter>\n                </>\n              )}\n            </Modal>\n          );\n\n        if (modal.modalType === \"notification\")\n          return (\n            <Modal\n              key={modal.id}\n              isOpen={modal.shown}\n              closeIcon\n              closeHandle={() => closeModal(modal.id, modal.onModalClose)}\n              title={modal.title}\n            >\n              <ModalBody>{modal.body}</ModalBody>\n              <ModalFooter>\n                <Button\n                  color={modal.buttonColor || \"light\"}\n                  onClick={() => closeModal(modal.id, modal.onModalClose)}\n                >\n                  {modal.button}\n                </Button>\n              </ModalFooter>\n            </Modal>\n          );\n\n        if (modal.modalType === \"prompt\") {\n          if (typeof modal.options !== \"undefined\") {\n            const {\n              initial = \"\",\n              type = \"text\",\n              hint = undefined,\n              validate = undefined,\n            } = modal.options;\n            return (\n              <PromptModal\n                key={modal.id}\n                isOpen={modal.shown}\n                onClose={() => closeModal(modal.id, modal.onModalClose)}\n                onSave={modal.cb}\n                title={modal.title}\n                question={modal.question}\n                initial={initial}\n                type={type}\n                hint={hint}\n                validate={validate}\n              />\n            );\n          }\n\n          return (\n            <PromptModal\n              key={modal.id}\n              isOpen={modal.shown}\n              onClose={() => closeModal(modal.id, modal.onModalClose)}\n              onSave={modal.cb}\n              title={modal.title}\n              question={modal.question}\n              initial={modal.initial}\n              type={modal.type}\n              hint={modal.hint}\n            />\n          );\n        }\n\n        if (modal.modalType === \"confirmation\")\n          return (\n            <ConfirmationModal\n              key={modal.id}\n              isOpen={modal.shown}\n              prompt={modal.prompt}\n              confirmHandle={async (dontAskAgain) => {\n                const r = await modal.onConfirm(dontAskAgain);\n                if (r) closeModal(modal.id, modal.onModalClose);\n                return true;\n              }}\n              closeHandle={() => closeModal(modal.id, modal.onModalClose)}\n              confirmText={modal.confirmText}\n              confirmType={modal.confirmType}\n              dontAskAgain={modal.dontAskAgain}\n            />\n          );\n\n        return null;\n      })}\n    </>\n  );\n};\n\nexport { ConfirmationListener as DynamicModal };\n","import React, { ReactNode, ReactText } from \"react\";\nimport type { ButtonColor } from \"src/Button\";\nimport { eventManager } from \"src/utils/eventManager\";\n\nimport type { ModalProps } from \"./Modal\";\nimport type { PromptModalProps } from \"./PromptModal\";\n\nexport type DontAskAgain = {\n  show: boolean;\n  text?: ReactNode;\n};\n\nexport function confirmation(\n  prompt: ReactNode,\n  onConfirm: (dontAskAgain?: boolean) => boolean | Promise<boolean>,\n  confirmType: ButtonColor = \"primary\",\n  confirmText = \"Confirm\",\n  dontAskAgain: DontAskAgain = { show: false }\n): void {\n  if (!prompt) throw new Error(\"Prompt must be specified\");\n  if (!onConfirm || typeof onConfirm !== \"function\")\n    throw new Error(\"onConfirm must be specified and must be a function\");\n\n  eventManager.emit(\"showModal\", {\n    modalType: \"confirmation\",\n    prompt: <p>{prompt}</p>,\n    onConfirm,\n    confirmText,\n    confirmType,\n    dontAskAgain,\n  });\n}\n\ntype NotificationModal = (\n  title: ReactNode,\n  body: ReactNode,\n  buttonColor?: ButtonColor,\n  button?: ReactNode\n) => Promise<void>;\n\nexport const notificationModal: NotificationModal = (\n  title,\n  body,\n  buttonColor = \"light\",\n  button = \"OK\"\n) => {\n  if (!title || !body) throw new Error(\"Title and body must be specified\");\n\n  return new Promise((resolve) => {\n    eventManager.emit(\"showModal\", {\n      modalType: \"notification\",\n      title,\n      body,\n      buttonColor,\n      button,\n      onClosed: resolve,\n    });\n  });\n};\n\nexport { notificationModal as notification };\n\ntype initialOrOptions<T extends ReactText> =\n  | Pick<PromptModalProps<T>, \"initial\" | \"type\" | \"hint\" | \"validate\">\n  | string;\n\nexport function prompt<T extends ReactText>(\n  title: React.ReactText,\n  question: ReactNode,\n  cb: (value: T) => void | Promise<void>,\n  initial?: string,\n  type?: string,\n  hint?: ReactNode\n): void;\nexport function prompt<T extends ReactText>(\n  title: React.ReactText,\n  question: ReactNode,\n  cb: (value: T) => void | Promise<void>,\n  options?: Pick<PromptModalProps<T>, \"initial\" | \"type\" | \"hint\" | \"validate\">\n): void;\nexport function prompt<T extends ReactText>(\n  title: React.ReactText,\n  question: ReactNode,\n  cb: (value: T) => void | Promise<void>,\n  initial: initialOrOptions<T>,\n  type = \"text\",\n  hint = undefined\n): void {\n  if (!title || !question)\n    throw new Error(\"Title and question must be specified\");\n\n  if (typeof initial === \"object\") {\n    eventManager.emit(\"showModal\", {\n      modalType: \"prompt\",\n      title,\n      question,\n      cb,\n      options: initial,\n    });\n    return;\n  }\n\n  eventManager.emit(\"showModal\", {\n    modalType: \"prompt\",\n    title,\n    initial,\n    type,\n    question,\n    cb,\n    hint,\n  });\n}\n\ntype CloseHandler = () => void;\n\ninterface ModalButton {\n  color?: ButtonColor;\n  text: ReactNode;\n  onClick?: (\n    e: React.MouseEvent<HTMLButtonElement>,\n    close: CloseHandler\n  ) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type PropsWithCloseModal<P = {}> = P & { close: () => void };\n\ntype FullBodyRender = (props: { close: () => void }) => ReactNode;\n\ninterface DynamicModalOptions {\n  title: ReactNode;\n  fullBody?: ReactNode | FullBodyRender;\n  body?: ReactNode;\n  buttons?: ModalButton[];\n  modalProps?: Partial<ModalProps>;\n}\n\ntype DynamicModalHandler = (options: DynamicModalOptions) => Promise<void>;\n\nexport const dynamicModal: DynamicModalHandler = async ({\n  title,\n  fullBody = null,\n  body = null,\n  buttons = [],\n  modalProps = {},\n}) => {\n  return new Promise((resolve) => {\n    eventManager.emit(\"showModal\", {\n      modalType: \"dynamic\",\n      title,\n      fullBody,\n      body,\n      buttons,\n      modalProps,\n      onModalClose: resolve,\n    });\n  });\n};\n"],"names":["_extends","ModalHeader","className","children","props","div","ac","ModalFooter","ModalBody","Modal","size","autoClose","animationDuration","closeIcon","title","closeHandle","left","transitionEvents","dialogProps","contentProps","maximize","isOpen","maximized","setMaximized","React","useState","useEffect","realSize","useMemo","maximizeCb","useCallback","curr","Transition","in","mountOnEnter","unmountOnExit","timeout","state","ReactModal","onRequestClose","undefined","overlayClassName","includes","closeTimeoutMS","exit","onClick","e","stopPropagation","If","condition","ConditionalWrapper","wrapper","Boolean","a","span","h1","Small","Large","Full","Fluid","Header","Body","Footer","ConfirmationModal","confirmType","confirmText","confirmHandle","prompt","dontAskAgain","show","doing","setDoing","dontAsk","setDontAsk","label","input","type","checked","onChange","target","text","Button","Light","color","disabled","PromptModal","question","onSave","cb","onClose","initial","hint","validate","val","setVal","inpRef","useRef","current","focus","Input","value","onKeyUp","key","name","data-balloon","data-balloon-length","data-balloon-pos","style","cursor","ref","ConfirmationListener","modals","setModals","addModal","modal","id","Date","now","shown","hideModal","map","m","deleteModal","filter","onClosed","closeModal","setTimeout","eventManager","on","off","length","modalType","modalProps","onModalClose","fullBody","close","cloneElement","body","buttons","button","idx","buttonColor","options","r","onConfirm","confirmation","Error","emit","p","notificationModal","Promise","resolve","dynamicModal"],"mappings":"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"}