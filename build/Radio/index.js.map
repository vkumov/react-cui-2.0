{"version":3,"file":"index.js","sources":["../../src/Radio/Radio.tsx"],"sourcesContent":["import React, {\n  ChangeEvent,\n  FC,\n  forwardRef,\n  HTMLProps,\n  ReactNode,\n  useCallback,\n} from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ninterface RadioProps extends Omit<HTMLProps<HTMLInputElement>, \"label\"> {\n  spacing?: \"compressed\" | \"regular\" | \"loose\" | \"nospacing\";\n  inline?: boolean;\n  label?: ReactNode;\n  className?: string;\n  id?: string;\n  divProps?: HTMLProps<HTMLDivElement>;\n}\n\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>(\n  (\n    {\n      spacing = null,\n      inline = false,\n      label = null,\n      className = null,\n      id,\n      divProps = {},\n      ...input\n    },\n    forwardedRef\n  ) => (\n    <div\n      className={`form-group${ac(inline, \"form-group--inline\")}${ac(\n        spacing,\n        `form-group--${spacing}`\n      )}${ac(className)}`}\n      {...divProps}\n    >\n      <label className=\"radio\" htmlFor={id || input.name}>\n        <input type=\"radio\" id={id} {...input} ref={forwardedRef} />\n        <span className=\"radio__input\" />\n        {label ? <span className=\"radio__label\">{label}</span> : null}\n      </label>\n    </div>\n  )\n);\n\ninterface RadioValue {\n  value: string;\n  label: ReactNode;\n}\n\ninterface RadiosProps {\n  values: RadioValue[];\n  value: string;\n  onChange: (value: string) => void;\n  name: string;\n}\n\nexport const Radios: FC<RadiosProps> = ({ values, value, onChange, name }) => {\n  const onRadioChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      e.persist();\n\n      if (e.target.checked) {\n        onChange(e.target.value);\n      }\n    },\n    [onChange]\n  );\n\n  return (\n    <>\n      {values.map((v, idx) => (\n        <Radio\n          id={v.value}\n          label={v.label}\n          key={v.value}\n          name={`${name}.${idx}`}\n          onChange={onRadioChange}\n          checked={value === v.value}\n          value={v.value}\n        />\n      ))}\n    </>\n  );\n};\n"],"names":["Radio","forwardRef","spacing","inline","label","className","id","divProps","input","forwardedRef","div","ac","htmlFor","name","type","ref","span","Radios","values","value","onChange","onRadioChange","useCallback","e","persist","target","checked","map","v","idx","key"],"mappings":";;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;MAoBaA,KAAK,iBAAGC,UAAU,CAC7B,CACE,EACEC,OAAO,EAAG,IAAI,GACdC,MAAM,EAAG,KAAK,GACdC,KAAK,EAAG,IAAI,GACZC,SAAS,EAAG,IAAI,GAChBC,EAAE,GACFC,QAAQ,EAAG,EAAE,GACb,GAAGC,KAAK,EACT,EACDC,YAAY,iBAEZ,oBAACC,KAAG,EAAA,QAAA,CAAA;AACFL,QAAAA,SAAS,EAAE,CAAC,UAAU,EAAEM,WAAE,CAACR,MAAM,EAAE,oBAAoB,CAAC,CAAC,EAAEQ,WAAE,CAC3DT,OAAO,EACP,CAAC,YAAY,EAAEA,OAAO,CAAC,CAAC,CACzB,CAAC,EAAES,WAAE,CAACN,SAAS,CAAC,CAAC,CAAC;OACfE,QAAQ,CAAA,gBAEZ,oBAACH,OAAK,EAAA;AAACC,QAAAA,SAAS,EAAC,OAAO;AAACO,QAAAA,OAAO,EAAEN,EAAE,IAAIE,KAAK,CAACK,IAAI;AAChD,KAAA,gBAAA,KAAA,CAAA,aAAA,CAACL,OAAK,EAAA,QAAA,CAAA;AAACM,QAAAA,IAAI,EAAC,OAAO;AAACR,QAAAA,EAAE,EAAEA,EAAE;OAAME,KAAK,EAAA;AAAEO,QAAAA,GAAG,EAAEN,YAAY;AAAI,KAAA,CAAA,CAAA,gBAC5D,oBAACO,MAAI,EAAA;AAACX,QAAAA,SAAS,EAAC,cAAc;MAAG,EAChCD,KAAK,iBAAG,KAAA,CAAA,aAAA,CAACY,MAAI,EAAA;AAACX,QAAAA,SAAS,EAAC,cAAc;AAAED,KAAAA,EAAAA,KAAK,CAAQ,GAAG,IAAI,CACvD,CACJ;AACP,EACD;MAcWa,MAAM,GAAoB,CAAC,EAAEC,MAAM,GAAEC,KAAK,GAAEC,QAAQ,GAAEP,IAAI,GAAE,GAAK;AAC5E,IAAA,MAAMQ,aAAa,GAAGC,WAAW,CAC/B,CAACC,CAAgC,GAAK;QACpCA,CAAC,CAACC,OAAO,EAAE,CAAC;AAEZ,QAAA,IAAID,CAAC,CAACE,MAAM,CAACC,OAAO,EAAE;AACpBN,YAAAA,QAAQ,CAACG,CAAC,CAACE,MAAM,CAACN,KAAK,CAAC,CAAC;AAC1B,SAAA;KACF,EACD;QAACC,QAAQ;AAAC,KAAA,CACX,CAAC;IAEF,qBACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACGF,MAAM,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,iBACjB,KAAA,CAAA,aAAA,CAAC7B,KAAK,EAAA;YACJM,EAAE,EAAEsB,CAAC,CAACT,KAAK;YACXf,KAAK,EAAEwB,CAAC,CAACxB,KAAK;YACd0B,GAAG,EAAEF,CAAC,CAACT,KAAK;YACZN,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC,CAAC,EAAEgB,GAAG,CAAC,CAAC;AACtBT,YAAAA,QAAQ,EAAEC,aAAa;AACvBK,YAAAA,OAAO,EAAEP,KAAK,KAAKS,CAAC,CAACT,KAAK;YAC1BA,KAAK,EAAES,CAAC,CAACT,KAAK;AACd,SAAA,CAAA;AACH,KAAC,CACD,CACH;;;;;"}