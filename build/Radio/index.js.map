{"version":3,"file":"index.js","sources":["../../src/Radio/Radio.tsx"],"sourcesContent":["import React, {\n  ChangeEvent,\n  FC,\n  forwardRef,\n  HTMLProps,\n  ReactNode,\n  useCallback,\n} from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ninterface RadioProps extends Omit<HTMLProps<HTMLInputElement>, \"label\"> {\n  spacing?: \"compressed\" | \"regular\" | \"loose\" | \"nospacing\";\n  inline?: boolean;\n  label?: ReactNode;\n  className?: string;\n  id?: string;\n  divProps?: HTMLProps<HTMLDivElement>;\n}\n\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>(\n  (\n    {\n      spacing = null,\n      inline = false,\n      label = null,\n      className = null,\n      id,\n      divProps = {},\n      ...input\n    },\n    forwardedRef\n  ) => (\n    <div\n      className={`form-group${ac(inline, \"form-group--inline\")}${ac(\n        spacing,\n        `form-group--${spacing}`\n      )}${ac(className)}`}\n      {...divProps}\n    >\n      <label className=\"radio\" htmlFor={id || input.name}>\n        <input type=\"radio\" id={id} {...input} ref={forwardedRef} />\n        <span className=\"radio__input\" />\n        {label ? <span className=\"radio__label\">{label}</span> : null}\n      </label>\n    </div>\n  )\n);\n\ninterface RadioValue {\n  value: string;\n  label: ReactNode;\n}\n\ninterface RadiosProps {\n  values: RadioValue[];\n  value: string;\n  onChange: (value: string) => void;\n  name: string;\n}\n\nexport const Radios: FC<RadiosProps> = ({ values, value, onChange, name }) => {\n  const onRadioChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      e.persist();\n\n      if (e.target.checked) {\n        onChange(e.target.value);\n      }\n    },\n    [onChange]\n  );\n\n  return (\n    <>\n      {values.map((v, idx) => (\n        <Radio\n          id={v.value}\n          label={v.label}\n          key={v.value}\n          name={`${name}.${idx}`}\n          onChange={onRadioChange}\n          checked={value === v.value}\n          value={v.value}\n        />\n      ))}\n    </>\n  );\n};\n"],"names":["Radio","forwardRef","spacing","inline","label","className","id","divProps","input","forwardedRef","div","ac","htmlFor","name","type","ref","span","Radios","values","value","onChange","onRadioChange","useCallback","e","persist","target","checked","map","v","idx","key"],"mappings":";;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;AAoBaA,MAAAA,KAAAA,iBAAQC,UACnB,CAAA,CACE,EACEC,OAAAA,EAAU,IAAI,GACdC,MAAAA,EAAS,KAAK,GACdC,KAAQ,EAAA,IAAI,GACZC,SAAY,EAAA,IAAI,GAChBC,KACAC,QAAAA,EAAW,EAAC,GACZ,GAAGC,KACJ,EAAA,EACDC,6BAEA,KAACC,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA,QAAAA,CAAAA;AACCL,QAAAA,SAAAA,EAAW,CAAC,UAAU,EAAEM,YAAGR,MAAQ,EAAA,oBAAA,CAAA,CAAsB,EAAEQ,WACzDT,CAAAA,OAAAA,EACA,CAAC,YAAY,EAAEA,OAAQ,CAAA,CAAC,EACxB,EAAES,WAAAA,CAAGN,WAAW,CAAC;AACfE,KAAAA,EAAAA,QAAAA,CAAAA,gBAEJ,KAACH,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA;QAAMC,SAAU,EAAA,OAAA;QAAQO,OAASN,EAAAA,EAAAA,IAAME,MAAMK,IAAI;qBAChD,KAACL,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,QAAAA,CAAAA;QAAMM,IAAK,EAAA,OAAA;QAAQR,EAAIA,EAAAA,EAAAA;AAAQE,KAAAA,EAAAA,KAAAA,EAAAA;QAAOO,GAAKN,EAAAA,YAAAA;uBAC5C,KAACO,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;QAAKX,SAAU,EAAA,cAAA;AACfD,KAAAA,CAAAA,EAAAA,KAAAA,iBAAQ,KAACY,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;QAAKX,SAAU,EAAA,cAAA;AAAgBD,KAAAA,EAAAA,KAAAA,CAAAA,GAAgB,IAAI,CAInE,CAAA,EAAA;AAcWa,MAAAA,MAAAA,GAA0B,CAAC,EAAEC,MAAM,GAAEC,KAAK,GAAEC,QAAQ,GAAEP,IAAI,GAAE,GAAK;IAC5E,MAAMQ,aAAAA,GAAgBC,WACpB,CAAA,CAACC,CAAqC,GAAA;AACpCA,QAAAA,CAAAA,CAAEC,OAAO,EAAA,CAAA;AAET,QAAA,IAAID,CAAEE,CAAAA,MAAM,CAACC,OAAO,EAAE;YACpBN,QAASG,CAAAA,CAAAA,CAAEE,MAAM,CAACN,KAAK,CAAA,CAAA;SACxB;KAEH,EAAA;AAACC,QAAAA,QAAAA;AAAS,KAAA,CAAA,CAAA;AAGZ,IAAA,qBACE,0CACGF,MAAOS,CAAAA,GAAG,CAAC,CAACC,CAAAA,EAAGC,oBACd,KAAC7B,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AACCM,YAAAA,EAAAA,EAAIsB,EAAET,KAAK;AACXf,YAAAA,KAAAA,EAAOwB,EAAExB,KAAK;AACd0B,YAAAA,GAAAA,EAAKF,EAAET,KAAK;AACZN,YAAAA,IAAAA,EAAM,CAAC,EAAEA,IAAAA,CAAK,CAAC,EAAEgB,IAAI,CAAC;YACtBT,QAAUC,EAAAA,aAAAA;YACVK,OAASP,EAAAA,KAAAA,KAAUS,EAAET,KAAK;AAC1BA,YAAAA,KAAAA,EAAOS,EAAET,KAAK;;AAKxB;;;;"}