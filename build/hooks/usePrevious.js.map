{"version":3,"file":"usePrevious.js","sources":["../../src/hooks/usePrevious.ts"],"sourcesContent":["import { useEffect, useRef, type MutableRefObject } from \"react\";\n\n/**\n * a type-safe version of the `usePrevious` hook described here:\n * @see {@link https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state}\n */\nexport function usePrevious<T>(\n  value: T\n): MutableRefObject<T | undefined>[\"current\"] {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n"],"names":["usePrevious","value","ref","useRef","useEffect","current"],"mappings":"oCAMO,SAASA,YACdC,KAAQ,CACoC,CAC5C,IAAMC,IAAMC,SACZC,UAAU,UAAM,CACdF,IAAIG,OAAO,CAAGJ,OACb,CAACA,MAAM,EACV,OAAOC,IAAIG,OAAO,AACpB"}