{"version":3,"file":"usePrevious.js","sources":["../../src/hooks/usePrevious.ts"],"sourcesContent":["import { useEffect, useRef, type MutableRefObject } from \"react\";\n\n/**\n * a type-safe version of the `usePrevious` hook described here:\n * @see {@link https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state}\n */\nexport function usePrevious<T>(\n  value: T\n): MutableRefObject<T | undefined>[\"current\"] {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n"],"names":["usePrevious","value","ref","useRef","useEffect"],"mappings":"8CAMgB,SAAAA,EACdC,EAC4C,CAC5C,MAAMC,EAAMC,EAAU,EACtB,OAAAC,EAAU,IAAM,CACdF,EAAI,QAAUD,CAChB,EAAG,CAACA,CAAK,CAAC,EACHC,EAAI,OACb"}