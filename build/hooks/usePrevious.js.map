{"version":3,"file":"usePrevious.js","sources":["../../src/hooks/usePrevious.ts"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport type { MutableRefObject } from \"react\";\n\n/**\n * a type-safe version of the `usePrevious` hook described here:\n * @see {@link https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state}\n */\nexport function usePrevious<T>(\n  value: T\n): MutableRefObject<T | undefined>[\"current\"] {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n"],"names":["usePrevious","value","ref","useRef","useEffect","current"],"mappings":";;AAGA;;;AAGC,IACM,SAASA,WACdC,CAAAA,KAAQ,EACoC;AAC5C,IAAA,MAAMC,GAAMC,GAAAA,MAAAA,EAAAA,CAAAA;AACZC,IAAAA,SAAAA,CAAU,IAAM;AACdF,QAAAA,GAAAA,CAAIG,OAAO,GAAGJ,KAAAA,CAAAA;KACb,EAAA;AAACA,QAAAA,KAAAA;AAAM,KAAA,CAAA,CAAA;AACV,IAAA,OAAOC,IAAIG,OAAO,CAAA;AACpB;;;;"}