function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}import{useLayoutEffect,useEffect,useState}from"react";var useIsomorphicEffect=typeof document!=="undefined"?useLayoutEffect:useEffect;function useLockedBody(){var initialLocked=arguments.length>0&&arguments[0]!==void 0?arguments[0]:false,rootId=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"___gatsby";var ref=_slicedToArray(useState(initialLocked),2),locked=ref[0],setLocked=ref[1];useIsomorphicEffect(function(){if(!locked){return}var originalOverflow=document.body.style.overflow;var originalPaddingRight=document.body.style.paddingRight;document.body.style.overflow="hidden";var root=document.getElementById(rootId);var scrollBarWidth=root?root.offsetWidth-root.scrollWidth:0;if(scrollBarWidth){document.body.style.paddingRight="".concat(scrollBarWidth,"px")}return function(){document.body.style.overflow=originalOverflow;if(scrollBarWidth){document.body.style.paddingRight=originalPaddingRight}}},[locked]);useEffect(function(){if(locked!==initialLocked){setLocked(initialLocked)}},[initialLocked]);return[locked,setLocked]}export{useLockedBody};
//# sourceMappingURL=useLockedBody.js.map
