{"version":3,"file":"useLockedBody.js","sources":["../../src/hooks/useIsomorphicEffect.ts","../../src/hooks/useLockedBody.ts"],"sourcesContent":["import { useEffect, useLayoutEffect } from \"react\";\n\n// useLayoutEffect will show warning if used during ssr, e.g. with Next.js\n// useIsomorphicEffect removes it by replacing useLayoutEffect with useEffect during ssr\nexport const useIsomorphicEffect =\n  typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { useEffect, useState } from \"react\";\n\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\n\ntype UseLockedBodyOutput = [boolean, (locked: boolean) => void];\n\nexport function useLockedBody(\n  initialLocked = false,\n  rootId = \"___gatsby\" // Default to `___gatsby` to not introduce breaking change\n): UseLockedBodyOutput {\n  const [locked, setLocked] = useState(initialLocked);\n\n  // Do the side effect before render\n  useIsomorphicEffect(() => {\n    if (!locked) {\n      return;\n    }\n\n    // Save initial body style\n    const originalOverflow = document.body.style.overflow;\n    const originalPaddingRight = document.body.style.paddingRight;\n\n    // Lock body scroll\n    document.body.style.overflow = \"hidden\";\n\n    // Get the scrollBar width\n    const root = document.getElementById(rootId); // or root\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n\n    // Avoid width reflow\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow;\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight;\n      }\n    };\n  }, [locked]);\n\n  // Update state if initialValue changes\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialLocked]);\n\n  return [locked, setLocked];\n}\n"],"names":["useIsomorphicEffect","useLayoutEffect","useEffect","useLockedBody","initialLocked","rootId","locked","setLocked","useState","originalOverflow","originalPaddingRight","root","scrollBarWidth"],"mappings":"2EAIaA,EACX,OAAO,SAAa,IAAcC,EAAkBC,ECCtC,SAAAC,EACdC,EAAgB,GAChBC,EAAS,YACY,CACrB,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAASJ,CAAa,EAGlD,OAAAJ,EAAoB,IAAM,CACxB,GAAI,CAACM,EACH,OAIF,MAAMG,EAAmB,SAAS,KAAK,MAAM,SACvCC,EAAuB,SAAS,KAAK,MAAM,aAGjD,SAAS,KAAK,MAAM,SAAW,SAG/B,MAAMC,EAAO,SAAS,eAAeN,CAAM,EACrCO,EAAiBD,EAAOA,EAAK,YAAcA,EAAK,YAAc,EAGpE,OAAIC,IACF,SAAS,KAAK,MAAM,aAAe,GAAGA,OAGjC,IAAM,CACX,SAAS,KAAK,MAAM,SAAWH,EAE3BG,IACF,SAAS,KAAK,MAAM,aAAeF,EAEvC,CACF,EAAG,CAACJ,CAAM,CAAC,EAGXJ,EAAU,IAAM,CACVI,IAAWF,GACbG,EAAUH,CAAa,CAG3B,EAAG,CAACA,CAAa,CAAC,EAEX,CAACE,EAAQC,CAAS,CAC3B"}