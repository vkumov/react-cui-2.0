{"version":3,"file":"useLockedBody.js","sources":["../../src/hooks/useIsomorphicEffect.ts","../../src/hooks/useLockedBody.ts"],"sourcesContent":["import { useEffect, useLayoutEffect } from \"react\";\n\n// useLayoutEffect will show warning if used during ssr, e.g. with Next.js\n// useIsomorphicEffect removes it by replacing useLayoutEffect with useEffect during ssr\nexport const useIsomorphicEffect =\n  typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { useEffect, useState } from \"react\";\n\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\n\ntype UseLockedBodyOutput = [boolean, (locked: boolean) => void];\n\nexport function useLockedBody(\n  initialLocked = false,\n  rootId = \"___gatsby\" // Default to `___gatsby` to not introduce breaking change\n): UseLockedBodyOutput {\n  const [locked, setLocked] = useState(initialLocked);\n\n  // Do the side effect before render\n  useIsomorphicEffect(() => {\n    if (!locked) {\n      return;\n    }\n\n    // Save initial body style\n    const originalOverflow = document.body.style.overflow;\n    const originalPaddingRight = document.body.style.paddingRight;\n\n    // Lock body scroll\n    document.body.style.overflow = \"hidden\";\n\n    // Get the scrollBar width\n    const root = document.getElementById(rootId); // or root\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n\n    // Avoid width reflow\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow;\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight;\n      }\n    };\n  }, [locked]);\n\n  // Update state if initialValue changes\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialLocked]);\n\n  return [locked, setLocked];\n}\n"],"names":["useIsomorphicEffect","document","useLayoutEffect","useEffect","useLockedBody","initialLocked","rootId","useState","locked","setLocked","originalOverflow","body","style","overflow","originalPaddingRight","paddingRight","root","getElementById","scrollBarWidth","offsetWidth","scrollWidth"],"mappings":"i3CAIO,IAAMA,oBACX,OAAOC,WAAa,YAAcC,gBAAkBC,SAAS,CCCxD,SAASC,eAGO,KAFrBC,cAAAA,uDAAgB,KAAK,CACrBC,OAAAA,uDAAS,YAET,IAA4BC,mBAAAA,SAASF,kBAA9BG,OAAqBD,OAAbE,UAAaF,OAG5BP,oBAAoB,UAAM,CACxB,GAAI,CAACQ,OAAQ,CACX,MACD,CAAA,AAGD,IAAME,iBAAmBT,SAASU,IAAI,CAACC,KAAK,CAACC,QAAQ,CACrD,IAAMC,qBAAuBb,SAASU,IAAI,CAACC,KAAK,CAACG,YAAY,AAG7Dd,CAAAA,SAASU,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,SAG/B,IAAMG,KAAOf,SAASgB,cAAc,CAACX,QACrC,IAAMY,eAAiBF,KAAOA,KAAKG,WAAW,CAAGH,KAAKI,WAAW,CAAG,CAAC,CAGrE,GAAIF,eAAgB,CAClBjB,SAASU,IAAI,CAACC,KAAK,CAACG,YAAY,CAAG,AAAC,GAAiB,OAAfG,eAAe,KACtD,CAAA,AAED,OAAO,UAAM,CACXjB,SAASU,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAGH,iBAE/B,GAAIQ,eAAgB,CAClBjB,SAASU,IAAI,CAACC,KAAK,CAACG,YAAY,CAAGD,oBACpC,CAAA,AACH,GACC,CAACN,OAAO,EAGXL,UAAU,UAAM,CACd,GAAIK,SAAWH,cAAe,CAC5BI,UAAUJ,cACX,CAAA,EAEA,CAACA,cAAc,EAElB,MAAO,CAACG,OAAQC,UAAU,AAC5B"}