{"version":3,"file":"useClickInside.js","sources":["../../src/hooks/useClickInside.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\n\nexport function useClickInside<T extends HTMLElement = any>(\n  handler: () => void,\n  events?: string[] | null,\n  nodes?: HTMLElement[]\n) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (Array.isArray(nodes)) {\n        const shouldIgnore = event?.target?.hasAttribute(\n          \"data-ignore-inside-clicks\"\n        );\n        const shouldTrigger = nodes.every(\n          (node) => Boolean(node) && node.contains(event.target)\n        );\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach((fn) =>\n      document.addEventListener(fn, listener)\n    );\n\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) =>\n        document.removeEventListener(fn, listener)\n      );\n    };\n  }, [ref, handler, nodes]);\n\n  return ref;\n}\n"],"names":["DEFAULT_EVENTS","useClickInside","handler","events","nodes","ref","useRef","useEffect","listener","event","_a","shouldIgnore","node","fn"],"mappings":"8CAEA,MAAMA,EAAiB,CAAC,YAAa,YAAY,WAEjCC,EACdC,EACAC,EACAC,EACA,CACA,MAAMC,EAAMC,IAEZ,OAAAC,EAAU,IAAM,CACd,MAAMC,EAAYC,GAAe,CAZrC,IAAAC,EAaM,GAAI,MAAM,QAAQN,CAAK,EAAG,CACxB,MAAMO,GAAeD,EAAAD,GAAO,SAAP,KAAAC,OAAAA,EAAe,aAClC,2BAEoBN,EAAAA,EAAM,MACzBQ,GAAS,CAAQA,CAAAA,GAASA,EAAK,SAASH,EAAM,MAAM,CACvD,GACiB,CAACE,GAAgBT,SACzBG,EAAI,SAAW,CAACA,EAAI,QAAQ,SAASI,EAAM,MAAM,GAC1DP,GAEJ,EAEA,OAACC,GAAUH,GAAgB,QAASa,GAClC,SAAS,iBAAiBA,EAAIL,CAAQ,CACxC,EAEO,IAAM,EACVL,GAAUH,GAAgB,QAASa,GAClC,SAAS,oBAAoBA,EAAIL,CAAQ,CAC3C,CACF,CACF,EAAG,CAACH,EAAKH,EAASE,CAAK,CAAC,EAEjBC,CACT"}