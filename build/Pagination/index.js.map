{"version":3,"file":"index.js","sources":["../../src/Pagination/PaginationContext.ts","../../src/Pagination/Pagination.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\n\ntype IPaginationContext = {\n  active: number;\n  beginAt: number;\n  changePage: (e, position: number) => void;\n  firstAndLast: boolean;\n  icons: boolean;\n  next: ReactNode;\n  perPage: number;\n  position: number;\n  prev: ReactNode;\n  total: number;\n};\n\nexport const PaginationContext = React.createContext<IPaginationContext>(null);\n","import React, { FC, ReactNode } from \"react\";\nimport { PaginationContext } from \"./PaginationContext\";\n\ntype ButtonProps = {\n  active?: boolean;\n  content: ReactNode;\n  disabled?: boolean;\n  position: number;\n};\n\nconst Button: FC<ButtonProps> = ({\n  content,\n  position,\n  active = false,\n  disabled = false,\n}) => (\n  <PaginationContext.Consumer>\n    {({ changePage }) => (\n      <li className={active ? \"active\" : \"\"}>\n        <a\n          className={disabled ? \"disabled\" : \"\"}\n          onClick={(e) => changePage(e, position)}\n        >\n          {content}\n        </a>\n      </li>\n    )}\n  </PaginationContext.Consumer>\n);\n\nconst FirstPrev = (): JSX.Element => {\n  const { perPage, firstAndLast, position, icons, prev, beginAt } =\n    React.useContext(PaginationContext);\n  const disabled = position < perPage + beginAt;\n\n  const r: JSX.Element[] = [];\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-left-double\" />}\n        disabled={disabled}\n        key=\"first-page\"\n        position={beginAt}\n      />\n    );\n\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-left\" /> : prev}\n      disabled={disabled}\n      key=\"previous-page\"\n      position={position - perPage}\n    />\n  );\n\n  return <>{r}</>;\n};\n\nconst NextLast = (): JSX.Element => {\n  const { beginAt, perPage, total, firstAndLast, position, icons, next } =\n    React.useContext(PaginationContext);\n  const pages = Math.floor(total / perPage) + 1;\n  const disabled = position > total - perPage + beginAt;\n\n  const r: JSX.Element[] = [];\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-right\" /> : next}\n      disabled={disabled}\n      key=\"next-page\"\n      position={position + perPage}\n    />\n  );\n\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-right-double\" />}\n        disabled={disabled}\n        key=\"last-page\"\n        position={(pages - 1) * perPage + beginAt}\n      />\n    );\n\n  return <>{r}</>;\n};\n\ntype PagesProps = {\n  start: number;\n  finish: number;\n};\n\nconst Pages: FC<PagesProps> = ({ start, finish }) => (\n  <PaginationContext.Consumer>\n    {({ perPage, active, beginAt }) =>\n      [...Array(finish - start + 1)].map((v, i) => {\n        const current = start + i;\n        return (\n          <Button\n            active={active === current}\n            content={`${current}`}\n            key={`${current}-page`}\n            position={(current - 1) * perPage + beginAt}\n          />\n        );\n      })\n    }\n  </PaginationContext.Consumer>\n);\n\nexport type PaginationProps = {\n  size?: \"small\" | \"default\" | \"large\";\n  rounded?: boolean;\n  icons?: boolean;\n  next?: ReactNode;\n  prev?: ReactNode;\n  position: number;\n  perPage?: number;\n  total: number;\n  onPageChange: (e, position: number) => void;\n  firstAndLast?: boolean;\n  beginAt?: number;\n  className?: string;\n};\n\nexport const Pagination: FC<PaginationProps> = ({\n  beginAt = 1,\n  rounded = false,\n  firstAndLast = true,\n  icons = false,\n  next = \"Next\",\n  perPage = 1,\n  prev = \"Previous\",\n  size = \"default\",\n  className = null,\n  position,\n  total,\n  onPageChange,\n  ...rest\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const active = Math.floor(position / perPage) + 1;\n\n  const changePage = (e, newPosition) => {\n    if (typeof onPageChange === \"function\") onPageChange(e, newPosition);\n  };\n\n  return (\n    <PaginationContext.Provider\n      value={{\n        active,\n        beginAt,\n        changePage,\n        firstAndLast,\n        icons,\n        next,\n        perPage,\n        position,\n        prev,\n        total,\n      }}\n    >\n      <ul\n        className={`pagination${\n          size !== \"default\" ? ` pagination--${size}` : \"\"\n        }${rounded ? \" pagination--rounded\" : \"\"}${\n          className ? ` ${className}` : \"\"\n        }`}\n        {...rest}\n      >\n        <FirstPrev />\n        {active < 4 || pages === 4 ? (\n          <>\n            <Pages start={1} finish={Math.min(pages, 4)} />\n            {pages > 4 ? (\n              <>\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : null}\n          </>\n        ) : (\n          <>\n            <Button\n              active={active === beginAt}\n              content=\"1\"\n              key=\"1-page\"\n              position={beginAt}\n            />\n            <li>\n              <span className=\"icon-more\" />\n            </li>\n            {active < pages - 2 ? (\n              <>\n                <Pages start={active - 1} finish={active + 1} />\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  active={active === pages}\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : (\n              <Pages start={pages - 3} finish={pages} />\n            )}\n          </>\n        )}\n        <NextLast />\n      </ul>\n    </PaginationContext.Provider>\n  );\n};\n"],"names":["PaginationContext","React","createContext","Button","content","position","active","disabled","Consumer","changePage","li","className","a","onClick","e","FirstPrev","useContext","perPage","firstAndLast","icons","prev","beginAt","r","push","span","key","NextLast","total","next","pages","Math","floor","Pages","start","finish","Array","map","v","i","current","Pagination","rounded","size","onPageChange","rest","ceil","newPosition","Provider","value","ul","min"],"mappings":"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"}