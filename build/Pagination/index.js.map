{"version":3,"file":"index.js","sources":["../../src/Pagination/PaginationContext.tsx","../../src/Pagination/Pagination.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\n\ntype IPaginationContext = {\n  active: number;\n  beginAt: number;\n  changePage: (e, position: number) => void;\n  firstAndLast: boolean;\n  icons: boolean;\n  next: ReactNode;\n  perPage: number;\n  position: number;\n  prev: ReactNode;\n  total: number;\n};\n\nexport const PaginationContext = React.createContext<IPaginationContext>(null);\n","import React, { FC, ReactNode } from \"react\";\n\nimport { PaginationContext } from \"./PaginationContext\";\n\ntype ButtonProps = {\n  active?: boolean;\n  content: ReactNode;\n  disabled?: boolean;\n  position: number;\n};\n\nconst Button: FC<ButtonProps> = ({\n  content,\n  position,\n  active = false,\n  disabled = false,\n}) => (\n  <PaginationContext.Consumer>\n    {({ changePage }) => (\n      <li className={active ? \"active\" : \"\"}>\n        <a\n          className={disabled ? \"disabled\" : \"\"}\n          onClick={(e) => changePage(e, position)}\n        >\n          {content}\n        </a>\n      </li>\n    )}\n  </PaginationContext.Consumer>\n);\n\nconst FirstPrev = (): JSX.Element => {\n  const { perPage, firstAndLast, position, icons, prev, beginAt } =\n    React.useContext(PaginationContext);\n  const disabled = position < perPage + beginAt;\n\n  const r: JSX.Element[] = [];\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-left-double\" />}\n        disabled={disabled}\n        key=\"first-page\"\n        position={beginAt}\n      />\n    );\n\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-left\" /> : prev}\n      disabled={disabled}\n      key=\"previous-page\"\n      position={position - perPage}\n    />\n  );\n\n  return <>{r}</>;\n};\n\nconst NextLast = (): JSX.Element => {\n  const { beginAt, perPage, total, firstAndLast, position, icons, next } =\n    React.useContext(PaginationContext);\n  const pages = Math.floor(total / perPage) + 1;\n  const disabled = position > total - perPage + beginAt;\n\n  const r: JSX.Element[] = [];\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-right\" /> : next}\n      disabled={disabled}\n      key=\"next-page\"\n      position={position + perPage}\n    />\n  );\n\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-right-double\" />}\n        disabled={disabled}\n        key=\"last-page\"\n        position={(pages - 1) * perPage + beginAt}\n      />\n    );\n\n  return <>{r}</>;\n};\n\ntype PagesProps = {\n  start: number;\n  finish: number;\n};\n\nconst Pages: FC<PagesProps> = ({ start, finish }) => (\n  <PaginationContext.Consumer>\n    {({ perPage, active, beginAt }) =>\n      [...Array(finish - start + 1)].map((v, i) => {\n        const current = start + i;\n        return (\n          <Button\n            active={active === current}\n            content={`${current}`}\n            key={`${current}-page`}\n            position={(current - 1) * perPage + beginAt}\n          />\n        );\n      })\n    }\n  </PaginationContext.Consumer>\n);\n\nexport type PaginationProps = {\n  size?: \"small\" | \"default\" | \"large\";\n  rounded?: boolean;\n  icons?: boolean;\n  next?: ReactNode;\n  prev?: ReactNode;\n  position: number;\n  perPage?: number;\n  total: number;\n  onPageChange: (e, position: number) => void;\n  firstAndLast?: boolean;\n  beginAt?: number;\n  className?: string;\n};\n\nexport const Pagination: FC<PaginationProps> = ({\n  beginAt = 1,\n  rounded = false,\n  firstAndLast = true,\n  icons = false,\n  next = \"Next\",\n  perPage = 1,\n  prev = \"Previous\",\n  size = \"default\",\n  className = null,\n  position,\n  total,\n  onPageChange,\n  ...rest\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const active = Math.floor(position / perPage) + 1;\n\n  const changePage = (e, newPosition) => {\n    if (typeof onPageChange === \"function\") onPageChange(e, newPosition);\n  };\n\n  return (\n    <PaginationContext.Provider\n      value={{\n        active,\n        beginAt,\n        changePage,\n        firstAndLast,\n        icons,\n        next,\n        perPage,\n        position,\n        prev,\n        total,\n      }}\n    >\n      <ul\n        className={`pagination${\n          size !== \"default\" ? ` pagination--${size}` : \"\"\n        }${rounded ? \" pagination--rounded\" : \"\"}${\n          className ? ` ${className}` : \"\"\n        }`}\n        {...rest}\n      >\n        <FirstPrev />\n        {active < 4 || pages === 4 ? (\n          <>\n            <Pages start={1} finish={Math.min(pages, 4)} />\n            {pages > 4 ? (\n              <>\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : null}\n          </>\n        ) : (\n          <>\n            <Button\n              active={active === beginAt}\n              content=\"1\"\n              key=\"1-page\"\n              position={beginAt}\n            />\n            <li>\n              <span className=\"icon-more\" />\n            </li>\n            {active < pages - 2 ? (\n              <>\n                <Pages start={active - 1} finish={active + 1} />\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  active={active === pages}\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : (\n              <Pages start={pages - 3} finish={pages} />\n            )}\n          </>\n        )}\n        <NextLast />\n      </ul>\n    </PaginationContext.Provider>\n  );\n};\n"],"names":["PaginationContext","React","createContext","_extends","Button","content","position","active","disabled","createElement","Consumer","changePage","li","className","a","onClick","e","FirstPrev","useContext","perPage","firstAndLast","icons","prev","beginAt","r","push","span","key","NextLast","total","next","pages","Math","floor","Pages","start","finish","Array","map","v","i","current","Pagination","rounded","size","onPageChange","rest","ceil","newPosition","Provider","value","ul","min","Fragment"],"mappings":"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"}