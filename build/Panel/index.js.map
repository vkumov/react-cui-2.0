{"version":3,"file":"index.js","sources":["../../src/Panel/Panel.tsx"],"sourcesContent":["import React, { FC, HTMLProps } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\nimport \"../../css/panel.css\";\n\ntype Borders = \"top\" | \"right\" | \"left\" | \"bottom\";\n\nexport interface PanelProps {\n  color?:\n    | \"plain\"\n    | \"primary\"\n    | \"secondary\"\n    | \"tertiary\"\n    | \"success\"\n    | \"info\"\n    | \"warning-alt\"\n    | \"warning\"\n    | \"danger\"\n    | \"dark\"\n    | \"light\"\n    | \"lightest\";\n  padding?: \"none\" | \"compressed\" | \"default\" | \"loose\";\n  bordered?: boolean | Borders | Borders[];\n  raised?: boolean;\n  well?: boolean;\n  className?: string;\n}\n\nexport const Panel: FC<PanelProps & HTMLProps<HTMLDivElement>> =\n  React.forwardRef<HTMLDivElement, PanelProps>(\n    (\n      {\n        color = \"plain\",\n        padding = \"default\",\n        bordered = false,\n        raised = false,\n        well = false,\n        className = null,\n        ...props\n      },\n      ref\n    ) => (\n      <div\n        className={`panel${ac(color !== \"plain\", `panel--${color}`)}${ac(\n          padding !== \"default\",\n          `panel--${padding}`\n        )}${ac(bordered, () => {\n          if (typeof bordered === \"string\")\n            return `panel--bordered-${bordered}`;\n          if (Array.isArray(bordered))\n            return bordered.map((b) => `panel--bordered-${b}`).join(\" \");\n          return \"panel--bordered\";\n        })}${ac(raised, \"panel--raised\")}${ac(well, \"panel--well\")}${ac(\n          className\n        )}`}\n        ref={ref}\n        {...props}\n      />\n    )\n  );\n"],"names":["Panel","React","forwardRef","ref","color","padding","bordered","raised","well","className","props","div","ac","Array","isArray","map","b","join"],"mappings":";;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BaA,IAAAA,KAAK,iBAChBC,KAAK,CAACC,UAAU,CACd,SAAA,MAAA,EAUEC,GAAG,EAEH,CAAA;AAVEC,IAAAA,IAAAA,MAAAA,GAAAA,MAAAA,CAAAA,KAAK,EAALA,KAAK,GAAA,MAAA,KAAA,KAAA,CAAA,GAAG,OAAO,GAAA,MAAA,EAAA,QAAA,GAAA,MAAA,CACfC,OAAO,EAAPA,OAAO,GAAG,QAAA,KAAA,KAAA,CAAA,GAAA,SAAS,WAAA,EACnBC,SAAAA,GAAAA,MAAAA,CAAAA,QAAQ,EAARA,QAAQ,GAAA,SAAA,KAAA,KAAA,CAAA,GAAG,KAAK,GAAA,SAAA,EAAA,OAAA,GAAA,MAAA,CAChBC,MAAM,EAANA,MAAM,GAAG,OAAA,KAAA,KAAA,CAAA,GAAA,KAAK,UAAA,EACdC,KAAAA,GAAAA,MAAAA,CAAAA,IAAI,EAAJA,IAAI,GAAA,KAAA,KAAA,KAAA,CAAA,GAAG,KAAK,GAAA,KAAA,EAAA,UAAA,GAAA,MAAA,CACZC,SAAS,EAATA,SAAS,2BAAG,IAAI,GAAA,UAAA,EACbC,KAAK,GAAA,wBAAA,CAAA,MAAA,EAAA;QANRN,OAAK;QACLC,SAAO;QACPC,UAAQ;QACRC,QAAM;QACNC,MAAI;QACJC,WAAS;;AAKX,IAAA,OAAA,KAAA,CAAA,aAAA,CAACE,KAAG,EAAA,QAAA,CAAA;QACFF,SAAS,EAAE,OAAM,CAA6CG,MAG7D,CAHkBA,WAAE,CAACR,KAAK,KAAK,OAAO,EAAG,SAAO,CAAQ,MAAA,CAANA,KAAK,CAAE,CAAC,CAGzD,CAAEQ,MAMF,CAT4DA,WAAE,CAC9DP,OAAO,KAAK,SAAS,EACrB,SAAQ,CAAU,MAAA,CAARA,OAAO,CAAE,CACpB,CAME,CAAEO,MAA2B,CAN5BA,WAAE,CAACN,QAAQ,EAAE,WAAM;AACrB,YAAA,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAC9B,OAAO,kBAAiB,CAAW,MAAA,CAATA,QAAQ,CAAE,CAAC;AACvC,YAAA,IAAIO,KAAK,CAACC,OAAO,CAACR,QAAQ,CAAC,EACzB,OAAOA,QAAQ,CAACS,GAAG,CAAC,SAACC,CAAC,EAAA;AAAK,gBAAA,OAAC,kBAAgB,CAAI,MAAA,CAAFA,CAAC,CAAE,CAAA;AAAA,aAAA,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC/D,YAAA,OAAO,iBAAiB,CAAC;AAC1B,SAAA,CAAC,CAA+B,CAAEL,MAAuB,CAArDA,WAAE,CAACL,MAAM,EAAE,eAAe,CAAC,CAA2B,CAAEK,MAE5D,CAFkCA,WAAE,CAACJ,IAAI,EAAE,aAAa,CAAC,CAExD,CAAA,MAAA,CAF2DI,WAAE,CAC7DH,SAAS,CACV,CAAE;AACHN,QAAAA,GAAG,EAAEA,GAAG;AACJO,KAAAA,EAAAA,KAAK,CACT,CAAA,CAAA;AAAA,CACH;;;;"}