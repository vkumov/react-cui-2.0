{"version":3,"file":"index.js","sources":["../../src/Textarea/Textarea.tsx"],"sourcesContent":["import React, { type FC, type HTMLProps, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\nimport { InputHelpBlock } from \"src/InputHelp\";\n\ninterface TextareaProps extends React.HTMLAttributes<HTMLTextAreaElement> {\n  label?: ReactNode;\n  textareaClass?: string;\n  innerDivClass?: string;\n  inputRef?: React.Ref<HTMLTextAreaElement>;\n  className?: string;\n  inline?: boolean;\n  error?: ReactNode;\n}\n\nexport const Textarea: FC<TextareaProps & HTMLProps<HTMLTextAreaElement>> = ({\n  label = null,\n  textareaClass = null,\n  innerDivClass = null,\n  className = null,\n  id = null,\n  inputRef = null,\n  inline = false,\n  error = null,\n  ...textarea\n}) => {\n  return (\n    <div\n      className={cx(\"form-group\", {\n        \"form-group--inline\": inline,\n        \"form-group--error\": error,\n        [className]: className,\n      })}\n    >\n      <div className={cx(\"form-group__text\", innerDivClass)}>\n        <textarea className={textareaClass} ref={inputRef} {...textarea}>\n          {textarea.value}\n        </textarea>\n        {label ? <label htmlFor={id}>{label}</label> : null}\n      </div>\n      {error ? <InputHelpBlock text={error} /> : null}\n    </div>\n  );\n};\n"],"names":["Textarea","label","textareaClass","innerDivClass","className","id","inputRef","inline","error","textarea","React","cx","InputHelpBlock"],"mappings":"qJAeO,MAAMA,EAA+D,CAAC,CAC3E,MAAAC,EAAQ,KACR,cAAAC,EAAgB,KAChB,cAAAC,EAAgB,KAChB,UAAAC,EAAY,KACZ,GAAAC,EAAK,KACL,SAAAC,EAAW,KACX,OAAAC,EAAS,GACT,MAAAC,EAAQ,KACR,GAAGC,CACL,IAEIC,EAAA,cAAC,MAAA,CACC,UAAWC,EAAG,aAAc,CAC1B,qBAAsBJ,EACtB,oBAAqBC,EACrB,CAACJ,CAAS,EAAGA,CACf,CAAC,GAEDM,EAAA,cAAC,OAAI,UAAWC,EAAG,mBAAoBR,CAAa,CAAA,EAClDO,EAAA,cAAC,WAAA,CAAS,UAAWR,EAAe,IAAKI,EAAW,GAAGG,CACpDA,EAAAA,EAAS,KACZ,EACCR,EAAQS,EAAA,cAAC,QAAA,CAAM,QAASL,CAAKJ,EAAAA,CAAM,EAAW,IACjD,EACCO,EAAQE,EAAA,cAACE,EAAA,CAAe,KAAMJ,CAAO,CAAA,EAAK,IAC7C"}