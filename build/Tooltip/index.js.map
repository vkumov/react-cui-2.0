{"version":3,"file":"index.js","sources":["../../src/Tooltip/Tooltip.tsx"],"sourcesContent":["import React, {\n  type FC,\n  type PropsWithChildren,\n  type HTMLProps,\n  forwardRef,\n  useRef,\n  useState,\n  MutableRefObject,\n  ReactNode,\n  cloneElement,\n} from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { useMergeRefs } from \"use-callback-ref\";\n\nimport {\n  arrow,\n  flip,\n  FloatingPortal,\n  offset,\n  shift,\n  useFloating,\n  useHover,\n  useInteractions,\n  type Side,\n  type Placement,\n  useRole,\n} from \"@floating-ui/react\";\n\nimport { useFloatingContext } from \"src/FloatingProvider\";\n\nconst Tooltip = forwardRef<HTMLDivElement, HTMLProps<HTMLDivElement>>(\n  function TooltipRefed({ className, children, ...props }, ref) {\n    return (\n      <div ref={ref} className=\"tooltip__wrapper\" {...props}>\n        <div className={className}>{children}</div>\n      </div>\n    );\n  }\n);\n\nexport type UseTooltipReturn = ReturnType<typeof useFloating> & {\n  getFloatingProps: ReturnType<typeof useInteractions>[\"getFloatingProps\"];\n  show: boolean;\n  getReferenceProps: ReturnType<typeof useInteractions>[\"getReferenceProps\"];\n  arrowRef: MutableRefObject<any>;\n};\n\nexport function useTooltip(placement?: Placement): UseTooltipReturn {\n  const [show, setShow] = useState(false);\n  const arrowRef = useRef(null);\n  const fl = useFloating({\n    middleware: [\n      offset(6),\n      flip(),\n      shift({ padding: { left: 8, right: 8 } }),\n      arrow({ element: arrowRef }),\n    ],\n    open: show,\n    onOpenChange: setShow,\n    placement,\n  });\n\n  const role = useRole(fl.context, { role: \"tooltip\" });\n  const hover = useHover(fl.context, {\n    delay: {\n      open: 500,\n      close: 0,\n    },\n    move: false,\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    role,\n    hover,\n  ]);\n\n  return {\n    ...fl,\n    getFloatingProps,\n    show,\n    getReferenceProps,\n    arrowRef,\n  };\n}\n\nconst TooltipWrapper: FC<\n  PropsWithChildren<\n    Omit<ReturnType<typeof useTooltip>, \"getReferenceProps\" | \"reference\">\n  > & {\n    root?: Parameters<typeof FloatingPortal>[0][\"root\"];\n  }\n> = ({\n  children,\n  x,\n  y,\n  floating,\n  show,\n  strategy,\n  getFloatingProps,\n  middlewareData,\n  arrowRef,\n  placement,\n  root: rootProvided,\n}) => {\n  const { x: arrowX, y: arrowY } = middlewareData.arrow || { x: 0, y: 0 };\n  const floatingRef = useRef<any>(null);\n\n  const staticSide = {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\",\n  }[placement.split(\"-\")[0]] as Side;\n\n  const modalContext = useFloatingContext();\n  const root: HTMLElement | null | undefined =\n    rootProvided ?? modalContext ? modalContext.rootRef.current : undefined;\n\n  return (\n    <Transition\n      in={show}\n      mountOnEnter\n      unmountOnExit\n      timeout={200}\n      nodeRef={floatingRef}\n    >\n      {(state) => (\n        <FloatingPortal root={root}>\n          <Tooltip\n            ref={(r) => {\n              floating(r);\n              floatingRef.current = r;\n            }}\n            style={{\n              position: strategy,\n              top: y ?? 0,\n              left: x ?? 0,\n            }}\n            {...getFloatingProps({\n              className: `tooltip__body ${\n                state === \"exiting\" || state === \"exited\"\n                  ? \"tooltip--disappear\"\n                  : \"tooltip--appear\"\n              }`,\n            })}\n          >\n            {children}\n            <div\n              ref={arrowRef}\n              className=\"tooltip__arrow\"\n              style={{\n                left: arrowX != null ? `${arrowX}px` : \"\",\n                top: arrowY != null ? `${arrowY}px` : \"\",\n                right: \"\",\n                bottom: \"\",\n                [staticSide]: \"-4px\",\n              }}\n            />\n          </Tooltip>\n        </FloatingPortal>\n      )}\n    </Transition>\n  );\n};\n\nexport { TooltipWrapper as Tooltip };\n\nexport type WithTooltipProps = {\n  children: JSX.Element;\n  tooltip: ReactNode;\n  placement?: Placement;\n};\n\nexport const WithTooltip: FC<WithTooltipProps> = forwardRef(\n  ({ children, tooltip, placement = \"top\", ...props }, forwardedRef) => {\n    const { getReferenceProps, reference, ...tt } = useTooltip(placement);\n\n    const ref = useMergeRefs([reference, forwardedRef, (children as any).ref]);\n\n    return (\n      <>\n        {cloneElement(\n          children,\n          getReferenceProps({ ref, ...children.props, ...props })\n        )}\n        <TooltipWrapper {...tt}>{tooltip}</TooltipWrapper>\n      </>\n    );\n  }\n);\n\nWithTooltip.displayName = \"WithTooltip\";\n"],"names":["Tooltip","forwardRef","TooltipRefed","className","children","props","ref","div","useTooltip","placement","show","setShow","useState","arrowRef","useRef","fl","useFloating","middleware","offset","flip","shift","padding","left","right","arrow","element","open","onOpenChange","role","useRole","context","hover","useHover","delay","close","move","getReferenceProps","getFloatingProps","useInteractions","TooltipWrapper","x","y","floating","strategy","middlewareData","root","rootProvided","arrowX","arrowY","floatingRef","staticSide","top","bottom","split","modalContext","useFloatingContext","rootRef","current","undefined","Transition","in","mountOnEnter","unmountOnExit","timeout","nodeRef","state","FloatingPortal","r","style","position","WithTooltip","tooltip","forwardedRef","reference","tt","useMergeRefs","cloneElement","displayName"],"mappings":"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"}