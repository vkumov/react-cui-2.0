{"version":3,"file":"index.js","sources":["../../src/Tooltip/Tooltip.tsx"],"sourcesContent":["import React, {\n  cloneElement,\n  forwardRef,\n  useMemo,\n  useRef,\n  useState,\n  type ComponentProps,\n  type FC,\n  type HTMLProps,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type ReactNode,\n} from \"react\";\nimport {\n  FloatingPortal,\n  arrow,\n  flip,\n  offset,\n  shift,\n  useFloating,\n  useHover,\n  useInteractions,\n  useMergeRefs,\n  useRole,\n  type Placement,\n  type Side,\n} from \"@floating-ui/react\";\nimport { Transition } from \"react-transition-group\";\n\nimport { useFloatingContext } from \"src/FloatingProvider\";\n\nconst TooltipContent = forwardRef<HTMLDivElement, HTMLProps<HTMLDivElement>>(\n  function TooltipRefed({ className, children, ...props }, ref) {\n    return (\n      <div ref={ref} className=\"tooltip__wrapper\" {...props}>\n        <div className={className}>{children}</div>\n      </div>\n    );\n  }\n);\n\ntype UseTooltipReturn = ReturnType<typeof useFloating> & {\n  getFloatingProps: ReturnType<typeof useInteractions>[\"getFloatingProps\"];\n  show: boolean;\n  getReferenceProps: ReturnType<typeof useInteractions>[\"getReferenceProps\"];\n  arrowRef: MutableRefObject<any>;\n};\n\nexport function useTooltip(placement?: Placement): UseTooltipReturn {\n  const [show, setShow] = useState(false);\n  const arrowRef = useRef(null);\n  const fl = useFloating({\n    middleware: [\n      offset(6),\n      flip(),\n      shift({ padding: { left: 8, right: 8 } }),\n      arrow({ element: arrowRef }),\n    ],\n    open: show,\n    onOpenChange: setShow,\n    placement,\n  });\n\n  const role = useRole(fl.context, { role: \"tooltip\" });\n  const hover = useHover(fl.context, {\n    delay: {\n      open: 500,\n      close: 0,\n    },\n    move: false,\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    role,\n    hover,\n  ]);\n\n  return useMemo(\n    () => ({\n      ...fl,\n      getFloatingProps,\n      show,\n      getReferenceProps,\n      arrowRef,\n    }),\n    [getFloatingProps, show, getReferenceProps, arrowRef, fl]\n  );\n}\n\nexport const TooltipWrapper: FC<\n  PropsWithChildren<\n    Omit<ReturnType<typeof useTooltip>, \"getReferenceProps\" | \"reference\">\n  > & {\n    root?: ComponentProps<typeof FloatingPortal>[\"root\"];\n    portalId?: ComponentProps<typeof FloatingPortal>[\"id\"];\n  }\n> = ({\n  children,\n  x,\n  y,\n  show,\n  strategy,\n  getFloatingProps,\n  middlewareData,\n  arrowRef,\n  placement,\n  root: rootProvided,\n  portalId,\n  refs,\n}) => {\n  const { x: arrowX, y: arrowY } = middlewareData.arrow || { x: 0, y: 0 };\n  const floatingRef = useRef<any>(null);\n\n  const staticSide = {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\",\n  }[placement.split(\"-\")[0]] as Side;\n\n  const { root, id } = useFloatingContext({\n    root: rootProvided,\n    portalId,\n    fallbackPortalId: \"--cui-tooltip-portal\",\n  });\n  const ref = useMergeRefs([refs.setFloating, floatingRef]);\n\n  return (\n    <FloatingPortal root={root} id={id}>\n      <Transition\n        in={show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        nodeRef={floatingRef}\n      >\n        {(state) => (\n          <TooltipContent\n            ref={ref}\n            style={{\n              position: strategy,\n              top: y ?? 0,\n              left: x ?? 0,\n            }}\n            {...getFloatingProps({\n              className: `tooltip__body ${\n                state === \"exiting\" || state === \"exited\"\n                  ? \"tooltip--disappear\"\n                  : \"tooltip--appear\"\n              }`,\n            })}\n          >\n            {children}\n            <div\n              ref={arrowRef}\n              className=\"tooltip__arrow\"\n              style={{\n                left: arrowX != null ? `${arrowX}px` : \"\",\n                top: arrowY != null ? `${arrowY}px` : \"\",\n                right: \"\",\n                bottom: \"\",\n                [staticSide]: \"-4px\",\n              }}\n            />\n          </TooltipContent>\n        )}\n      </Transition>\n    </FloatingPortal>\n  );\n};\n\n// export { TooltipWrapper as Tooltip };\n\nexport type WithTooltipProps = {\n  children: JSX.Element;\n  tooltip: ReactNode;\n  placement?: Placement;\n};\n\nexport const WithTooltip: FC<WithTooltipProps> = forwardRef(\n  ({ children, tooltip, placement = \"top\", ...props }, forwardedRef) => {\n    const { getReferenceProps, refs, ...tt } = useTooltip(placement);\n\n    const ref = useMergeRefs([\n      refs.setReference,\n      forwardedRef,\n      (children as any).ref,\n    ]);\n\n    return (\n      <>\n        {cloneElement(\n          children,\n          getReferenceProps({ ref, ...children.props, ...props })\n        )}\n        <TooltipWrapper refs={refs} {...tt}>\n          {tooltip}\n        </TooltipWrapper>\n      </>\n    );\n  }\n);\n\nWithTooltip.displayName = \"WithTooltip\";\n"],"names":["TooltipContent","forwardRef","className","children","props","ref","React","useTooltip","placement","show","setShow","useState","arrowRef","useRef","fl","useFloating","offset","flip","shift","arrow","role","useRole","hover","useHover","getReferenceProps","getFloatingProps","useInteractions","useMemo","TooltipWrapper","x","y","strategy","middlewareData","rootProvided","portalId","refs","arrowX","arrowY","floatingRef","staticSide","root","id","useFloatingContext","useMergeRefs","FloatingPortal","Transition","state","WithTooltip","tooltip","forwardedRef","tt","cloneElement"],"mappings":"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"}