{"version":3,"file":"index.js","sources":["../../src/Checkbox/Checkbox.tsx","../../src/Checkbox/IndeterminateCheckbox.tsx"],"sourcesContent":["import React, { forwardRef, type HTMLProps, type ReactNode } from \"react\";\nimport cx from \"classnames\";\n\nimport { ConditionalWrapper } from \"src/Conditional\";\n\nimport \"../../css/checkbox.css\";\n\ntype CheckboxProps = {\n  inline?: boolean;\n  asFormGroup?: boolean;\n  children?: ReactNode;\n  spacing?: \"compressed\" | \"default\" | \"loose\";\n};\n\nexport const Checkbox = forwardRef<\n  HTMLInputElement,\n  CheckboxProps & HTMLProps<HTMLInputElement>\n>(\n  (\n    {\n      inline = false,\n      asFormGroup = true,\n      children = null,\n      spacing = null,\n      ...input\n    },\n    ref\n  ) => (\n    <ConditionalWrapper\n      condition={asFormGroup}\n      wrapper={\n        <div\n          className={cx(\"form-group\", {\n            \"form-group--inline\": inline,\n            [`form-group--${spacing}`]: spacing && spacing !== \"default\",\n          })}\n        />\n      }\n    >\n      <label className=\"checkbox\">\n        <input type=\"checkbox\" {...input} ref={ref} />\n        <span className=\"checkbox__input\" />\n        {children ? <span className=\"checkbox__label\">{children}</span> : null}\n      </label>\n    </ConditionalWrapper>\n  )\n);\n","import React, {\n  forwardRef,\n  useEffect,\n  useRef,\n  type ComponentProps,\n} from \"react\";\nimport { useMergeRefs } from \"use-callback-ref\";\n\nimport { Checkbox } from \"./Checkbox\";\n\nexport const IndeterminateCheckbox = forwardRef<\n  HTMLInputElement,\n  { indeterminate?: boolean } & ComponentProps<typeof Checkbox>\n>(({ indeterminate, ...rest }, fwd) => {\n  const ref = useRef<HTMLInputElement>(null!);\n\n  const refs = useMergeRefs([ref, fwd]);\n\n  useEffect(() => {\n    if (typeof indeterminate === \"boolean\") {\n      ref.current.indeterminate = !rest.checked && indeterminate;\n    }\n  }, [ref, indeterminate]);\n\n  return <Checkbox ref={refs} {...rest} />;\n});\n"],"names":["Checkbox","forwardRef","inline","asFormGroup","children","spacing","input","ref","jsx","ConditionalWrapper","cx","jsxs","IndeterminateCheckbox","indeterminate","rest","fwd","useRef","refs","useMergeRefs","useEffect"],"mappings":"sSAca,MAAAA,EAAWC,EAItB,CACE,CACE,OAAAC,EAAS,GACT,YAAAC,EAAc,GACd,SAAAC,EAAW,KACX,QAAAC,EAAU,KACV,GAAGC,CACL,EACAC,IAEAC,EAACC,EAAA,CACC,UAAWN,EACX,QACEK,EAAC,MAAA,CACC,UAAWE,EAAG,aAAc,CAC1B,qBAAsBR,EACtB,CAAC,eAAeG,GAAS,EAAGA,GAAWA,IAAY,SACrD,CAAC,CAAA,CACH,EAGF,SAAAM,EAAC,SAAM,UAAU,WACf,UAAAH,EAAC,QAAA,CAAM,KAAK,WAAY,GAAGF,EAAO,IAAKC,CAAAA,CAAK,EAC5CC,EAAC,OAAA,CAAK,UAAU,iBAAkB,CAAA,EACjCJ,EAAWI,EAAC,OAAA,CAAK,UAAU,kBAAmB,SAAAJ,EAAS,EAAU,IAAA,CAAA,CACpE,EACF,CAEJ,ECpCaQ,EAAwBX,EAGnC,CAAC,CAAE,cAAAY,EAAe,GAAGC,CAAK,EAAGC,IAAQ,CACrC,MAAMR,EAAMS,EAAyB,IAAK,EAEpCC,EAAOC,EAAa,CAACX,EAAKQ,CAAG,CAAC,EAEpC,OAAAI,EAAU,IAAM,CACV,OAAON,GAAkB,YAC3BN,EAAI,QAAQ,cAAgB,CAACO,EAAK,SAAWD,EAEjD,EAAG,CAACN,EAAKM,CAAa,CAAC,EAEhBL,EAACR,EAAA,CAAS,IAAKiB,EAAO,GAAGH,CAAAA,CAAM,CACxC,CAAC"}