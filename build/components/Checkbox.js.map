{"version":3,"file":"Checkbox.js","sources":["../../components/Checkbox.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getIn } from \"formik\";\n\nimport { ConditionalWrapper } from \"./Conditional\";\n\nconst Checkbox = ({ field, form, inline, asFormGroup, children }) => (\n  <ConditionalWrapper\n    condition={asFormGroup}\n    wrapper={\n      <div className={`form-group ${inline ? \"form-group--inline\" : \"\"}`} />\n    }\n  >\n    <label className=\"checkbox\">\n      <input\n        type=\"checkbox\"\n        {...field}\n        checked={getIn(form.values, field.name, false)}\n      />\n      <span className=\"checkbox__input\" />\n      {children ? <span className=\"checkbox__label\">{children}</span> : null}\n    </label>\n  </ConditionalWrapper>\n);\n\nCheckbox.propTypes = {\n  inline: PropTypes.bool,\n  asFormGroup: PropTypes.bool,\n  form: PropTypes.shape({\n    values: PropTypes.object,\n  }).isRequired,\n  field: PropTypes.shape({\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n  }).isRequired,\n  children: PropTypes.node,\n};\n\nCheckbox.defaultProps = {\n  inline: false,\n  asFormGroup: true,\n  children: null,\n};\n\nexport { Checkbox };\n"],"names":["Checkbox","field","form","inline","asFormGroup","children","React","ConditionalWrapper","condition","wrapper","className","type","checked","getIn","values","name","propTypes","PropTypes","bool","shape","object","isRequired","string","onChange","func","node","defaultProps"],"mappings":"gMAMMA,EAAW,EAAGC,MAAAA,EAAOC,KAAAA,EAAMC,OAAAA,EAAQC,YAAAA,EAAaC,SAAAA,KACpDC,gBAACC,GACCC,UAAWJ,EACXK,QACEH,uBAAKI,UAAY,eAAaP,EAAS,qBAAuB,OAGhEG,yBAAOI,UAAU,YACfJ,2BACEK,KAAK,YACDV,GACJW,QAASC,EAAMX,EAAKY,OAAQb,EAAMc,MAAM,MAE1CT,wBAAMI,UAAU,oBACfL,EAAWC,wBAAMI,UAAU,mBAAmBL,GAAmB,OAKxEL,EAASgB,UAAY,CACnBb,OAAQc,EAAUC,KAClBd,YAAaa,EAAUC,KACvBhB,KAAMe,EAAUE,MAAM,CACpBL,OAAQG,EAAUG,SACjBC,WACHpB,MAAOgB,EAAUE,MAAM,CACrBJ,KAAME,EAAUK,OAChBC,SAAUN,EAAUO,OACnBH,WACHhB,SAAUY,EAAUQ,MAGtBzB,EAAS0B,aAAe,CACtBvB,QAAQ,EACRC,aAAa,EACbC,SAAU"}