import e from"react";import t from"prop-types";import{_ as r,a as o}from"../_rollupPluginBabelHelpers-b60338eb.js";import{a as l}from"../index-be24eb93.js";import{getIn as n}from"formik";import{InputHelpBlock as i}from"./InputHelpBlock.js";const a=({children:t,handleOptionClick:r,isSelected:o})=>e.Children.map(t,(t,l)=>{switch(t.type){case"option":return e.createElement("a",{key:l,disabled:t.props.disabled,onClick:e=>r(e,t.props.value),className:o(t.props.value)?"selected":""},t.props.children);case"optgroup":return e.createElement("div",{key:l,className:"dropdown__group"},e.createElement("div",{className:"dropdown__group-header"},t.props.label),e.createElement(a,{handleOptionClick:r,isSelected:o},t.props.children));default:return t}}),s=e.forwardRef((t,s)=>{let{children:p,compressed:d,field:c,form:m,id:u,inline:f,prompt:h,title:b,type:v}=t,y=r(t,["children","compressed","field","form","id","inline","prompt","title","type"]);const[E,g]=e.useState(!1),[k,_]=e.useState(void 0);let C;const w=(e=!0)=>{e&&!E?document.addEventListener("click",C,!1):document.removeEventListener("click",C,!1),g(e)};C=e=>{const t=s||k;t&&t.contains(e.target)||w(!1)};return e.createElement("div",{className:`form-group dropdown${l(d,"input--compressed")}${l(E,"active")}${l(f,"label--inline")}${l(n(m.touched,c.name)&&n(m.errors,c.name)," form-group--error")}`,ref:s||(e=>_(e))},e.createElement("div",{className:"form-group__text select editable",onClick:()=>w(!0)},e.createElement("input",o({id:u||c.name},c,{type:v,placeholder:h,autoComplete:"off"},y)),e.createElement("label",{htmlFor:u||c.name},b)),e.createElement("div",{className:"dropdown__menu"},e.createElement(a,{handleOptionClick:(e,t)=>{m.setFieldValue(c.name,t),m.setFieldTouched(c.name,!0),w(!1)},isSelected:e=>c.value===e},p)),n(m.touched,c.name)&&n(m.errors,c.name)?e.createElement(i,{text:n(m.errors,c.name)}):null)});s.propTypes={compressed:t.bool,id:t.string,title:t.node.isRequired,prompt:t.string,inline:t.bool,type:t.oneOf(["number","text"]),field:t.shape({name:t.string,value:t.any}).isRequired,form:t.shape({touched:t.any,errors:t.any,setFieldValue:t.func,setFieldTouched:t.func}).isRequired,children:t.node.isRequired},s.defaultProps={compressed:!1,prompt:"Select an option",inline:!1,type:"text",id:null};export{s as EditableSelect};
