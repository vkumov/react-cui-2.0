{"version":3,"file":"Label.js","sources":["../../components/Label.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Label = ({\n  size,\n  color,\n  bordered,\n  removable,\n  onRemove,\n  raised,\n  className,\n  children,\n  ...props\n}) => (\n  <span\n    className={`${\"label\" + ` label--${color}`}${\n      size !== \"default\" ? ` label--${size}` : \"\"\n    }${bordered ? \" label--bordered\" : \"\"}${raised ? \" label--raised\" : \"\"}${\n      className ? ` ${className}` : \"\"\n    }`}\n    {...props}\n  >\n    {children}\n    {removable ? <span className=\"icon-close\" onClick={onRemove} /> : null}\n  </span>\n);\n\nLabel.propTypes = {\n  size: PropTypes.oneOf([\"tiny\", \"small\", \"default\", \"large\"]),\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"tertiary\",\n    \"success\",\n    \"info\",\n    \"warning-alt\",\n    \"warning\",\n    \"danger\",\n    \"dark\",\n    \"light\",\n  ]),\n  bordered: PropTypes.bool,\n  removable: PropTypes.bool,\n  onRemove: PropTypes.func,\n  raised: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nLabel.defaultProps = {\n  size: \"default\",\n  color: \"primary\",\n  bordered: false,\n  removable: false,\n  raised: false,\n  onRemove: null,\n  className: null,\n};\n\nLabel.Primary = ({ color, ...props }) => <Label color=\"primary\" {...props} />;\nLabel.Secondary = ({ color, ...props }) => (\n  <Label color=\"secondary\" {...props} />\n);\nLabel.Tertiary = ({ color, ...props }) => <Label color=\"tertiary\" {...props} />;\nLabel.Success = ({ color, ...props }) => <Label color=\"success\" {...props} />;\nLabel.Info = ({ color, ...props }) => <Label color=\"info\" {...props} />;\nLabel.WarningAlt = ({ color, ...props }) => (\n  <Label color=\"warning-alt\" {...props} />\n);\nLabel.Warning = ({ color, ...props }) => <Label color=\"warning\" {...props} />;\nLabel.Danger = ({ color, ...props }) => <Label color=\"danger\" {...props} />;\nLabel.Dark = ({ color, ...props }) => <Label color=\"dark\" {...props} />;\nLabel.Light = ({ color, ...props }) => <Label color=\"light\" {...props} />;\n"],"names":["Label","size","color","bordered","removable","onRemove","raised","className","children","props","React","onClick","propTypes","PropTypes","oneOf","bool","func","string","node","isRequired","defaultProps","Primary","Secondary","Tertiary","Success","Info","WarningAlt","Warning","Danger","Dark","Light"],"mappings":"yHAGaA,UAASC,KACpBA,EADoBC,MAEpBA,EAFoBC,SAGpBA,EAHoBC,UAIpBA,EAJoBC,SAKpBA,EALoBC,OAMpBA,EANoBC,UAOpBA,EAPoBC,SAQpBA,KACGC,iGAEHC,0BACEH,UAAY,GAAE,gBAAqBL,IACxB,YAATD,EAAsB,WAAUA,EAAS,KACxCE,EAAW,mBAAqB,KAAKG,EAAS,iBAAmB,KAClEC,EAAa,IAAGA,EAAc,MAE5BE,GAEHD,EACAJ,EAAYM,wBAAMH,UAAU,aAAaI,QAASN,IAAe,OAItEL,EAAMY,UAAY,CAChBX,KAAMY,EAAUC,MAAM,CAAC,OAAQ,QAAS,UAAW,UACnDZ,MAAOW,EAAUC,MAAM,CACrB,UACA,YACA,WACA,UACA,OACA,cACA,UACA,SACA,OACA,UAEFX,SAAUU,EAAUE,KACpBX,UAAWS,EAAUE,KACrBV,SAAUQ,EAAUG,KACpBV,OAAQO,EAAUE,KAClBR,UAAWM,EAAUI,OACrBT,SAAUK,EAAUK,KAAKC,YAG3BnB,EAAMoB,aAAe,CACnBnB,KAAM,UACNC,MAAO,UACPC,UAAU,EACVC,WAAW,EACXE,QAAQ,EACRD,SAAU,KACVE,UAAW,MAGbP,EAAMqB,gBAAuBZ,wBAAYC,gBAACV,KAAME,MAAM,WAAcO,KACpET,EAAMsB,kBAAyBb,wBAC7BC,gBAACV,KAAME,MAAM,aAAgBO,KAE/BT,EAAMuB,iBAAwBd,wBAAYC,gBAACV,KAAME,MAAM,YAAeO,KACtET,EAAMwB,gBAAuBf,wBAAYC,gBAACV,KAAME,MAAM,WAAcO,KACpET,EAAMyB,aAAoBhB,wBAAYC,gBAACV,KAAME,MAAM,QAAWO,KAC9DT,EAAM0B,mBAA0BjB,wBAC9BC,gBAACV,KAAME,MAAM,eAAkBO,KAEjCT,EAAM2B,gBAAuBlB,wBAAYC,gBAACV,KAAME,MAAM,WAAcO,KACpET,EAAM4B,eAAsBnB,wBAAYC,gBAACV,KAAME,MAAM,UAAaO,KAClET,EAAM6B,aAAoBpB,wBAAYC,gBAACV,KAAME,MAAM,QAAWO,KAC9DT,EAAM8B,cAAqBrB,wBAAYC,gBAACV,KAAME,MAAM,SAAYO"}