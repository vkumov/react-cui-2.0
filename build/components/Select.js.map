{"version":3,"file":"Select.js","sources":["../../components/Select.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable import/prefer-default-export */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuid } from \"uuid\";\nimport { getIn } from \"formik\";\n\nimport \"../css/select.css\";\n\nimport { InputHelpBlock } from \"./InputHelpBlock\";\nimport { appendClass as ac } from \"../utils\";\n\nexport class Select extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n      title: props.multiple ? [] : \"\",\n    };\n  }\n\n  handleClick = () => {\n    if (!this.state.isOpen) {\n      // attach/remove event handler\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\n    }\n\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  handleOutsideClick = (e) => {\n    // ignore clicks on the component itself\n    const n = this.props.innerRef ? this.props.innerRef : this.node;\n    if (n && n.contains(e.target)) {\n      return;\n    }\n\n    this.handleClick();\n  };\n\n  handleOptionClick = (e, newValue, title) => {\n    const { field, multiple, form } = this.props;\n\n    if (!multiple) {\n      form.setFieldValue(field.name, newValue);\n      form.setFieldTouched(field.name, true);\n      this.setState({ title });\n\n      this.handleClick();\n    } else if (e.target.checked) {\n      form.setFieldValue(field.name, [...field.value, newValue]);\n      form.setFieldTouched(field.name, true);\n      this.setState({ title: [...this.state.title, title] });\n    } else {\n      form.setFieldValue(\n        field.name,\n        field.value.filter((v) => v !== newValue)\n      );\n      form.setFieldTouched(field.name, true);\n      this.setState({ title: this.state.title.filter((t) => t !== title) });\n    }\n  };\n\n  isSelected = (checkValue) => {\n    const { value } = this.props.field;\n\n    if (this.props.multiple) {\n      return (\n        Array.isArray(value) && value.findIndex((v) => v === checkValue) >= 0\n      );\n    }\n    return value === checkValue;\n  };\n\n  renderOption = (child) => {\n    const { value, children, disabled } = child.props;\n\n    if (this.props.multiple) {\n      return (\n        <a disabled={disabled}>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              onClick={(e) =>\n                this.handleOptionClick(\n                  e,\n                  value,\n                  Array.isArray(children) ? children.join(\"\") : children\n                )\n              }\n              checked={this.isSelected(value) ? true : false}\n            />\n            <span className=\"checkbox__input\" />\n          </label>\n          <span>{children}</span>\n        </a>\n      );\n    }\n\n    return (\n      <a\n        disabled={disabled}\n        onClick={(e) =>\n          this.handleOptionClick(\n            e,\n            value,\n            Array.isArray(children) ? children.join(\"\") : children\n          )\n        }\n        className={this.isSelected(value) ? \"selected\" : \"\"}\n      >\n        {children}\n      </a>\n    );\n  };\n\n  renderOptgroup = (child) => {\n    const { label, children } = child.props;\n    return (\n      <div className=\"dropdown__group\">\n        <div className=\"dropdown__group-header\">{label}</div>\n        {this.renderChildren(children)}\n      </div>\n    );\n  };\n\n  renderChildren = (children) => {\n    return React.Children.map(children, (child) => {\n      switch (child.type) {\n        case \"option\":\n          return this.renderOption(child);\n        case \"optgroup\":\n          return this.renderOptgroup(child);\n        default:\n          return child;\n      }\n    });\n  };\n\n  findTitle = (where) => {\n    let r = [];\n    React.Children.forEach(where || this.props.children, (ch) => {\n      if (ch.type === \"optgroup\") {\n        const temp = this.findTitle(ch.props.children);\n        if (temp) r.push(temp);\n      }\n      if (this.isSelected(ch.props.value)) {\n        r.push(\n          Array.isArray(ch.props.children)\n            ? ch.props.children.join(\"\")\n            : ch.props.children\n        );\n      }\n    });\n    return r.join(\", \");\n  };\n\n  getShowValue = () => {\n    const { multiple, prompt, field } = this.props;\n    if (\n      typeof field.value === \"undefined\" ||\n      field.value === null ||\n      !field.value.toString().length\n    ) {\n      return prompt;\n    }\n\n    if (multiple) {\n      return this.state.title.length\n        ? this.state.title.join(\", \")\n        : this.findTitle();\n    }\n    return this.state.title ? this.state.title : this.findTitle();\n  };\n\n  render() {\n    const {\n      compressed,\n      field,\n      id,\n      form,\n      title,\n      children,\n      inline,\n      up,\n      innerRef,\n      className,\n      disabled,\n      width,\n    } = this.props;\n    const { touched, errors } = form;\n\n    return (\n      <div\n        className={\n          `form-group dropdown${ac(compressed, \"input--compressed\")}${ac(\n            this.state.isOpen,\n            \"active\"\n          )}${ac(inline, \"label--inline\")}${ac(up, \"dropdown--up\")}${ac(\n            disabled,\n            \"disabled\"\n          )}${ac(className)}${ac(\n            getIn(touched, field.name) && getIn(errors, field.name),\n            \"form-group--error\"\n          )}`\n          // (asyncValidating ? \" form-group--loading\" : \"\")\n        }\n        ref={\n          innerRef ||\n          ((node) => {\n            this.node = node;\n          })\n        }\n        {...(inline === \"both\" ? { style: { display: \"inline-block\" } } : {})}\n      >\n        <div className=\"form-group__text select\" onClick={this.handleClick}>\n          <input\n            id={id}\n            {...field}\n            value={this.getShowValue()}\n            disabled={disabled}\n            {...(width\n              ? { style: { width: `${width}px`, minWidth: `${width}px` } }\n              : {})}\n          />\n          {title ? <label htmlFor={id}>{title}</label> : null}\n        </div>\n        <div\n          className=\"dropdown__menu\"\n          {...(width\n            ? { style: { width: `${width}px`, minWidth: `${width}px` } }\n            : {})}\n        >\n          {this.renderChildren(children)}\n        </div>\n        {getIn(touched, field.name) && getIn(errors, field.name) ? (\n          <InputHelpBlock text={getIn(errors, field.name)} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nSelect.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  title: PropTypes.string,\n  prompt: PropTypes.string,\n  multiple: PropTypes.bool,\n  inline: PropTypes.oneOf([false, true, \"both\"]),\n  up: PropTypes.bool,\n  disabled: PropTypes.bool,\n  width: PropTypes.number,\n  compressed: PropTypes.bool,\n};\n\nSelect.defaultProps = {\n  prompt: \"Select an option\",\n  multiple: false,\n  inline: false,\n  id: uuid(),\n  label: null,\n  title: null,\n  width: null,\n  up: false,\n  disabled: false,\n  compressed: false,\n};\n"],"names":["Select","React","Component","constructor","props","this","state","isOpen","document","removeEventListener","handleOutsideClick","addEventListener","setState","prevState","e","n","innerRef","node","contains","target","handleClick","newValue","title","field","multiple","form","checked","setFieldValue","name","value","setFieldTouched","filter","v","t","checkValue","Array","isArray","findIndex","child","children","disabled","className","type","onClick","handleOptionClick","join","isSelected","label","renderChildren","Children","map","renderOption","renderOptgroup","where","r","forEach","ch","temp","findTitle","push","prompt","toString","length","render","compressed","id","inline","up","width","touched","errors","ac","getIn","ref","style","display","getShowValue","minWidth","htmlFor","InputHelpBlock","text","propTypes","PropTypes","string","bool","oneOf","number","defaultProps","uuid"],"mappings":"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"}