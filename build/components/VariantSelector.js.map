{"version":3,"file":"VariantSelector.js","sources":["../../components/VariantSelector.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useFormikContext, getIn } from \"formik\";\nimport { Dropdown } from \"./Dropdown\";\nimport { ConditionalWrapper } from \"./Conditional\";\nimport { appendClass as ac } from \"../utils\";\n\nconst DropdownHeader = ({ variants, selectedIdx, setIdx }) => (\n  <Dropdown\n    type=\"link\"\n    tail\n    header={variants[selectedIdx].display}\n    alwaysClose\n    className=\"flex-center-vertical\"\n    stopPropagation\n  >\n    {variants.map((v, idx) => (\n      <a\n        key={v.variant}\n        onClick={() => setIdx(idx)}\n        className={\n          variants[selectedIdx].variant === v.variant ? \"selected\" : \"\"\n        }\n      >\n        {v.display}\n      </a>\n    ))}\n  </Dropdown>\n);\n\nDropdownHeader.propTypes = {\n  variants: PropTypes.arrayOf(PropTypes.any).isRequired,\n  selectedIdx: PropTypes.number.isRequired,\n  setIdx: PropTypes.func.isRequired,\n};\n\nconst ListHeader = ({ variants, selectedIdx, setIdx }) => (\n  <ul className=\"list list--inline divider--vertical\">\n    {variants.map((v, idx) => (\n      <li key={v.variant}>\n        <ConditionalWrapper\n          condition={variants[selectedIdx].variant !== v.variant}\n          wrapper={<a key={v.variant} onClick={() => setIdx(idx)} />}\n        >\n          {v.display}\n        </ConditionalWrapper>\n      </li>\n    ))}\n  </ul>\n);\n\nListHeader.propTypes = {\n  variants: PropTypes.arrayOf(PropTypes.any).isRequired,\n  selectedIdx: PropTypes.number.isRequired,\n  setIdx: PropTypes.func.isRequired,\n};\n\nconst VariantSelector = ({\n  variants,\n  varPrefix,\n  title,\n  inline,\n  onChange,\n  disableable,\n  enableTitleAppend,\n  className,\n  list,\n}) => {\n  const { values, setFieldValue, unregisterField } = useFormikContext();\n  const variant = React.useMemo(\n    () => getIn(values, `${varPrefix}.variant`, undefined),\n    [values, varPrefix]\n  );\n  const [variantIdx, setIdx] = React.useState(() => {\n    const idx = variants.findIndex((v) => v.selected || v.variant === variant);\n    return !disableable && idx < 0 ? 0 : idx;\n  });\n\n  React.useEffect(() => {\n    const idx = variants.findIndex((v) => v.variant === variant);\n    setIdx((curr) => (idx < 0 || idx === curr ? curr : idx));\n  }, [variant, variants]);\n\n  React.useEffect(() => {\n    if (variantIdx >= 0) {\n      setFieldValue(`${varPrefix}.variant`, variants[variantIdx].variant);\n      if (onChange) onChange(variants[variantIdx]);\n    } else {\n      setFieldValue(varPrefix, undefined);\n      unregisterField(varPrefix);\n    }\n  }, [variantIdx]);\n\n  const dd = (el, t) =>\n    React.createElement(\n      el,\n      { className: \"secondary-tabs\" },\n      t ? <span className=\"half-margin-right\">{t}</span> : null,\n      list ? (\n        <ListHeader\n          variants={variants}\n          selectedIdx={variantIdx}\n          setIdx={setIdx}\n        />\n      ) : (\n        <DropdownHeader\n          variants={variants}\n          selectedIdx={variantIdx}\n          setIdx={setIdx}\n        />\n      )\n    );\n\n  return (\n    <div\n      className={`form-group${ac(inline, \" inline-variants\")}${ac(className)}`}\n    >\n      {disableable ? (\n        <span className=\"flex-center-vertical\">\n          <label className=\"switch\" htmlFor={`${varPrefix}.disableable`}>\n            <input\n              type=\"checkbox\"\n              onChange={() => setIdx((p) => (p >= 0 ? -1 : 0))}\n              checked={variantIdx >= 0}\n              id={`${varPrefix}.disableable`}\n            />\n            <span className=\"switch__input\" />\n            <span className=\"switch__label\">{title}</span>\n          </label>\n          {variantIdx >= 0 ? dd(\"span\", enableTitleAppend) : null}\n        </span>\n      ) : (\n        dd(\"div\", title)\n      )}\n      {disableable && variantIdx < 0 ? null : (\n        <div className=\"tabs-wrap panel base-padding-top\">\n          {variants[variantIdx].component}\n        </div>\n      )}\n    </div>\n  );\n};\n\nVariantSelector.propTypes = {\n  variants: PropTypes.arrayOf(\n    PropTypes.shape({\n      variant: PropTypes.string,\n      display: PropTypes.string,\n      component: PropTypes.node,\n    })\n  ).isRequired,\n  varPrefix: PropTypes.string.isRequired,\n  title: PropTypes.node,\n  inline: PropTypes.bool,\n  onChange: PropTypes.func,\n  disableable: PropTypes.bool,\n  enableTitleAppend: PropTypes.string,\n  className: PropTypes.string,\n  list: PropTypes.bool,\n};\n\nVariantSelector.defaultProps = {\n  disableable: false,\n  title: null,\n  inline: false,\n  onChange: null,\n  enableTitleAppend: null,\n  className: null,\n  list: false,\n};\n\nexport { VariantSelector };\n"],"names":["DropdownHeader","variants","selectedIdx","setIdx","React","Dropdown","type","tail","header","display","alwaysClose","className","stopPropagation","map","v","idx","key","variant","onClick","propTypes","PropTypes","arrayOf","any","isRequired","number","func","ListHeader","ConditionalWrapper","condition","wrapper","VariantSelector","varPrefix","title","inline","onChange","disableable","enableTitleAppend","list","values","setFieldValue","unregisterField","useFormikContext","useMemo","getIn","undefined","variantIdx","useState","findIndex","selected","useEffect","curr","dd","el","t","createElement","ac","htmlFor","p","checked","id","component","shape","string","node","bool","defaultProps"],"mappings":"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"}