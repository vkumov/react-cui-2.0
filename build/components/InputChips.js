import e from"react";import a from"prop-types";import{a as l}from"../index-be24eb93.js";import{getIn as r}from"formik";import{InputHelpBlock as t}from"./InputHelpBlock.js";import{InputHelpBaloon as n}from"./InputHelpBaloon.js";const o=e.forwardRef(({className:a,field:o,label:s,form:{touched:u,errors:i,setFieldValue:m,setFieldTouched:c},chipsColor:p,addOnBlur:d,allowRegex:f,allowRepeat:g,delimiters:v,valueValidator:b,maxChips:h,baloon:y},C)=>{const[E,N]=e.useState(!1),x=e.useCallback(e=>{"function"==typeof b&&!1===(e=b(e))||(g?m(o.name,[...o.value,e]):o.value.includes(e)||m(o.name,[...o.value,e]))},[g,b,o.name,o.value]),w=e.useCallback(e=>{let a=v;if("string"==typeof a){const{map:e}=Array.prototype;a=e.call(a,e=>e.charCodeAt(0))}a.includes(e.keyCode)&&(x(e.target.value),e.target.value="",e.stopPropagation(),e.preventDefault())},[v]),k=e.useCallback(e=>{if(d&&e.target&&e.target.value){const{value:a}=e.target;f&&RegExp(f).test(a)?x(a):f||x(a)}e.target.value="",N(!1),o.onBlur()},[d,f]),R=e.useCallback(e=>{const a=[...o.value];a.splice(e,1),c(o.name,!0),m(o.name,a)},[o.name]);return e.useEffect(()=>{!Number.isNaN(h)&&Array.isArray(o.value)&&o.value.length>=h&&N(!1)},[o.value,h]),e.createElement("div",{className:`form-group${l(a)}${l(r(u,o.name)&&r(i,o.name),"form-group--error")}`,ref:C},e.createElement("div",{className:"form-group__text chips "+(E?"focused":"")},s?e.createElement("label",{htmlFor:"-"},s,y?e.createElement(n,{baloon:y}):null):null,e.createElement("div",{className:"input"},Array.isArray(o.value)&&o.value.length?e.createElement("span",{className:"chips-outer"},e.createElement("span",{className:"chips-inner"},o.value.map((a,l)=>e.createElement("span",{className:`label label--${p} label--small`,key:`${a}-${l}`},a,e.createElement("span",{className:"icon-close",onClick:()=>R(l)}))))):null,!h||h&&Array.isArray(o.value)&&o.value.length<h?e.createElement("input",{type:"text",onKeyDown:w,onBlur:k,onFocus:()=>N(!0)}):null)),r(u,o.name)&&r(i,o.name)?e.createElement(t,{text:r(i,o.name)}):null)});o.propTypes={label:a.node,chipsColor:a.oneOf(["info","success","warning","warning-alt","danger","blue","dkgray","vibblue","indigo","default","ltgray","white","ghost"]),addOnBlur:a.bool,allowRepeat:a.bool,allowRegex:a.string,delimiters:a.oneOfType([a.string,a.arrayOf(a.number)]),valueValidator:a.func,maxChips:a.number,baloon:a.string,className:a.string,field:a.shape({name:a.any,value:a.any,onBlur:a.func}).isRequired,form:a.shape({touched:a.shape({}),errors:a.shape({}),setFieldValue:a.func,setFieldTouched:a.func}).isRequired},o.defaultProps={chipsColor:"default",addOnBlur:!0,delimiters:[13],label:null,allowRepeat:!1,allowRegex:null,valueValidator:null,maxChips:null,baloon:null,className:null};export{o as InputChips};
