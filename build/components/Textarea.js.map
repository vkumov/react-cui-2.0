{"version":3,"file":"Textarea.js","sources":["../../components/Textarea.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getIn } from \"formik\";\n\nimport { InputHelpBlock } from \"./InputHelpBlock\";\nimport { appendClass as ac } from \"../utils\";\n\nconst Textarea = ({\n  className,\n  id,\n  field,\n  label,\n  labelInline,\n  form: { touched, errors },\n  inputRef,\n  textareaClass,\n  resize,\n  ...rest\n}) => {\n  return (\n    <div\n      className={`form-group${ac(labelInline, \"label--inline\")}${ac(\n        className\n      )}${\n        getIn(touched, field.name) && getIn(errors, field.name)\n          ? \" form-group--error\"\n          : \"\"\n      }`}\n    >\n      <div className=\"form-group__text\">\n        <textarea\n          {...field}\n          className={textareaClass}\n          id={id}\n          ref={inputRef}\n          {...rest}\n        >\n          {field.value}\n        </textarea>\n        {label ? <label htmlFor={id}>{label}</label> : null}\n      </div>\n      {getIn(touched, field.name) && getIn(errors, field.name) ? (\n        <InputHelpBlock text={getIn(errors, field.name)} />\n      ) : null}\n    </div>\n  );\n};\n\nTextarea.propTypes = {\n  label: PropTypes.node,\n  labelInline: PropTypes.bool,\n  textareaClass: PropTypes.string,\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  className: PropTypes.string,\n  id: PropTypes.string,\n  field: PropTypes.shape({ name: PropTypes.string, value: PropTypes.string })\n    .isRequired,\n  form: PropTypes.shape({\n    touched: PropTypes.shape({}),\n    errors: PropTypes.shape({}),\n  }).isRequired,\n  resize: PropTypes.bool,\n};\n\nTextarea.defaultProps = {\n  label: null,\n  labelInline: false,\n  textareaClass: null,\n  className: null,\n  id: null,\n  inputRef: null,\n  resize: false,\n};\n\nexport { Textarea };\n"],"names":["Textarea","className","id","field","label","labelInline","form","touched","errors","inputRef","textareaClass","resize","rest","React","ac","getIn","name","ref","value","htmlFor","InputHelpBlock","text","propTypes","PropTypes","node","bool","string","oneOfType","func","shape","current","instanceOf","Element","isRequired","defaultProps"],"mappings":"sPAOMA,UAAYC,UAChBA,EADgBC,GAEhBA,EAFgBC,MAGhBA,EAHgBC,MAIhBA,EAJgBC,YAKhBA,EACAC,MAAMC,QAAEA,EAAFC,OAAWA,GANDC,SAOhBA,EAPgBC,cAQhBA,EARgBC,OAShBA,KACGC,0GAGDC,uBACEZ,UAAY,aAAYa,EAAGT,EAAa,mBAAmBS,EACzDb,KAEAc,EAAMR,EAASJ,EAAMa,OAASD,EAAMP,EAAQL,EAAMa,MAC9C,qBACA,MAGNH,uBAAKZ,UAAU,oBACbY,gCACMV,GACJF,UAAWS,EACXR,GAAIA,EACJe,IAAKR,GACDG,GAEHT,EAAMe,OAERd,EAAQS,yBAAOM,QAASjB,GAAKE,GAAiB,MAEhDW,EAAMR,EAASJ,EAAMa,OAASD,EAAMP,EAAQL,EAAMa,MACjDH,gBAACO,GAAeC,KAAMN,EAAMP,EAAQL,EAAMa,QACxC,OAKVhB,EAASsB,UAAY,CACnBlB,MAAOmB,EAAUC,KACjBnB,YAAakB,EAAUE,KACvBf,cAAea,EAAUG,OACzBjB,SAAUc,EAAUI,UAAU,CAC5BJ,EAAUK,KACVL,EAAUM,MAAM,CAAEC,QAASP,EAAUQ,WAAWC,aAElD/B,UAAWsB,EAAUG,OACrBxB,GAAIqB,EAAUG,OACdvB,MAAOoB,EAAUM,MAAM,CAAEb,KAAMO,EAAUG,OAAQR,MAAOK,EAAUG,SAC/DO,WACH3B,KAAMiB,EAAUM,MAAM,CACpBtB,QAASgB,EAAUM,MAAM,IACzBrB,OAAQe,EAAUM,MAAM,MACvBI,WACHtB,OAAQY,EAAUE,MAGpBzB,EAASkC,aAAe,CACtB9B,MAAO,KACPC,aAAa,EACbK,cAAe,KACfT,UAAW,KACXC,GAAI,KACJO,SAAU,KACVE,QAAQ"}