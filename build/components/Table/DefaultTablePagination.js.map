{"version":3,"file":"DefaultTablePagination.js","sources":["../../../components/Table/DefaultTablePagination.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Pagination } from \"../Pagination\";\nimport { Dropdown } from \"../Dropdown\";\n\nexport const DefaultTablePagination = ({\n  total,\n  position,\n  onPageChange,\n  onPerPageChange,\n  perPageUp,\n  paginationProps,\n}) => {\n  const [perPage, setPerPage] = React.useState(50);\n\n  React.useEffect(() => {\n    if (typeof onPerPageChange === \"function\") onPerPageChange(perPage);\n  }, [perPage, onPerPageChange]);\n\n  return (\n    <div className=\"flex-middle\">\n      <span className=\"qtr-margin-right\">Page:</span>\n      <Pagination\n        firstAndLast\n        icons\n        perPage={perPage}\n        total={total}\n        position={position}\n        onPageChange={onPageChange}\n        beginAt={0}\n        className=\"no-margin-top\"\n        {...paginationProps}\n      />\n      <span className=\"text-muted qtr-margin-left qtr-margin-right\">|</span>\n      <span className=\"qtr-margin-right\">Per page:</span>\n      <Dropdown\n        type=\"link\"\n        header={perPage}\n        openTo=\"left\"\n        alwaysClose\n        up={perPageUp}\n      >\n        {[10, 25, 50, 100, 250, 500].map((v) => (\n          <Dropdown.Element\n            onClick={() => setPerPage(v)}\n            key={v}\n            selected={v === perPage}\n          >\n            {v}\n          </Dropdown.Element>\n        ))}\n      </Dropdown>\n    </div>\n  );\n};\n\nDefaultTablePagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  position: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n  perPageUp: PropTypes.bool,\n  paginationProps: PropTypes.exact({\n    size: PropTypes.oneOf([\"small\", \"default\", \"large\"]),\n    rounded: PropTypes.bool,\n    icons: PropTypes.bool,\n    next: PropTypes.node,\n    prev: PropTypes.node,\n    firstAndLast: PropTypes.bool,\n  }),\n};\n\nDefaultTablePagination.defaultProps = {\n  perPageUp: false,\n  paginationProps: {},\n};\n"],"names":["DefaultTablePagination","total","position","onPageChange","onPerPageChange","perPageUp","paginationProps","perPage","setPerPage","React","useState","useEffect","className","Pagination","firstAndLast","icons","beginAt","Dropdown","type","header","openTo","alwaysClose","up","map","v","Element","onClick","key","selected","propTypes","PropTypes","number","isRequired","func","bool","exact","size","oneOf","rounded","next","node","prev","defaultProps"],"mappings":"mRAMaA,EAAyB,EACpCC,MAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,gBAAAA,EACAC,UAAAA,EACAC,gBAAAA,YAEOC,EAASC,GAAcC,EAAMC,SAAS,WAE7CD,EAAME,UAAU,KACiB,mBAApBP,GAAgCA,EAAgBG,IAC1D,CAACA,EAASH,IAGXK,uBAAKG,UAAU,eACbH,wBAAMG,UAAU,6BAChBH,gBAACI,KACCC,gBACAC,SACAR,QAASA,EACTN,MAAOA,EACPC,SAAUA,EACVC,aAAcA,EACda,QAAS,EACTJ,UAAU,iBACNN,IAENG,wBAAMG,UAAU,oDAChBH,wBAAMG,UAAU,iCAChBH,gBAACQ,GACCC,KAAK,OACLC,OAAQZ,EACRa,OAAO,OACPC,eACAC,GAAIjB,GAEH,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,KAAKkB,IAAKC,GAChCf,gBAACQ,EAASQ,SACRC,QAAS,IAAMlB,EAAWgB,GAC1BG,IAAKH,EACLI,SAAUJ,IAAMjB,GAEfiB,OAQbxB,EAAuB6B,UAAY,CACjC5B,MAAO6B,EAAUC,OAAOC,WACxB9B,SAAU4B,EAAUC,OAAOC,WAC3B7B,aAAc2B,EAAUG,KAAKD,WAC7B5B,gBAAiB0B,EAAUG,KAAKD,WAChC3B,UAAWyB,EAAUI,KACrB5B,gBAAiBwB,EAAUK,MAAM,CAC/BC,KAAMN,EAAUO,MAAM,CAAC,QAAS,UAAW,UAC3CC,QAASR,EAAUI,KACnBnB,MAAOe,EAAUI,KACjBK,KAAMT,EAAUU,KAChBC,KAAMX,EAAUU,KAChB1B,aAAcgB,EAAUI,QAI5BlC,EAAuB0C,aAAe,CACpCrC,WAAW,EACXC,gBAAiB"}