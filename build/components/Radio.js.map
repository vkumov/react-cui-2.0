{"version":3,"file":"Radio.js","sources":["../../components/Radio.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field } from \"formik\";\n\nimport { appendClass as ac } from \"../utils\";\n\nexport const Radio = ({\n  field: { name, value, onChange, onBlur },\n  id,\n  inline,\n  spacing,\n  label,\n  className,\n  ...props\n}) => (\n  <div\n    className={`form-group${ac(inline, \"form-group--inline\")}${ac(\n      spacing,\n      `form-group--${spacing}`\n    )}${ac(className)}`}\n    {...props}\n  >\n    <label className=\"radio\" htmlFor={`${name}.${id}`}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={id}\n        checked={id === value}\n        onChange={onChange}\n        onBlur={onBlur}\n        id={`${name}.${id}`}\n      />\n      <span className=\"radio__input\" />\n      {label ? <span className=\"radio__label\">{label}</span> : null}\n    </label>\n  </div>\n);\n\nRadio.propTypes = {\n  spacing: PropTypes.oneOf([\n    false,\n    \"compressed\",\n    \"regular\",\n    \"loose\",\n    \"nospacing\",\n  ]),\n  inline: PropTypes.bool,\n  label: PropTypes.node,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  field: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n  }).isRequired,\n};\n\nRadio.defaultProps = {\n  spacing: null,\n  inline: false,\n  label: null,\n  className: null,\n};\n\nexport const Radios = ({ values, ...props }) =>\n  values.map((v) => (\n    <Field\n      component={Radio}\n      {...props}\n      id={v.value}\n      label={v.label}\n      key={v.value}\n    />\n  ));\n\nRadios.propTypes = {\n  values: PropTypes.arrayOf(\n    PropTypes.exact({\n      value: PropTypes.string,\n      label: PropTypes.node,\n    })\n  ),\n};\n"],"names":["Radio","field","name","value","onChange","onBlur","id","inline","spacing","label","className","props","React","ac","htmlFor","type","checked","propTypes","PropTypes","oneOf","bool","node","string","isRequired","shape","func","defaultProps","Radios","values","map","v","Field","component","key","arrayOf","exact"],"mappings":"iMAMaA,UACXC,OAAOC,KAAEA,EAAFC,MAAQA,EAARC,SAAeA,EAAfC,OAAyBA,GADZC,GAEpBA,EAFoBC,OAGpBA,EAHoBC,QAIpBA,EAJoBC,MAKpBA,EALoBC,UAMpBA,KACGC,oEAEHC,yBACEF,UAAY,aAAYG,EAAGN,EAAQ,wBAAwBM,EACzDL,EACC,eAAcA,KACbK,EAAGH,MACHC,GAEJC,yBAAOF,UAAU,QAAQI,QAAU,GAAEZ,KAAQI,KAC3CM,yBACEG,KAAK,QACLb,KAAMA,EACNC,MAAOG,EACPU,QAASV,IAAOH,EAChBC,SAAUA,EACVC,OAAQA,EACRC,GAAK,GAAEJ,KAAQI,MAEjBM,wBAAMF,UAAU,iBACfD,EAAQG,wBAAMF,UAAU,gBAAgBD,GAAgB,QAK/DT,EAAMiB,UAAY,CAChBT,QAASU,EAAUC,MAAM,EACvB,EACA,aACA,UACA,QACA,cAEFZ,OAAQW,EAAUE,KAClBX,MAAOS,EAAUG,KACjBX,UAAWQ,EAAUI,OACrBhB,GAAIY,EAAUI,OAAOC,WACrBtB,MAAOiB,EAAUM,MAAM,CACrBtB,KAAMgB,EAAUI,OAChBnB,MAAOe,EAAUI,OACjBlB,SAAUc,EAAUO,KACpBpB,OAAQa,EAAUO,OACjBF,YAGLvB,EAAM0B,aAAe,CACnBlB,QAAS,KACTD,QAAQ,EACRE,MAAO,KACPC,UAAW,YAGAiB,UAAUC,OAAEA,KAAWjB,yBAClCiB,EAAOC,IAAKC,GACVlB,gBAACmB,KACCC,UAAWhC,GACPW,GACJL,GAAIwB,EAAE3B,MACNM,MAAOqB,EAAErB,MACTwB,IAAKH,EAAE3B,WAIbwB,EAAOV,UAAY,CACjBW,OAAQV,EAAUgB,QAChBhB,EAAUiB,MAAM,CACdhC,MAAOe,EAAUI,OACjBb,MAAOS,EAAUG"}