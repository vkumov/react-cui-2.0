{"version":3,"file":"Dropzone.js","sources":["../../components/Dropzone.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactDropzone from \"react-dropzone\";\nimport PropTypes from \"prop-types\";\nimport bytes from \"bytes\";\nimport { connect } from \"formik\";\n\nconst FileCard = ({ file, i, removeFile, inline }) => (\n  <div\n    className=\"file-drop__card col-lg-4 col-md-6 col-sm-6\"\n    key={`${i}-${file.name}`}\n  >\n    <div\n      className=\"panel panel--bordered hover-emboss--small\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      {inline ? (\n        <div className=\"panel__body flex flex-row\">\n          <div\n            className=\"text-left flex-fill\"\n            style={{ maxWidth: \"calc(100% - 20px)\" }}\n          >\n            <div className=\"text-ellipsis\">{file.name}</div>\n            <small style={{ whiteSpace: \"nowrap\" }}>\n              {bytes.format(file.size, { unitSeparator: \" \" })}\n            </small>\n          </div>\n          <a className=\"link pull-right\" onClick={() => removeFile(i)}>\n            <span className=\"icon-close\" title=\"Remove the file.\"></span>\n          </a>\n        </div>\n      ) : (\n        <div className=\"panel__body\">\n          <a\n            className=\"link pull-right\"\n            style={{ marginRight: \"5px\" }}\n            onClick={() => removeFile(i)}\n          >\n            <span className=\"icon-close\" title=\"Remove the file.\" />\n          </a>\n          <div className=\"text-ellipsis half-margin-bottom\">{file.name}</div>\n          <span className=\"file-icon text-muted icon-file-o qtr-margin-right\" />\n          <small>{bytes.format(file.size, { unitSeparator: \" \" })}</small>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nclass Dropzone extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.maxFileSize) {\n      this.maxFileSize = bytes.parse(props.maxFileSize);\n    } else {\n      this.maxFileSize = null;\n    }\n  }\n\n  removeFile(toRemove) {\n    this.props.formik.setFieldValue(\n      this.props.name,\n      this.props.input.value.filter((_, idx) => toRemove !== idx)\n    );\n  }\n\n  // renderFileCard = (file, i) => {\n  //   return (\n\n  //   );\n  // };\n\n  handleDrop(filesToUpload) {\n    if (this.maxFileSize) {\n      filesToUpload = filesToUpload.filter(\n        (file) => file.size <= this.maxFileSize\n      );\n    }\n\n    if (this.props.maxFiles && filesToUpload.length > this.props.maxFiles) {\n      filesToUpload = filesToUpload.slice(0, this.props.maxFiles);\n    }\n\n    this.props.formik.setFieldValue(this.props.name, filesToUpload);\n  }\n\n  renderFiles() {\n    const files = this.props.input.value;\n    if (!files || !files.length || !Array.isArray(files)) {\n      return null;\n    }\n\n    return (\n      <div className=\"dropzone-previews\">\n        <div className=\"file-drop__container container--fluid\">\n          <div className=\"row\">\n            {files.map((file, i) => (\n              <FileCard\n                key={i}\n                file={file}\n                i={i}\n                inline={this.props.inline}\n                removeFile={this.removeFile}\n              />\n            ))}\n          </div>\n        </div>\n        {this.props.showTotalSelected && (\n          <div className=\"file-drop__filecnt\">{files.length} selected</div>\n        )}\n      </div>\n    );\n  }\n\n  renderMessage() {\n    const files = this.props.input.value;\n    if (files && files.length) {\n      return null;\n    }\n\n    if (this.props.inline) {\n      return (\n        <div className=\"dropzone-message flex flex-row flex-center-vertical\">\n          <h5 className=\"text-muted text-left flex-fill no-margin\">\n            Click Here or Drop Files to Upload\n          </h5>\n          {this.props.accept && (\n            <span className=\"text-muted text-small half-margin-right\">\n              Allowed files: {this.props.accept.split(\",\").join(\", \")}\n            </span>\n          )}\n          <span className=\"file-drop__icon icon-upload\"></span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"dropzone-message\">\n        <span className=\"file-drop__icon icon-upload\"></span>\n        <h4 className=\"text-muted\">Click Here or Drop Files to Upload</h4>\n        {this.props.accept && (\n          <div className=\"text-muted\">\n            Allowed files: {this.props.accept.split(\",\").join(\", \")}\n          </div>\n        )}\n        {this.maxFileSize && (\n          <div className=\"text-muted\">\n            Max file size:{\" \"}\n            {bytes.format(this.maxFileSize, { unitSeparator: \" \" })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { meta, loose, compressed } = this.props;\n    let padding = \"\";\n    if (loose) {\n      padding = \"dropzone--loose\";\n    }\n    if (compressed) {\n      padding = \"dropzone--compressed\";\n    }\n\n    if (\n      this.props.inline &&\n      this.props.input.value &&\n      this.props.input.value.length\n    ) {\n      switch (padding) {\n        case \"dropzone--loose\":\n          padding = padding + \" half-padding-bottom\";\n          break;\n        case \"dropzone--compressed\":\n          padding = padding + \" no-padding-bottom\";\n          break;\n        default:\n          padding = padding + \" qtr-padding-bottom\";\n          break;\n      }\n    }\n\n    return (\n      <div\n        className={\n          \"form-group\" +\n          (meta.touched && meta.error ? \" form-group--error\" : \"\")\n        }\n      >\n        <div className=\"form-group__text\">\n          {this.props.label ? (\n            <label htmlFor={this.props.name}>{this.props.label}</label>\n          ) : null}\n          <ReactDropzone\n            name={this.props.name}\n            onDrop={this.handleDrop}\n            maxSize={this.maxFileSize}\n            multiple={this.props.multiple}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div className={`dropzone ${padding}`} {...getRootProps()}>\n                <input {...getInputProps()} />\n                {this.renderFiles()}\n                {this.renderMessage()}\n              </div>\n            )}\n          </ReactDropzone>\n        </div>\n        {meta.touched && meta.error && (\n          <div className={`help-block text-danger`} role=\"alert\">\n            <span>{meta.error}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nDropzone.propTypes = {\n  label: PropTypes.string,\n  accept: PropTypes.string,\n  showTotalSelected: PropTypes.bool,\n  maxFileSize: PropTypes.string,\n  maxFiles: PropTypes.number,\n  inline: PropTypes.bool,\n  loose: PropTypes.bool,\n  compressed: PropTypes.bool,\n};\n\nconst connected = connect(Dropzone);\n\nexport { connected as Dropzone };\n"],"names":["FileCard","file","i","removeFile","inline","React","className","key","name","onClick","e","stopPropagation","style","maxWidth","whiteSpace","bytes","format","size","unitSeparator","title","marginRight","Dropzone","Component","constructor","props","maxFileSize","parse","toRemove","formik","setFieldValue","this","input","value","filter","_","idx","handleDrop","filesToUpload","maxFiles","length","slice","renderFiles","files","Array","isArray","map","showTotalSelected","renderMessage","accept","split","join","render","meta","loose","compressed","padding","touched","error","label","htmlFor","ReactDropzone","onDrop","maxSize","multiple","getRootProps","getInputProps","role","propTypes","PropTypes","string","bool","number","connected","connect"],"mappings":"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"}