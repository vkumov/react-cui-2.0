{"version":3,"file":"Pagination.js","sources":["../../components/Pagination.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PaginationContext = React.createContext({});\n\nconst Button = ({ active, content, disabled, position }) => (\n  <PaginationContext.Consumer>\n    {({ changePage }) => (\n      <li className={active ? \"active\" : \"\"}>\n        <a\n          className={disabled ? \"disabled\" : \"\"}\n          onClick={(e) => changePage(e, position)}\n        >\n          {content}\n        </a>\n      </li>\n    )}\n  </PaginationContext.Consumer>\n);\n\nButton.propTypes = {\n  active: PropTypes.bool,\n  content: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n  position: PropTypes.number.isRequired,\n};\n\nButton.defaultProps = {\n  active: false,\n  disabled: false,\n};\n\nconst FirstPrev = () => {\n  const {\n    perPage,\n    firstAndLast,\n    position,\n    icons,\n    prev,\n    beginAt,\n  } = React.useContext(PaginationContext);\n  const disabled = position < perPage + beginAt;\n\n  const r = [];\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-left-double\" />}\n        disabled={disabled}\n        key=\"first-page\"\n        position={beginAt}\n      />\n    );\n\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-left\" /> : prev}\n      disabled={disabled}\n      key=\"previous-page\"\n      position={position - perPage}\n    />\n  );\n\n  return r;\n};\n\nconst NextLast = () => {\n  const {\n    beginAt,\n    perPage,\n    total,\n    firstAndLast,\n    position,\n    icons,\n    next,\n  } = React.useContext(PaginationContext);\n  const pages = Math.floor(total / perPage) + 1;\n  const disabled = position > total - perPage + beginAt;\n\n  const r = [];\n  r.push(\n    <Button\n      content={icons ? <span className=\"icon-chevron-right\" /> : next}\n      disabled={disabled}\n      key=\"next-page\"\n      position={position + perPage}\n    />\n  );\n\n  if (icons && firstAndLast)\n    r.push(\n      <Button\n        content={<span className=\"icon-chevron-right-double\" />}\n        disabled={disabled}\n        key=\"last-page\"\n        position={(pages - 1) * perPage + beginAt}\n      />\n    );\n\n  return r;\n};\n\nconst Pages = ({ start, finish }) => (\n  <PaginationContext.Consumer>\n    {({ perPage, active, beginAt }) =>\n      [...Array(finish - start + 1)].map((v, i) => {\n        const current = start + i;\n        return (\n          <Button\n            active={active === current}\n            content={`${current}`}\n            key={`${current}-page`}\n            position={(current - 1) * perPage + beginAt}\n          />\n        );\n      })\n    }\n  </PaginationContext.Consumer>\n);\n\nPages.propTypes = {\n  start: PropTypes.number.isRequired,\n  finish: PropTypes.number.isRequired,\n};\n\nconst Pagination = ({\n  size,\n  rounded,\n  icons,\n  next,\n  prev,\n  position,\n  perPage,\n  total,\n  onPageChange,\n  className,\n  firstAndLast,\n  beginAt,\n  ...rest\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const active = Math.floor(position / perPage) + 1;\n\n  const changePage = (e, newPosition) => {\n    if (typeof onPageChange === \"function\") onPageChange(e, newPosition);\n  };\n\n  return (\n    <PaginationContext.Provider\n      value={{\n        active,\n        beginAt,\n        changePage,\n        firstAndLast,\n        icons,\n        next,\n        perPage,\n        position,\n        prev,\n        total,\n      }}\n    >\n      <ul\n        className={`pagination${\n          size !== \"default\" ? ` pagination--${size}` : \"\"\n        }${rounded ? \" pagination--rounded\" : \"\"}${\n          className ? ` ${className}` : \"\"\n        }`}\n        {...rest}\n      >\n        <FirstPrev />\n        {active < 4 || pages === 4 ? (\n          <>\n            <Pages start={1} finish={Math.min(pages, 4)} />\n            {pages > 4 ? (\n              <>\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : null}\n          </>\n        ) : (\n          <>\n            <Button\n              active={active === beginAt}\n              content=\"1\"\n              key=\"1-page\"\n              position={beginAt}\n            />\n            <li>\n              <span className=\"icon-more\" />\n            </li>\n            {active < pages - 2 ? (\n              <>\n                <Pages start={active - 1} finish={active + 1} />\n                <li>\n                  <span className=\"icon-more\" />\n                </li>\n                <Button\n                  active={active === pages}\n                  content={pages}\n                  key={`${pages}-page`}\n                  position={(pages - 1) * perPage + beginAt}\n                />\n              </>\n            ) : (\n              <Pages start={pages - 3} finish={pages} />\n            )}\n          </>\n        )}\n        <NextLast />\n      </ul>\n    </PaginationContext.Provider>\n  );\n};\n\nPagination.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"default\", \"large\"]),\n  rounded: PropTypes.bool,\n  icons: PropTypes.bool,\n  next: PropTypes.node,\n  prev: PropTypes.node,\n  position: PropTypes.number.isRequired,\n  perPage: PropTypes.number,\n  total: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  firstAndLast: PropTypes.bool,\n  beginAt: PropTypes.number,\n  className: PropTypes.string,\n};\n\nPagination.defaultProps = {\n  beginAt: 1,\n  rounded: false,\n  firstAndLast: true,\n  icons: false,\n  next: \"Next\",\n  perPage: 1,\n  prev: \"Previous\",\n  size: \"default\",\n  className: null,\n};\n\nexport { Pagination };\n"],"names":["PaginationContext","React","createContext","Button","active","content","disabled","position","Consumer","changePage","className","onClick","e","propTypes","PropTypes","bool","node","isRequired","number","defaultProps","FirstPrev","perPage","firstAndLast","icons","prev","beginAt","useContext","r","push","key","NextLast","total","next","pages","Math","floor","Pages","start","finish","Array","map","v","i","current","Pagination","size","rounded","onPageChange","rest","ceil","Provider","value","newPosition","min","oneOf","func","string"],"mappings":"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"}