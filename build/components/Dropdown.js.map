{"version":3,"file":"Dropdown.js","sources":["../../components/Dropdown.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ConditionalWrapper } from \"./Conditional\";\nimport { appendClass } from \"../utils\";\n\nconst DropdownHeader = ({ type, handleClick, className, header }) => {\n  switch (type) {\n    case \"icon\":\n      return <span onClick={handleClick} className={className} />;\n    case \"link\":\n      return (\n        <a onClick={handleClick} className={className}>\n          {header}\n        </a>\n      );\n    case \"div\":\n      return (\n        <div onClick={handleClick} className={className}>\n          {header}\n        </div>\n      );\n    case \"button\":\n      return (\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className={`btn ${className}`}\n        >\n          {header}\n        </button>\n      );\n    default:\n      return React.cloneElement(header, { onClick: handleClick });\n  }\n};\n\nexport class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  handleClick = (e) => {\n    const { stopPropagation, onOpen, onClose } = this.props;\n    if (stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    const { isOpen } = this.state;\n    if (!isOpen) {\n      // attach/remove event handler\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\n    }\n\n    this.setState((prevState) => {\n      const newIsOpen = !prevState.isOpen;\n      if (newIsOpen && onOpen) onOpen(e);\n      if (!newIsOpen && onClose) onClose(e);\n      return { isOpen: newIsOpen };\n    });\n  };\n\n  handleOutsideClick = (e) => {\n    // ignore clicks on the component itself\n    const { alwaysClose } = this.props;\n    if (!alwaysClose && this.node.contains(e.target)) return;\n\n    this.handleClick(e);\n  };\n\n  render() {\n    const {\n      openTo,\n      children,\n      type,\n      className,\n      header,\n      divClassName,\n      up,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    return (\n      <div\n        className={`dropdown${appendClass(\n          [\"left\", \"center\"].includes(openTo),\n          `dropdown--${openTo}`\n        )}${appendClass(up, \"dropdown--up\")}${appendClass(\n          isOpen,\n          \"active\"\n        )}${appendClass(divClassName)}`}\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        <DropdownHeader\n          type={type}\n          handleClick={this.handleClick}\n          className={className}\n          header={header}\n        />\n        <div className=\"dropdown__menu\">{children}</div>\n      </div>\n    );\n  }\n}\n\nDropdown.propTypes = {\n  type: PropTypes.oneOf([\"icon\", \"link\", \"div\", \"button\", \"custom\"]),\n  className: PropTypes.string,\n  header: PropTypes.node,\n  openTo: PropTypes.oneOf([false, \"left\", \"right\", \"center\"]),\n  alwaysClose: PropTypes.bool,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  stopPropagation: PropTypes.bool,\n  divClassName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  up: PropTypes.bool,\n};\n\nDropdown.defaultProps = {\n  type: \"button\",\n  openTo: false,\n  className: null,\n  header: null,\n  alwaysClose: false,\n  onOpen: null,\n  onClose: null,\n  stopPropagation: false,\n  divClassName: null,\n  up: false,\n};\n\nDropdown.Element = ({ selected, icon, children, className, ...props }) => (\n  <a\n    className={`${selected ? \"selected\" : \"\"}${\n      className ? ` ${className}` : \"\"\n    }`}\n    {...props}\n  >\n    {icon ? <span className={`icon-${icon}`} /> : null}\n    <ConditionalWrapper\n      condition={Boolean(icon)}\n      wrapper={<span className=\"qtr-margin-left\" />}\n    >\n      {children}\n    </ConditionalWrapper>\n  </a>\n);\n\nDropdown.Element.propTypes = {\n  selected: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  icon: PropTypes.string,\n  className: PropTypes.string,\n};\n\nDropdown.Element.defaultProps = {\n  selected: false,\n  icon: null,\n  className: null,\n};\n\nDropdown.Divider = () => <div className=\"divider\" />;\n\nDropdown.Group = ({ children }) => (\n  <div className=\"dropdown__group\">{children}</div>\n);\n\nDropdown.Group.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nDropdown.GroupHeader = ({ header }) => (\n  <div className=\"dropdown__group-header\">{header}</div>\n);\n\nDropdown.GroupHeader.propTypes = {\n  header: PropTypes.node.isRequired,\n};\n"],"names":["DropdownHeader","type","handleClick","className","header","React","onClick","cloneElement","Dropdown","Component","constructor","props","e","stopPropagation","onOpen","onClose","this","preventDefault","isOpen","state","document","removeEventListener","handleOutsideClick","addEventListener","setState","prevState","newIsOpen","alwaysClose","node","contains","target","render","openTo","children","divClassName","up","appendClass","includes","ref","propTypes","PropTypes","oneOf","string","bool","func","isRequired","defaultProps","Element","selected","icon","ConditionalWrapper","condition","Boolean","wrapper","Divider","Group","GroupHeader"],"mappings":"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"}