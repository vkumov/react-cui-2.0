{"version":3,"file":"index.js","sources":["../../src/Badge/Badge.tsx"],"sourcesContent":["import React, { FC, PropsWithChildren, ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype WrapperProps = {\n  children: ReactNode;\n  className?: string;\n};\n\nconst Wrapper: FC<WrapperProps> = ({ children, className = null }) => (\n  <span className={`badge-wrapper${ac(className)}`}>{children}</span>\n);\n\nexport type BadgeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype BadgeProps = PropsWithChildren<{\n  color?: BadgeColor;\n  size?: \"dot\" | \"tiny\" | \"small\" | \"default\" | \"large\";\n  className?: string;\n}>;\n\ninterface BadgeSizes {\n  Dot: FC<Omit<BadgeProps, \"size\">>;\n  Tiny: FC<Omit<BadgeProps, \"size\">>;\n  Small: FC<Omit<BadgeProps, \"size\">>;\n  Default: FC<Omit<BadgeProps, \"size\">>;\n  Large: FC<Omit<BadgeProps, \"size\">>;\n  Wrapper: FC<WrapperProps>;\n}\n\nexport const Badge: BadgeSizes & FC<BadgeProps> = ({\n  color = \"primary\",\n  size = \"default\",\n  children,\n  className = null,\n  ...props\n}) => (\n  <span\n    className={`${`badge badge--${color}`}${ac(\n      size !== \"default\",\n      `badge--${size}`\n    )}${ac(className)}`}\n    {...props}\n  >\n    {children}\n  </span>\n);\n\nBadge.Dot = (props) => <Badge {...props} size=\"dot\" />;\nBadge.Tiny = (props) => <Badge {...props} size=\"tiny\" />;\nBadge.Small = (props) => <Badge {...props} size=\"small\" />;\nBadge.Default = (props) => <Badge {...props} size=\"default\" />;\nBadge.Large = (props) => <Badge {...props} size=\"large\" />;\nBadge.Wrapper = Wrapper;\n\ntype WithBadgeProps = {\n  children: ReactNode;\n  badge: ReactNode;\n  wrapperClass?: string;\n};\n\nexport const WithBadge: FC<BadgeProps & WithBadgeProps> = ({\n  children,\n  badge,\n  wrapperClass = null,\n  ...props\n}) => (\n  <Badge.Wrapper className={wrapperClass}>\n    {children}\n    <Badge {...props}>{badge}</Badge>\n  </Badge.Wrapper>\n);\n"],"names":["_extends","Wrapper","children","className","React","span","ac","Badge","color","size","props","Dot","Tiny","Small","Default","Large","WithBadge","badge","wrapperClass","createElement"],"mappings":"wwBAAA,SAAAA,UAAA,iQASA,IAAMC,QAA4B,oBAAGC,eAAAA,0BAAUC,UAAAA,8BAAY,IAAI,mBAC7DC,MAACC,aAAAA,CAAAA,OAAAA,CAAKF,UAAW,AAAC,gBAA6B,OAAdG,YAAGH,WAAeD,EAAAA,eA8BxCK,MAAqC,gBAOhDH,mBANAI,MAAAA,sBAAQ,8BACRC,KAAAA,oBAAO,gBACPP,gBAAAA,2BACAC,UAAAA,8BAAY,IAAI,YACbO,uCAJHF,QACAC,OACAP,WACAC,qBAGAC,MAACC,aAAAA,CAAAA,OAAAA,SAAAA,CACCF,UAAW,AAAC,GAA4BG,OAA1B,AAAC,gBAAqB,OAANE,QAG1BF,OAHoCA,YACtCG,OAAS,UACT,AAAC,UAAc,OAALA,QACM,OAAdH,YAAGH,WACHO,EAAAA,OAEHR,SAEH,CAEFK,CAAAA,MAAMI,GAAG,CAAG,SAACD,cAAUN,oBAACG,MAAUG,SAAAA,CAAAA,EAAAA,MAAAA,CAAOD,KAAK,SAC9CF,CAAAA,MAAMK,IAAI,CAAG,SAACF,cAAUN,oBAACG,MAAUG,SAAAA,CAAAA,EAAAA,MAAAA,CAAOD,KAAK,UAC/CF,CAAAA,MAAMM,KAAK,CAAG,SAACH,cAAUN,oBAACG,MAAUG,SAAAA,CAAAA,EAAAA,MAAAA,CAAOD,KAAK,WAChDF,CAAAA,MAAMO,OAAO,CAAG,SAACJ,cAAUN,oBAACG,MAAUG,SAAAA,CAAAA,EAAAA,MAAAA,CAAOD,KAAK,aAClDF,CAAAA,MAAMQ,KAAK,CAAG,SAACL,cAAUN,oBAACG,MAAUG,SAAAA,CAAAA,EAAAA,MAAAA,CAAOD,KAAK,WAChDF,CAAAA,MAAMN,OAAO,CAAGA,YAQHe,UAA6C,gBAMxDZ,KALAF,gBAAAA,SACAe,aAAAA,2BACAC,aAAAA,oCAAe,IAAI,eAChBR,uCAHHR,WACAe,QACAC,wBAGAd,MAAAe,aAAA,CAACZ,MAAMN,OAAO,CAAA,CAACE,UAAWe,cACvBhB,SACDE,MAAAe,aAAA,CAACZ,MAAUG,SAAAA,CAAAA,EAAAA,OAAQO,OAErB"}