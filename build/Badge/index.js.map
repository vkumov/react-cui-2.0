{"version":3,"file":"index.js","sources":["../../src/Badge/Badge.tsx"],"sourcesContent":["import React, { FC, PropsWithChildren, ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype WrapperProps = {\n  children: ReactNode;\n  className?: string;\n};\n\nconst Wrapper: FC<WrapperProps> = ({ children, className = null }) => (\n  <span className={`badge-wrapper${ac(className)}`}>{children}</span>\n);\n\nexport type BadgeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype BadgeProps = PropsWithChildren<{\n  color?: BadgeColor;\n  size?: \"dot\" | \"tiny\" | \"small\" | \"default\" | \"large\";\n  className?: string;\n}>;\n\ninterface BadgeSizes {\n  Dot: FC<Omit<BadgeProps, \"size\">>;\n  Tiny: FC<Omit<BadgeProps, \"size\">>;\n  Small: FC<Omit<BadgeProps, \"size\">>;\n  Default: FC<Omit<BadgeProps, \"size\">>;\n  Large: FC<Omit<BadgeProps, \"size\">>;\n  Wrapper: FC<WrapperProps>;\n}\n\nexport const Badge: BadgeSizes & FC<BadgeProps> = ({\n  color = \"primary\",\n  size = \"default\",\n  children,\n  className = null,\n  ...props\n}) => (\n  <span\n    className={`${`badge badge--${color}`}${ac(\n      size !== \"default\",\n      `badge--${size}`\n    )}${ac(className)}`}\n    {...props}\n  >\n    {children}\n  </span>\n);\n\nBadge.Dot = (props) => <Badge {...props} size=\"dot\" />;\nBadge.Tiny = (props) => <Badge {...props} size=\"tiny\" />;\nBadge.Small = (props) => <Badge {...props} size=\"small\" />;\nBadge.Default = (props) => <Badge {...props} size=\"default\" />;\nBadge.Large = (props) => <Badge {...props} size=\"large\" />;\nBadge.Wrapper = Wrapper;\n\ntype WithBadgeProps = {\n  children: ReactNode;\n  badge: ReactNode;\n  wrapperClass?: string;\n};\n\nexport const WithBadge: FC<BadgeProps & WithBadgeProps> = ({\n  children,\n  badge,\n  wrapperClass = null,\n  ...props\n}) => (\n  <Badge.Wrapper className={wrapperClass}>\n    {children}\n    <Badge {...props}>{badge}</Badge>\n  </Badge.Wrapper>\n);\n"],"names":["Wrapper","children","className","span","ac","Badge","color","size","props","Dot","Tiny","Small","Default","Large","WithBadge","badge","wrapperClass"],"mappings":";;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;AASA,MAAMA,OAAAA,GAA4B,CAAC,EAAEC,QAAQ,GAAEC,WAAY,IAAI,GAAE,iBAC/D,KAACC,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA;AAAKD,QAAAA,SAAAA,EAAW,CAAC,aAAa,EAAEE,WAAAA,CAAGF,WAAW,CAAC;AAAGD,KAAAA,EAAAA,QAAAA,CAAAA,CAAAA;MA8BxCI,KAAqC,GAAA,CAAC,EACjDC,KAAQ,EAAA,SAAA,GACRC,IAAO,EAAA,SAAA,GACPN,QAAQ,GACRC,WAAY,IAAI,GAChB,GAAGM,KAAAA,EACJ,iBACC,KAACL,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA,QAAAA,CAAAA;QACCD,SAAW,EAAA,CAAC,EAAE,CAAC,aAAa,EAAEI,KAAM,CAAA,CAAC,CAAC,EAAEF,WAAAA,CACtCG,SAAS,SACT,EAAA,CAAC,OAAO,EAAEA,IAAAA,CAAK,CAAC,CAChB,CAAA,EAAEH,WAAGF,CAAAA,SAAAA,CAAAA,CAAW,CAAC;AACfM,KAAAA,EAAAA,KAAAA,CAAAA,EAEHP,QAEH,EAAA;AAEFI,KAAAA,CAAMI,GAAG,GAAG,CAACD,KAAAA,iBAAU,oBAACH,KAAUG,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA;QAAOD,IAAK,EAAA,KAAA;;AAC9CF,KAAAA,CAAMK,IAAI,GAAG,CAACF,KAAAA,iBAAU,oBAACH,KAAUG,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA;QAAOD,IAAK,EAAA,MAAA;;AAC/CF,KAAAA,CAAMM,KAAK,GAAG,CAACH,KAAAA,iBAAU,oBAACH,KAAUG,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA;QAAOD,IAAK,EAAA,OAAA;;AAChDF,KAAAA,CAAMO,OAAO,GAAG,CAACJ,KAAAA,iBAAU,oBAACH,KAAUG,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA;QAAOD,IAAK,EAAA,SAAA;;AAClDF,KAAAA,CAAMQ,KAAK,GAAG,CAACL,KAAAA,iBAAU,oBAACH,KAAUG,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA;QAAOD,IAAK,EAAA,OAAA;;AAChDF,KAAAA,CAAML,OAAO,GAAGA,OAAAA,CAAAA;MAQHc,SAA6C,GAAA,CAAC,EACzDb,QAAAA,GACAc,KAAK,GACLC,YAAe,EAAA,IAAI,GACnB,GAAGR,OACJ,iBACC,KAAA,CAAA,aAAA,CAACH,MAAML,OAAO,EAAA;QAACE,SAAWc,EAAAA,YAAAA;OACvBf,QACD,gBAAA,KAAA,CAAA,aAAA,CAACI,KAAUG,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,KAAAA,CAAAA,EAAQO,KAErB,CAAA;;;;"}