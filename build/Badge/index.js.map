{"version":3,"file":"index.js","sources":["../../src/Badge/Badge.tsx"],"sourcesContent":["import React, { type FC, type PropsWithChildren, type ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype WrapperProps = {\n  children: ReactNode;\n  className?: string;\n};\n\nconst Wrapper: FC<WrapperProps> = ({ children, className = null }) => (\n  <span className={`badge-wrapper${ac(className)}`}>{children}</span>\n);\n\nexport type BadgeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype BadgeProps = PropsWithChildren<{\n  color?: BadgeColor;\n  size?: \"dot\" | \"tiny\" | \"small\" | \"default\" | \"large\";\n  className?: string;\n}>;\n\ninterface BadgeSizes {\n  Dot: FC<Omit<BadgeProps, \"size\">>;\n  Tiny: FC<Omit<BadgeProps, \"size\">>;\n  Small: FC<Omit<BadgeProps, \"size\">>;\n  Default: FC<Omit<BadgeProps, \"size\">>;\n  Large: FC<Omit<BadgeProps, \"size\">>;\n  Wrapper: FC<WrapperProps>;\n}\n\nexport const Badge: BadgeSizes & FC<BadgeProps> = ({\n  color = \"primary\",\n  size = \"default\",\n  children,\n  className = null,\n  ...props\n}) => (\n  <span\n    className={`${`badge badge--${color}`}${ac(\n      size !== \"default\",\n      `badge--${size}`\n    )}${ac(className)}`}\n    {...props}\n  >\n    {children}\n  </span>\n);\n\nBadge.Dot = (props) => <Badge {...props} size=\"dot\" />;\nBadge.Tiny = (props) => <Badge {...props} size=\"tiny\" />;\nBadge.Small = (props) => <Badge {...props} size=\"small\" />;\nBadge.Default = (props) => <Badge {...props} size=\"default\" />;\nBadge.Large = (props) => <Badge {...props} size=\"large\" />;\nBadge.Wrapper = Wrapper;\n\ntype WithBadgeProps = {\n  children: ReactNode;\n  badge: ReactNode;\n  wrapperClass?: string;\n};\n\nexport const WithBadge: FC<BadgeProps & WithBadgeProps> = ({\n  children,\n  badge,\n  wrapperClass = null,\n  ...props\n}) => (\n  <Badge.Wrapper className={wrapperClass}>\n    {children}\n    <Badge {...props}>{badge}</Badge>\n  </Badge.Wrapper>\n);\n"],"names":["Wrapper","children","className","React","ac","Badge","color","size","props","WithBadge","badge","wrapperClass"],"mappings":"oHASA,MAAMA,EAA4B,CAAC,CAAE,SAAAC,EAAU,UAAAC,EAAY,IAAK,IAC9DC,EAAA,cAAC,OAAA,CAAK,UAAW,gBAAgBC,EAAGF,CAAS,KAAMD,CAAS,EA8BjDI,EAAqC,CAAC,CACjD,MAAAC,EAAQ,UACR,KAAAC,EAAO,UACP,SAAAN,EACA,UAAAC,EAAY,KACZ,GAAGM,CACL,IACEL,EAAA,cAAC,OAAA,CACC,UAAW,GAAG,gBAAgBG,MAAUF,EACtCG,IAAS,UACT,UAAUA,GACZ,IAAIH,EAAGF,CAAS,IACf,GAAGM,CAAAA,EAEHP,CACH,EAGFI,EAAM,IAAOG,GAAUL,EAAA,cAACE,EAAA,CAAO,GAAGG,EAAO,KAAK,KAAM,CAAA,EACpDH,EAAM,KAAQG,GAAUL,EAAA,cAACE,EAAA,CAAO,GAAGG,EAAO,KAAK,MAAO,CAAA,EACtDH,EAAM,MAASG,GAAUL,EAAA,cAACE,GAAO,GAAGG,EAAO,KAAK,OAAA,CAAQ,EACxDH,EAAM,QAAWG,GAAUL,EAAA,cAACE,EAAA,CAAO,GAAGG,EAAO,KAAK,SAAU,CAAA,EAC5DH,EAAM,MAASG,GAAUL,EAAA,cAACE,EAAO,CAAA,GAAGG,EAAO,KAAK,OAAQ,CAAA,EACxDH,EAAM,QAAUL,EAQH,MAAAS,EAA6C,CAAC,CACzD,SAAAR,EACA,MAAAS,EACA,aAAAC,EAAe,KACf,GAAGH,CACL,IACEL,EAAA,cAACE,EAAM,QAAN,CAAc,UAAWM,CACvBV,EAAAA,EACDE,EAAA,cAACE,EAAA,CAAO,GAAGG,CAAAA,EAAQE,CAAM,CAC3B"}