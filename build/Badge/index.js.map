{"version":3,"file":"index.js","sources":["../../src/Badge/Badge.tsx"],"sourcesContent":["import React, { FC, PropsWithChildren, ReactNode } from \"react\";\n\nimport { appendClass as ac } from \"src/utils\";\n\ntype WrapperProps = {\n  children: ReactNode;\n  className?: string;\n};\n\nconst Wrapper: FC<WrapperProps> = ({ children, className = null }) => (\n  <span className={`badge-wrapper${ac(className)}`}>{children}</span>\n);\n\nexport type BadgeColor =\n  | \"primary\"\n  | \"secondary\"\n  | \"tertiary\"\n  | \"success\"\n  | \"info\"\n  | \"warning\"\n  | \"warning-alt\"\n  | \"danger\"\n  | \"dark\"\n  | \"light\";\n\ntype BadgeProps = PropsWithChildren<{\n  color?: BadgeColor;\n  size?: \"dot\" | \"tiny\" | \"small\" | \"default\" | \"large\";\n  className?: string;\n}>;\n\ninterface BadgeSizes {\n  Dot: FC<Omit<BadgeProps, \"size\">>;\n  Tiny: FC<Omit<BadgeProps, \"size\">>;\n  Small: FC<Omit<BadgeProps, \"size\">>;\n  Default: FC<Omit<BadgeProps, \"size\">>;\n  Large: FC<Omit<BadgeProps, \"size\">>;\n  Wrapper: FC<WrapperProps>;\n}\n\nexport const Badge: BadgeSizes & FC<BadgeProps> = ({\n  color = \"primary\",\n  size = \"default\",\n  children,\n  className = null,\n  ...props\n}) => (\n  <span\n    className={`${`badge badge--${color}`}${ac(\n      size !== \"default\",\n      `badge--${size}`\n    )}${ac(className)}`}\n    {...props}\n  >\n    {children}\n  </span>\n);\n\nBadge.Dot = (props) => <Badge {...props} size=\"dot\" />;\nBadge.Tiny = (props) => <Badge {...props} size=\"tiny\" />;\nBadge.Small = (props) => <Badge {...props} size=\"small\" />;\nBadge.Default = (props) => <Badge {...props} size=\"default\" />;\nBadge.Large = (props) => <Badge {...props} size=\"large\" />;\nBadge.Wrapper = Wrapper;\n\ntype WithBadgeProps = {\n  children: ReactNode;\n  badge: ReactNode;\n  wrapperClass?: string;\n};\n\nexport const WithBadge: FC<BadgeProps & WithBadgeProps> = ({\n  children,\n  badge,\n  wrapperClass = null,\n  ...props\n}) => (\n  <Badge.Wrapper className={wrapperClass}>\n    {children}\n    <Badge {...props}>{badge}</Badge>\n  </Badge.Wrapper>\n);\n"],"names":["Wrapper","children","className","span","ac","Badge","color","size","props","Dot","Tiny","Small","Default","Large","WithBadge","badge","wrapperClass"],"mappings":";;;AAAA,SAAA,QAAA,GAAA;;;;;;;;;;;;;;AASA,MAAMA,OAAO,GAAqB,CAAC,EAAEC,QAAQ,GAAEC,SAAS,EAAG,IAAI,GAAE,iBAC/D,oBAACC,MAAI,EAAA;QAACD,SAAS,EAAE,CAAC,aAAa,EAAEE,WAAE,CAACF,SAAS,CAAC,CAAC,CAAC;AAAGD,KAAAA,EAAAA,QAAQ,CAAQ;AACnE,CAAA;AA6BWI,MAAAA,KAAK,GAAgC,CAAC,EACjDC,KAAK,EAAG,SAAS,GACjBC,IAAI,EAAG,SAAS,GAChBN,QAAQ,GACRC,SAAS,EAAG,IAAI,GAChB,GAAGM,KAAK,EACT,iBACC,KAAA,CAAA,aAAA,CAACL,MAAI,EAAA,QAAA,CAAA;AACHD,QAAAA,SAAS,EAAE,CAAC,EAAE,CAAC,aAAa,EAAEI,KAAK,CAAC,CAAC,CAAC,EAAEF,WAAE,CACxCG,IAAI,KAAK,SAAS,EAClB,CAAC,OAAO,EAAEA,IAAI,CAAC,CAAC,CACjB,CAAC,EAAEH,WAAE,CAACF,SAAS,CAAC,CAAC,CAAC;OACfM,KAAK,CAAA,EAERP,QAAQ,CACJ;CACP;AAEFI,KAAK,CAACI,GAAG,GAAG,CAACD,KAAK,iBAAK,KAAA,CAAA,aAAA,CAACH,KAAK,EAAA,QAAA,CAAA,EAAA,EAAKG,KAAK,EAAA;AAAED,QAAAA,IAAI,EAAC,KAAK;AAAG,KAAA,CAAA,CAAA;AAAA,CAAC;AACvDF,KAAK,CAACK,IAAI,GAAG,CAACF,KAAK,iBAAK,KAAA,CAAA,aAAA,CAACH,KAAK,EAAA,QAAA,CAAA,EAAA,EAAKG,KAAK,EAAA;AAAED,QAAAA,IAAI,EAAC,MAAM;AAAG,KAAA,CAAA,CAAA;AAAA,CAAC;AACzDF,KAAK,CAACM,KAAK,GAAG,CAACH,KAAK,iBAAK,KAAA,CAAA,aAAA,CAACH,KAAK,EAAA,QAAA,CAAA,EAAA,EAAKG,KAAK,EAAA;AAAED,QAAAA,IAAI,EAAC,OAAO;AAAG,KAAA,CAAA,CAAA;AAAA,CAAC;AAC3DF,KAAK,CAACO,OAAO,GAAG,CAACJ,KAAK,iBAAK,KAAA,CAAA,aAAA,CAACH,KAAK,EAAA,QAAA,CAAA,EAAA,EAAKG,KAAK,EAAA;AAAED,QAAAA,IAAI,EAAC,SAAS;AAAG,KAAA,CAAA,CAAA;AAAA,CAAC;AAC/DF,KAAK,CAACQ,KAAK,GAAG,CAACL,KAAK,iBAAK,KAAA,CAAA,aAAA,CAACH,KAAK,EAAA,QAAA,CAAA,EAAA,EAAKG,KAAK,EAAA;AAAED,QAAAA,IAAI,EAAC,OAAO;AAAG,KAAA,CAAA,CAAA;AAAA,CAAC;AAC3DF,KAAK,CAACL,OAAO,GAAGA,OAAO,CAAC;AAQjB,MAAMc,SAAS,GAAoC,CAAC,EACzDb,QAAQ,GACRc,KAAK,GACLC,YAAY,EAAG,IAAI,GACnB,GAAGR,KAAK,EACT,iBACC,KAAA,CAAA,aAAA,CAACH,KAAK,CAACL,OAAO,EAAA;AAACE,QAAAA,SAAS,EAAEc,YAAY;OACnCf,QAAQ,gBACT,oBAACI,KAAK,EAAA,QAAA,CAAA,EAAA,EAAKG,KAAK,CAAGO,EAAAA,KAAK,CAAS,CACnB;;;;;"}