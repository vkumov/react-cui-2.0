{"version":3,"file":"index.js","sources":["../../src/Toast/Toast.tsx","../../src/Toast/ToastContainer.tsx"],"sourcesContent":["import React, { FC, ReactNode } from \"react\";\nimport { ToastOptions, UpdateOptions, toast as _toast } from \"react-toastify\";\n\nimport { appendClass } from \"src/utils\";\nimport { copyStringToClipboard } from \"src/utils/clipboard\";\n\ntype ToastType = \"success\" | \"error\" | \"warning\" | \"info\" | \"loading\" | \"none\";\n\nconst iconType = (type: ToastType): string => {\n  switch (type) {\n    case \"success\":\n      return \"text-success icon-check-outline\";\n    case \"error\":\n      return \"text-danger icon-error-outline\";\n    case \"warning\":\n      return \"text-warning icon-warning-outline\";\n    case \"info\":\n      return \"text-info icon-info-outline\";\n    case \"loading\":\n      return \"text-muted icon-spinner spin\";\n    case \"none\":\n      return null;\n    default:\n      return \"text-muted icon-alert\";\n  }\n};\n\nconst ToastIcon = ({ type }) => {\n  return type ? (\n    <div className=\"toast__icon\">\n      <span className={iconType(type)} />\n    </div>\n  ) : null;\n};\n\nexport type ToastProps = {\n  title: ReactNode;\n  message: ReactNode;\n  type: ToastType;\n  copyError?: boolean;\n  bordered?: boolean;\n};\n\nexport const Toast: FC<ToastProps> = ({\n  title,\n  message,\n  type,\n  copyError = false,\n  bordered = false,\n}) => (\n  <div className={`toast${appendClass(bordered, \"toast--bordered\")}`}>\n    <ToastIcon type={type} />\n    <div className=\"toast__body\">\n      {title ? <div className=\"toast__title\">{title}</div> : null}\n      {message ? (\n        <div className=\"toast__message\">\n          {message}\n          {type === \"error\" && copyError ? (\n            <>\n              <br />\n              <br />\n              <a\n                onClick={() =>\n                  typeof message === \"string\" || typeof message === \"number\"\n                    ? void copyStringToClipboard(message)\n                    : void 0\n                }\n              >\n                Copy to clipboard\n              </a>\n            </>\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  </div>\n);\n\ntype ToastFunction = (\n  title: ReactNode,\n  message: ReactNode,\n  copyError?: boolean,\n  containerId?: string,\n  args?: Record<string, unknown>\n) => React.ReactText;\n\nexport interface IToast {\n  (\n    type: ToastType,\n    title: ReactNode,\n    message: ReactNode,\n    copyError?: boolean,\n    containerId?: string,\n    args?: Partial<ToastOptions>\n  ): React.ReactText;\n}\n\ntype Toasts = {\n  [x in ToastType]: ToastFunction;\n};\n\ninterface ToastMethods {\n  update: (\n    toastId: React.ReactText,\n    updates: ToastProps,\n    options?: UpdateOptions\n  ) => void;\n  dismiss: (id?: string | number | undefined) => false | void;\n}\n\nexport const toast: IToast & Toasts & ToastMethods = (\n  type,\n  title,\n  message,\n  copyError = true,\n  containerId = \"_GLOBAL_\",\n  args = {}\n): React.ReactText => {\n  if (type === \"loading\") {\n    args.autoClose ??= false;\n  }\n\n  return _toast(() => <Toast {...{ type, title, message, copyError }} />, {\n    containerId,\n    ...args,\n  });\n};\n\ntoast.success = (...args) => toast(\"success\", ...args);\ntoast.error = (...args) => toast(\"error\", ...args);\ntoast.warning = (...args) => toast(\"warning\", ...args);\ntoast.info = (...args) => toast(\"info\", ...args);\ntoast.loading = (...args) => toast(\"loading\", ...args);\ntoast.none = (...args) => toast(\"none\", ...args);\ntoast.update = (toastId, updates, options) => {\n  options.render = <Toast {...updates} />;\n  _toast.update(toastId, options);\n};\ntoast.dismiss = (...args) => _toast.dismiss(...args);\n","import React from \"react\";\nimport {\n  Slide,\n  ToastContainerProps,\n  ToastContainer as ToastifyContainer,\n} from \"react-toastify\";\n\nimport { appendClass } from \"src/utils\";\n\ntype ExtraProps = {\n  bordered?: boolean;\n  shadow?: \"sm\" | \"md\" | \"lg\";\n};\n\nexport const ToastContainer = ({\n  position = \"bottom-right\",\n  autoClose = 5000,\n  draggable = false,\n  hideProgressBar = true,\n  containerId = \"_GLOBAL_\",\n  transition = Slide,\n  bordered,\n  shadow = \"lg\",\n  bodyClassName,\n  toastClassName,\n  ...props\n}: ToastContainerProps & ExtraProps): JSX.Element => (\n  <ToastifyContainer\n    transition={transition}\n    position={position}\n    autoClose={autoClose}\n    draggable={draggable}\n    hideProgressBar={hideProgressBar}\n    containerId={containerId}\n    {...props}\n    closeButton={false}\n    bodyClassName={`${bodyClassName || \"\"}${appendClass(\n      bordered,\n      \"toast--bordered\"\n    )}`}\n    toastClassName={`${toastClassName || \"\"}${appendClass(\n      shadow === \"md\",\n      \"toast--shadow-md\"\n    )}${appendClass(shadow === \"sm\", \"toast--shadow-sm\")}`}\n    style={{\n      width: \"unset\",\n    }}\n  />\n);\n"],"names":["_toast","_extends","args","iconType","type","ToastIcon","React","div","className","span","Toast","title","message","copyError","bordered","appendClass","createElement","Fragment","br","a","onClick","copyStringToClipboard","toast","containerId","autoClose","success","error","warning","info","loading","none","update","toastId","updates","options","render","dismiss","ToastContainer","position","draggable","hideProgressBar","transition","Slide","shadow","bodyClassName","toastClassName","props","ToastifyContainer","closeButton","style","width"],"mappings":"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"}