{"version":3,"file":"index.js","sources":["../../src/Toast/Toast.tsx","../../src/Toast/ToastContainer.tsx"],"sourcesContent":["import React, { FC, ReactNode } from \"react\";\nimport { toast as _toast, UpdateOptions } from \"react-toastify\";\n\nimport { copyStringToClipboard } from \"src/utils/clipboard\";\n\nconst iconType = (type: string): string => {\n  switch (type) {\n    case \"success\":\n      return \"text-success icon-check-outline\";\n    case \"error\":\n      return \"text-danger icon-error-outline\";\n    case \"warning\":\n      return \"text-warning icon-warning-outline\";\n    case \"info\":\n      return \"text-info icon-info-outline\";\n    case \"none\":\n      return null;\n    default:\n      return \"text-muted icon-alert\";\n  }\n};\n\nconst ToastIcon = ({ type }) => {\n  return <div className={`toast__icon ${iconType(type) || \"\"}`} />;\n};\n\ntype ToastType = \"success\" | \"error\" | \"warning\" | \"info\" | \"none\";\nexport type ToastProps = {\n  title: ReactNode;\n  message: ReactNode;\n  type: ToastType;\n  copyError: boolean;\n};\n\nexport const Toast: FC<ToastProps> = ({ title, message, type, copyError }) => (\n  <div className=\"toast\">\n    <ToastIcon type={type} />\n    <div className=\"toast__body\">\n      {title ? <div className=\"toast__title\">{title}</div> : null}\n      {message ? (\n        <div className=\"toast__message\">\n          {message}\n          {type === \"error\" && copyError ? (\n            <>\n              <br />\n              <br />\n              <a\n                onClick={() =>\n                  typeof message === \"string\" || typeof message === \"number\"\n                    ? void copyStringToClipboard(message)\n                    : void 0\n                }\n              >\n                Copy to clipboard\n              </a>\n            </>\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  </div>\n);\n\ntype ToastFunction = (\n  title: ReactNode,\n  message: ReactNode,\n  copyError?: boolean,\n  containerId?: string,\n  args?: Record<string, unknown>\n) => React.ReactText;\n\nexport interface IToast {\n  (\n    type: ToastType,\n    title: ReactNode,\n    message: ReactNode,\n    copyError?: boolean,\n    containerId?: string,\n    args?: Record<string, unknown>\n  ): React.ReactText;\n}\n\ntype Toasts = {\n  [x in ToastType]: ToastFunction;\n};\n\ninterface ToastMethods {\n  update: (toastId: React.ReactText, options?: UpdateOptions) => void;\n  dismiss: (id?: string | number | undefined) => false | void;\n}\n\nexport const toast: IToast & Toasts & ToastMethods = (\n  type,\n  title,\n  message,\n  copyError = true,\n  containerId = \"_GLOBAL_\",\n  args = {}\n): React.ReactText =>\n  _toast(<Toast {...{ type, title, message, copyError }} />, {\n    containerId,\n    ...args,\n  });\n\ntoast.success = (...args) => toast(\"success\", ...args);\ntoast.error = (...args) => toast(\"error\", ...args);\ntoast.warning = (...args) => toast(\"warning\", ...args);\ntoast.info = (...args) => toast(\"info\", ...args);\ntoast.none = (...args) => toast(\"none\", ...args);\ntoast.update = (...args) => _toast.update(...args);\ntoast.dismiss = (...args) => _toast.dismiss(...args);\n","import React, { FC } from \"react\";\nimport {\n  ToastContainer as ToastifyContainer,\n  ToastContainerProps,\n  Slide,\n} from \"react-toastify\";\n\nexport const ToastContainer: FC<ToastContainerProps> = ({\n  position = \"bottom-right\",\n  autoClose = 5000,\n  draggable = false,\n  hideProgressBar = true,\n  containerId = \"_GLOBAL_\",\n  ...props\n}) => (\n  <ToastifyContainer\n    transition={Slide}\n    position={position}\n    autoClose={autoClose}\n    draggable={draggable}\n    hideProgressBar={hideProgressBar}\n    containerId={containerId}\n    {...props}\n    closeButton={false}\n    style={{\n      width: \"unset\",\n    }}\n  />\n);\n"],"names":["_toast","iconType","type","ToastIcon","div","className","Toast","title","message","copyError","br","a","onClick","copyStringToClipboard","toast","containerId","args","_extends","success","error","warning","info","none","update","dismiss","ToastContainer","position","autoClose","draggable","hideProgressBar","props","ToastifyContainer","transition","Slide","closeButton","style","width"],"mappings":"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"}