{"version":3,"file":"index.js","sources":["../../src/Portal/Portal.tsx"],"sourcesContent":["import React, { ReactPortal } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePortal } from \"../hooks/usePortal\";\n\nexport interface PortalProps {\n  /** Portal children, for example, modal or popover */\n  children: React.ReactNode;\n\n  /** Root element z-index property */\n  zIndex?: number;\n\n  /** Root element position property */\n  position?: string;\n\n  /** Element where portal should be rendered, by default new div element is created and appended to document.body */\n  target?: HTMLElement | string;\n\n  /** Root element className */\n  className?: string;\n}\n\nconst defaultProps: Partial<PortalProps> = {\n  zIndex: 1,\n  position: \"relative\",\n};\n\nexport function Portal(props: PortalProps): ReactPortal {\n  const { children, zIndex, target, className, position } = {\n    ...defaultProps,\n    ...props,\n  };\n\n  const portal = usePortal(target);\n\n  if (!portal) {\n    return null;\n  }\n\n  return createPortal(\n    <div className={className} style={{ position: position as any, zIndex }}>\n      {children}\n    </div>,\n    portal\n  );\n}\n"],"names":["defaultProps","zIndex","position","Portal","props","children","target","className","portal","usePortal","createPortal","div","style"],"mappings":";;;;AAqBA,MAAMA,YAAY,GAAyB;AACzCC,IAAAA,MAAM,EAAE,CAAC;AACTC,IAAAA,QAAQ,EAAE,UAAU;CACrB,CAAC;AAEK,SAASC,MAAM,CAACC,KAAkB,EAAe;AACtD,IAAA,MAAM,EAAEC,QAAQ,GAAEJ,MAAM,GAAEK,MAAM,GAAEC,SAAS,GAAEL,QAAQ,GAAE,GAAG;AACxD,QAAA,GAAGF,YAAY;AACf,QAAA,GAAGI,KAAK;KACT,CAAC;AAEF,IAAA,MAAMI,MAAM,GAAGC,SAAS,CAACH,MAAM,CAAC,CAAC;IAEjC,IAAI,CAACE,MAAM,EAAE;AACX,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IAED,qBAAOE,YAAY,eACjB,KAAA,CAAA,aAAA,CAACC,KAAG,EAAA;AAACJ,QAAAA,SAAS,EAAEA,SAAS;AAAEK,QAAAA,KAAK,EAAE;AAAEV,YAAAA,QAAQ,EAAEA,QAAQ;YAASD,MAAM;AAAE,SAAA;AACpEI,KAAAA,EAAAA,QAAQ,CACL,EACNG,MAAM,CACP,CAAC;AACH;;;;"}